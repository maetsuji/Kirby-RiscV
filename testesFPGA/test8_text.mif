DEPTH = 16384;
WIDTH = 32;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT
BEGIN
00000000 : 5c10206f;   % 158: 	j StartGame %
00000001 : ff010113;   % 3: 	addi sp,sp,-16 %
00000002 : 00112023;   % 4: 	sw ra,0(sp) %
00000003 : 00812223;   % 5: 	sw s0,4(sp) %
00000004 : 00912423;   % 6: 	sw s1,8(sp) %
00000005 : 01212623;   % 7: 	sw s2,12(sp) %
00000006 : 0fc10417;   % 9: 	la s0,Obj0ID %
00000007 : fe840413;   % 9:  %
00000008 : 000004b3;   % 10: 	mv s1,zero			# s1, contador de objetos geral %
00000009 : 00042903;   % 13: 	lw s2,0(s0) %
0000000a : 02090063;   % 14: 	beq s2,zero,NewInstance %
0000000b : 0040006f;   % 15: 	j BuildNextObj %
0000000c : 00148493;   % 18: 	addi s1,s1,1 %
0000000d : 01400293;   % 19: 	li t0,20 %
0000000e : 2e548863;   % 20: 	beq s1,t0,FimBuildObject %
0000000f : 2e058663;   % 21: 	beq a1,zero,FimBuildObject %
00000010 : 01440413;   % 23: 	addi s0,s0,20 %
00000011 : fe1ff06f;   % 24: 	j CheckBuildObjs %
00000012 : fff58593;   % 27: 	addi a1,a1,-1 %
00000013 : 00a42023;   % 30: 	sw a0,0(s0) # id %
00000014 : 00c42223;   % 32: 	sw a2,4(s0) # posX e posY, pois e possivel armazenar diretamente a word com a posicao de referencia %
00000015 : 00d41423;   % 34: 	sh a3,8(s0) # dir %
00000016 : 00e41523;   % 36: 	sh a4,10(s0) # status %
00000017 : 00041623;   % 38: 	sh zero,12(s0) # lifeFrames %
00000018 : 00041723;   % 40: 	sh zero,14(s0) # anim %
00000019 : 00042823;   % 42: 	sw zero,16(s0) # posOG %
0000001a : 00100293;   % 44: 	li t0,1 %
0000001b : 0a550263;   % 45: 	beq a0,t0,BuildDust %
0000001c : 00200293;   % 46: 	li t0,2 %
0000001d : 0c550a63;   % 47: 	beq a0,t0,BuildTinyDust %
0000001e : 00300293;   % 48: 	li t0,3 %
0000001f : 16550863;   % 49: 	beq a0,t0,BuildFire %
00000020 : 00400293;   % 50: 	li t0,4 %
00000021 : 18550e63;   % 51: 	beq a0,t0,BuildIce %
00000022 : 00600293;   % 52: 	li t0,6 %
00000023 : 20550a63;   % 53: 	beq a0,t0,BuildAir %
00000024 : 00700293;   % 54: 	li t0,7 %
00000025 : 24550263;   % 55: 	beq a0,t0,BuildStar %
00000026 : 01e00293;   % 56: 	li t0,30 %
00000027 : 26550a63;   % 57: 	beq a0,t0,BuildCommonEnemy %
00000028 : 01f00293;   % 58: 	li t0,31 %
00000029 : 26550663;   % 59: 	beq a0,t0,BuildCommonEnemy %
0000002a : 02000293;   % 60: 	li t0,32 %
0000002b : 26550263;   % 61: 	beq a0,t0,BuildCommonEnemy %
0000002c : 00800293;   % 62: 	li t0,8  %
0000002d : 02550a63;   % 63: 	beq a0,t0,BuildEnemyAir %
0000002e : 00900293;   % 64: 	li t0,9  %
0000002f : 12550863;   % 65: 	beq a0,t0,BuildFire # o que importa para a colisao e apenas o ID %
00000030 : 00a00293;   % 66: 	li t0,10 %
00000031 : 14550e63;   % 67: 	beq a0,t0,BuildIce %
00000032 : 02100293;   % 68: 	li t0,33 %
00000033 : 24550263;   % 69: 	beq a0,t0,BuildCommonEnemy %
00000034 : 00b00293;   % 70: 	li t0,11 %
00000035 : 00550263;   % 71: 	beq a0,t0,BuildHit %
00000036 : 00c42223;   % 74: 	sw a2,4(s0) # posX e posY %
00000037 : 00800293;   % 76: 	li t0,8 %
00000038 : 00541623;   % 77: 	sh t0,12(s0) # lifeFrames %
00000039 : f4dff06f;   % 79: 	j BuildNextObj %
0000003a : 01061393;   % 82: 	slli t2,a2,16 %
0000003b : 0103d393;   % 83: 	srli t2,t2,16 # isola posX %
0000003c : 01065e13;   % 84: 	srli t3,a2,16 # isola posY %
0000003d : ff438393;   % 86: 	addi t2,t2,-12 # offset inicial %
0000003e : 010e1e13;   % 87: 	slli t3,t3,16 %
0000003f : 007e0e33;   % 88: 	add t3,t3,t2 %
00000040 : 01c42223;   % 89: 	sw t3,4(s0) # posX e posY %
00000041 : 02800293;   % 91: 	li t0,40 %
00000042 : 00541623;   % 92: 	sh t0,12(s0) # lifeFrames %
00000043 : f25ff06f;   % 94: 	j BuildNextObj %
00000044 : 00c00293;   % 97: 	li t0,12 %
00000045 : 00068463;   % 98: 	beq a3,zero,DustBreakRtoL %
00000046 : ff400293;   % 99: 	li t0,-12 %
00000047 : 01061393;   % 102: 	slli t2,a2,16 %
00000048 : 0103d393;   % 103: 	srli t2,t2,16 # isola posX %
00000049 : 01065e13;   % 104: 	srli t3,a2,16 # isola posY %
0000004a : 005383b3;   % 106: 	add t2,t2,t0 # define em qual lado do kirby vai aparecer %
0000004b : 004e0e13;   % 107: 	addi t3,t3,4  %
0000004c : 010e1e13;   % 109: 	slli t3,t3,16 %
0000004d : 007e0e33;   % 110: 	add t3,t3,t2 %
0000004e : 01c42223;   % 111: 	sw t3,4(s0) # posX e posY %
0000004f : 00400293;   % 114: 	li t0,4 %
00000050 : 00541623;   % 115: 	sh t0,12(s0) # lifeFrames %
00000051 : eedff06f;   % 117: 	j BuildNextObj %
00000052 : 02070663;   % 122: 	beq a4,zero,DrawBuildTinyLU # 0 = esq cima %
00000053 : 00100293;   % 123: 	li t0,1 %
00000054 : 02570863;   % 124: 	beq a4,t0,DrawBuildTinyMU # 1 = meio cima %
00000055 : 00200293;   % 125: 	li t0,2 %
00000056 : 02570a63;   % 126: 	beq a4,t0,DrawBuildTinyRU # 2 = dir cima %
00000057 : 00300293;   % 127: 	li t0,3 %
00000058 : 02570c63;   % 128: 	beq a4,t0,DrawBuildTinyLD # 3 = esq baixo %
00000059 : 00400293;   % 129: 	li t0,4 %
0000005a : 02570e63;   % 130: 	beq a4,t0,DrawBuildTinyMD # 4 = meio baixo %
0000005b : 00500293;   % 131: 	li t0,5 %
0000005c : 04570063;   % 132: 	beq a4,t0,DrawBuildTinyRD # 5 = dir baixo  %
0000005d : 01400313;   % 134: 	li t1,20 %
0000005e : ff600393;   % 135: 	li t2,-10 %
0000005f : 03c0006f;   % 136: 	j DoneBuildTinyPos %
00000060 : 02400313;   % 138: 	li t1,36 %
00000061 : ff600393;   % 139: 	li t2,-10 %
00000062 : 0300006f;   % 140: 	j DoneBuildTinyPos %
00000063 : 03400313;   % 142: 	li t1,52 %
00000064 : ff400393;   % 143: 	li t2,-12 %
00000065 : 0240006f;   % 144: 	j DoneBuildTinyPos %
00000066 : 01400313;   % 146: 	li t1,20 %
00000067 : 00600393;   % 147: 	li t2,6 %
00000068 : 0180006f;   % 148: 	j DoneBuildTinyPos %
00000069 : 02400313;   % 150: 	li t1,36 %
0000006a : 00600393;   % 151: 	li t2,6 %
0000006b : 00c0006f;   % 152: 	j DoneBuildTinyPos %
0000006c : 03400313;   % 154: 	li t1,52 %
0000006d : 00600393;   % 155: 	li t2,6 %
0000006e : 00069463;   % 158: 	bne a3,zero,BuildTinyDustRight %
0000006f : 40600333;   % 159: 	sub t1,zero,t1 # se jogador estiver para a esquerda inverte a posicao horizontal %
00000070 : 01061e93;   % 162: 	slli t4,a2,16 %
00000071 : 010ede93;   % 163: 	srli t4,t4,16 # isola posX %
00000072 : 01065e13;   % 164: 	srli t3,a2,16 # isola posY %
00000073 : 006e8eb3;   % 166: 	add t4,t4,t1 %
00000074 : 007e0e33;   % 167: 	add t3,t3,t2 %
00000075 : 010e1e13;   % 169: 	slli t3,t3,16 %
00000076 : 01de0e33;   % 170: 	add t3,t3,t4 %
00000077 : 01c42223;   % 171: 	sw t3,4(s0) # posX e posY %
00000078 : 00500293;   % 173: 	li t0,5 %
00000079 : 00541623;   % 174: 	sh t0,12(s0) # lifeFrames %
0000007a : e49ff06f;   % 176: 	j BuildNextObj %
0000007b : 01061393;   % 181: 	slli t2,a2,16 %
0000007c : 0103d393;   % 182: 	srli t2,t2,16 # isola posX %
0000007d : 01065e13;   % 183: 	srli t3,a2,16 # isola posY %
0000007e : 00f00293;   % 185: 	li t0,15 # offset inicial do fogo  %
0000007f : 00069463;   % 186: 	bne a3,zero,BuildFireRight %
00000080 : 405002b3;   % 187: 	sub t0,zero,t0 %
00000081 : 005383b3;   % 189: 	add t2,t2,t0 %
00000082 : 010e1e13;   % 191: 	slli t3,t3,16 %
00000083 : 007e0e33;   % 192: 	add t3,t3,t2 %
00000084 : 01c42223;   % 193: 	sw t3,4(s0) # posX e posY %
00000085 : 00a00293;   % 195: 	li t0,10 %
00000086 : 00541623;   % 196: 	sh t0,12(s0) # lifeFrames %
00000087 : e15ff06f;   % 198: 	j BuildNextObj %
00000088 : 00800293;   % 204: 	li t0,8   %
00000089 : fec00313;   % 205: 	li t1,-20 %
0000008a : 04070663;   % 206: 	beq a4,zero,DoneIcePos %
0000008b : 01400293;   % 208: 	li t0,20 %
0000008c : 00000313;   % 209: 	li t1,0 %
0000008d : 00100393;   % 210: 	li t2,1 %
0000008e : 02770e63;   % 211: 	beq a4,t2,DoneIcePos %
0000008f : 00800293;   % 213: 	li t0,8   %
00000090 : 01400313;   % 214: 	li t1,20 %
00000091 : 00200393;   % 215: 	li t2,2 %
00000092 : 02770663;   % 216: 	beq a4,t2,DoneIcePos %
00000093 : ff800293;   % 218: 	li t0,-8   %
00000094 : 01400313;   % 219: 	li t1,20 %
00000095 : 00300393;   % 220: 	li t2,3 %
00000096 : 00770e63;   % 221: 	beq a4,t2,DoneIcePos %
00000097 : fec00293;   % 223: 	li t0,-20 %
00000098 : 00000313;   % 224: 	li t1,0 %
00000099 : 00400393;   % 225: 	li t2,4 %
0000009a : 00770663;   % 226: 	beq a4,t2,DoneIcePos %
0000009b : ff800293;   % 228: 	li t0,-8   %
0000009c : fec00313;   % 229: 	li t1,-20 %
0000009d : 01061393;   % 232: 	slli t2,a2,16 %
0000009e : 0103d393;   % 233: 	srli t2,t2,16 # isola posX %
0000009f : 01065e13;   % 234: 	srli t3,a2,16 # isola posY %
000000a0 : 005383b3;   % 236: 	add t2,t2,t0 %
000000a1 : 006e0e33;   % 237: 	add t3,t3,t1 %
000000a2 : 010e1e13;   % 239: 	slli t3,t3,16 %
000000a3 : 007e0e33;   % 240: 	add t3,t3,t2 %
000000a4 : 01c42223;   % 241: 	sw t3,4(s0) # posX e posY %
000000a5 : 00a00293;   % 243: 	li t0,10 %
000000a6 : 00541623;   % 244: 	sh t0,12(s0) # lifeFrames %
000000a7 : d95ff06f;   % 246: 	j BuildNextObj %
000000a8 : 01061393;   % 249: 	slli t2,a2,16 %
000000a9 : 0103d393;   % 250: 	srli t2,t2,16 # isola posX %
000000aa : 01065e13;   % 251: 	srli t3,a2,16 # isola posY %
000000ab : 00c00293;   % 253: 	li t0,12 # offset inicial do ar  %
000000ac : 00069463;   % 254: 	bne a3,zero,BuildAirRight %
000000ad : 405002b3;   % 255: 	sub t0,zero,t0 %
000000ae : 005383b3;   % 257: 	add t2,t2,t0 %
000000af : ffce0e13;   % 258: 	addi t3,t3,-4 %
000000b0 : 010e1e13;   % 260: 	slli t3,t3,16 %
000000b1 : 007e0e33;   % 261: 	add t3,t3,t2 %
000000b2 : 01c42223;   % 262: 	sw t3,4(s0) # posX e posY %
000000b3 : 01800293;   % 264: 	li t0,24 %
000000b4 : 00541623;   % 265: 	sh t0,12(s0) # lifeFrames %
000000b5 : d5dff06f;   % 267: 	j BuildNextObj %
000000b6 : 01061393;   % 270: 	slli t2,a2,16 %
000000b7 : 0103d393;   % 271: 	srli t2,t2,16 # isola posX %
000000b8 : 01065e13;   % 272: 	srli t3,a2,16 # isola posY %
000000b9 : 00c00293;   % 274: 	li t0,12 # offset inicial da estrela %
000000ba : 00069463;   % 275: 	bne a3,zero,BuildStarRight %
000000bb : 405002b3;   % 276: 	sub t0,zero,t0 %
000000bc : 005383b3;   % 278: 	add t2,t2,t0 %
000000bd : ffce0e13;   % 279: 	addi t3,t3,-4 %
000000be : 010e1e13;   % 281: 	slli t3,t3,16 %
000000bf : 007e0e33;   % 282: 	add t3,t3,t2 %
000000c0 : 01c42223;   % 283: 	sw t3,4(s0) # posX e posY %
000000c1 : 0c800293;   % 285: 	li t0,200 %
000000c2 : 00541623;   % 286: 	sh t0,12(s0) # lifeFrames %
000000c3 : d25ff06f;   % 288: 	j BuildNextObj %
000000c4 : 00100293;   % 291: 	li t0,1 %
000000c5 : 00541523;   % 292: 	sh t0,10(s0) # status %
000000c6 : 00541623;   % 294: 	sh t0,12(s0) # lifeFrames %
000000c7 : 00c42223;   % 296: 	sw a2,4(s0) %
000000c8 : 00c42823;   % 298: 	sw a2,16(s0) # posOG e definida %
000000c9 : d0dff06f;   % 300: 	j BuildNextObj %
000000ca : 00012083;   % 305: 	lw ra,0(sp) %
000000cb : 00412403;   % 306: 	lw s0,4(sp) %
000000cc : 00812483;   % 307: 	lw s1,8(sp) %
000000cd : 00c12903;   % 308: 	lw s2,12(sp) %
000000ce : 01010113;   % 309: 	addi sp,sp,16 %
000000cf : 00008067;   % 311: 	ret %
000000d0 : ffc10113;   % 316: 	addi sp,sp,-4 %
000000d1 : 00112023;   % 317: 	sw ra,0(sp) %
000000d2 : 0fc10417;   % 319: 	la s0,Obj0ID %
000000d3 : cb840413;   % 319:  %
000000d4 : 000004b3;   % 320: 	mv s1,zero			# s1, contador de objetos geral %
000000d5 : 00042903;   % 323: 	lw s2,0(s0) %
000000d6 : 01200533;   % 325: 	mv a0,s2 %
000000d7 : 00100893;   % 326: 	li a7,1 %
000000d8 : 0fc10517;   % 329: 	la a0,endl %
000000d9 : f3450513;   % 329:  %
000000da : 00400893;   % 330: 	li a7,4 %
000000db : 00091c63;   % 333: 	bne s2,zero,DrawObjAtual %
000000dc : 00148493;   % 336: 	addi s1,s1,1 %
000000dd : 01400293;   % 337: 	li t0,20 %
000000de : 3e5482e3;   % 338: 	beq s1,t0,FimDrawObjects %
000000df : 01440413;   % 340: 	addi s0,s0,20 %
000000e0 : fd5ff06f;   % 341: 	j IterateDrawObjs %
000000e1 : 00042983;   % 345: 	lw s3,0(s0) # ID %
000000e2 : 00800533;   % 347: 	mv a0,s0 %
000000e3 : 01e9a593;   % 348: 	slti a1,s3,30 # se o id for de um objeto envia 1 para despawnar, se for um inimigo envia 0 para ativar/desativar %
000000e4 : 6a9000ef;   % 349: 	jal CheckScreenBounds %
000000e5 : 00441a03;   % 352: 	lh s4,4(s0) # PosX %
000000e6 : 00641a83;   % 353: 	lh s5,6(s0) # PosY %
000000e7 : 00845b03;   % 354: 	lhu s6,8(s0) # Dir %
000000e8 : 00a41b83;   % 355: 	lh s7,10(s0) # Status %
000000e9 : 00c45c03;   % 356: 	lhu s8,12(s0) # LifeFrames %
000000ea : 00e45c83;   % 357: 	lhu s9,14(s0) # Anim/Assist %
000000eb : 00100293;   % 360: 	li t0,1 %
000000ec : 06598863;   % 361: 	beq s3,t0,DrawDust %
000000ed : 00200293;   % 362: 	li t0,2 %
000000ee : 08598a63;   % 363: 	beq s3,t0,DrawTinyDust %
000000ef : 00300293;   % 364: 	li t0,3 %
000000f0 : 1a598c63;   % 365: 	beq s3,t0,DrawFire %
000000f1 : 00400293;   % 366: 	li t0,4 %
000000f2 : 24598663;   % 367: 	beq s3,t0,DrawIce %
000000f3 : 00600293;   % 368: 	li t0,6 %
000000f4 : 12598663;   % 369: 	beq s3,t0,DrawAir %
000000f5 : 00700293;   % 370: 	li t0,7 %
000000f6 : 28598a63;   % 371: 	beq s3,t0,DrawStar %
000000f7 : 01e00293;   % 372: 	li t0,30 %
000000f8 : 3c598863;   % 373: 	beq s3,t0,DrawWaddleDee %
000000f9 : 01f00293;   % 374: 	li t0,31 %
000000fa : 5c598c63;   % 375: 	beq s3,t0,DrawHotHead %
000000fb : 02000293;   % 376: 	li t0,32 %
000000fc : 005982e3;   % 377: 	beq s3,t0,DrawChilly %
000000fd : 00800293;   % 378: 	li t0,8  %
000000fe : 30598063;   % 379: 	beq s3,t0,DrawEnemyAir # criado pelo whispy, bem similar ao fogo %
000000ff : 00900293;   % 380: 	li t0,9 %
00000100 : 16598c63;   % 381: 	beq s3,t0,DrawFire %
00000101 : 00a00293;   % 382: 	li t0,10 %
00000102 : 20598663;   % 383: 	beq s3,t0,DrawIce %
00000103 : 02100293;   % 384: 	li t0,33 %
00000104 : 3a598063;   % 385: 	beq s3,t0,DrawWaddleDee ### DrawApple %
00000105 : 00b00293;   % 386: 	li t0,11 %
00000106 : 32598e63;   % 387: 	beq s3,t0,DrawHit ### DrawApple %
00000107 : f55ff06f;   % 389: 	j DrawNextObj %
00000108 : 010a9293;   % 393: 	slli t0,s5,16 %
00000109 : 014285b3;   % 394: 	add a1,t0,s4 %
0000010a : 016006b3;   % 396: 	mv a3,s6 %
0000010b : 00000733;   % 397: 	mv a4,zero %
0000010c : 0fc2a517;   % 399: 	la a0,dust0 # frames com vida 4 e 3 %
0000010d : 7fc50513;   % 399:  %
0000010e : 00200293;   % 400: 	li t0,2 %
0000010f : 2f82c2e3;   % 401: 	bgt s8,t0,DrawObjReady %
00000110 : 0fc2b517;   % 402: 	la a0,dust1 # frames com vida 2 e 1 %
00000111 : 87850513;   % 402:  %
00000112 : 2d90006f;   % 403: 	j DrawObjReady %
00000113 : 020b8663;   % 407: 	beq s7,zero,DrawTinyLU # 0 = esq cima %
00000114 : 00100293;   % 408: 	li t0,1 %
00000115 : 025b8863;   % 409: 	beq s7,t0,DrawTinyMU # 1 = meio cima %
00000116 : 00200293;   % 410: 	li t0,2 %
00000117 : 025b8a63;   % 411: 	beq s7,t0,DrawTinyRU # 2 = dir cima %
00000118 : 00300293;   % 412: 	li t0,3 %
00000119 : 025b8c63;   % 413: 	beq s7,t0,DrawTinyLD # 3 = esq baixo %
0000011a : 00400293;   % 414: 	li t0,4 %
0000011b : 025b8e63;   % 415: 	beq s7,t0,DrawTinyMD # 4 = meio baixo %
0000011c : 00500293;   % 416: 	li t0,5 %
0000011d : 045b8063;   % 417: 	beq s7,t0,DrawTinyRD # 5 = dir baixo  %
0000011e : ffe00313;   % 419: 	li t1,-2 %
0000011f : 001a8a93;   % 420: 	addi s5,s5,1 %
00000120 : 03c0006f;   % 421: 	j DoneTinyPos %
00000121 : ffc00313;   % 423: 	li t1,-4 %
00000122 : 001a8a93;   % 424: 	addi s5,s5,1 %
00000123 : 0300006f;   % 425: 	j DoneTinyPos %
00000124 : ffd00313;   % 427: 	li t1,-3 %
00000125 : 001a8a93;   % 428: 	addi s5,s5,1 %
00000126 : 0240006f;   % 429: 	j DoneTinyPos %
00000127 : ffe00313;   % 431: 	li t1,-2 %
00000128 : fffa8a93;   % 432: 	addi s5,s5,-1 %
00000129 : 0180006f;   % 433: 	j DoneTinyPos %
0000012a : ffc00313;   % 435: 	li t1,-4 %
0000012b : fffa8a93;   % 436: 	addi s5,s5,-1 %
0000012c : 00c0006f;   % 437: 	j DoneTinyPos %
0000012d : ffd00313;   % 439: 	li t1,-3 %
0000012e : fffa8a93;   % 440: 	addi s5,s5,-1 %
0000012f : 000b1463;   % 443: 	bne s6,zero,DrawTinyDustRight %
00000130 : 40600333;   % 444: 	sub t1,zero,t1 # se jogador estiver para a esquerda inverte a posicao horizontal %
00000131 : 006a0a33;   % 447: 	add s4,s4,t1 %
00000132 : 01441223;   % 449: 	sh s4,4(s0) # PosX %
00000133 : 01541323;   % 450: 	sh s5,6(s0) # PosY %
00000134 : 010a9293;   % 452: 	slli t0,s5,16 %
00000135 : 014285b3;   % 453: 	add a1,t0,s4 %
00000136 : 016006b3;   % 455: 	mv a3,s6 %
00000137 : 00000733;   % 456: 	mv a4,zero %
00000138 : 0fc2b517;   % 458: 	la a0,tinyDust0 %
00000139 : eb850513;   % 458:  %
0000013a : 002c7293;   % 459: 	andi t0,s8,2 %
0000013b : 22028ae3;   % 460: 	beq t0,zero,DrawObjReady %
0000013c : 0fc2b517;   % 461: 	la a0,tinyDust1 %
0000013d : ef450513;   % 461:  %
0000013e : 2290006f;   % 463: 	j DrawObjReady %
0000013f : 00800533;   % 467: 	mv a0,s0 %
00000140 : 5f1040ef;   % 468: 	jal UpdateCollision %
00000141 : 00800533;   % 470: 	mv a0,s0 %
00000142 : 621000ef;   % 471: 	jal ObjectCollisionCheck %
00000143 : 00042283;   % 472: 	lw t0,0(s0) %
00000144 : e60280e3;   % 473: 	beqz t0,DrawNextObj %
00000145 : 00b00313;   % 474: 	li t1,11 %
00000146 : e4530ce3;   % 475: 	beq t1,t0,DrawNextObj %
00000147 : 01000293;   % 477: 	li t0,16 %
00000148 : 00400313;   % 478: 	li t1,4 # velocidade de 28 a 19 %
00000149 : 0382c063;   % 479: 	bgt s8,t0,DoneAirSpeed %
0000014a : 00c00293;   % 480: 	li t0,12 %
0000014b : 00200313;   % 481: 	li t1,2 # velocidade de 16 a 13 %
0000014c : 0182ca63;   % 482: 	bgt s8,t0,DoneAirSpeed %
0000014d : 00800293;   % 483: 	li t0,8 %
0000014e : 00100313;   % 484: 	li t1,1 # velocidade de 13 a 7 %
0000014f : 0182c463;   % 485: 	bgt s8,t0,DoneAirSpeed %
00000150 : 00000313;   % 486: 	li t1,0 # velocidade de 6 a 1 %
00000151 : 000b1463;   % 489: 	bne s6,zero,DrawAirRight %
00000152 : 40600333;   % 490: 	sub t1,zero,t1 %
00000153 : 006a0a33;   % 493: 	add s4,s4,t1 %
00000154 : 01441223;   % 495: 	sh s4,4(s0) # atualiza PosX %
00000155 : 01541323;   % 496: 	sh s5,6(s0) # atualiza PosY %
00000156 : 010a9293;   % 498: 	slli t0,s5,16 %
00000157 : 014285b3;   % 499: 	add a1,t0,s4 %
00000158 : 0fc2a517;   % 501: 	la a0,air %
00000159 : 7e450513;   % 501:  %
0000015a : 00000633;   % 502: 	mv a2,zero %
0000015b : 016006b3;   % 503: 	mv a3,s6 %
0000015c : 00000733;   % 504: 	mv a4,zero %
0000015d : 1ad0006f;   % 506: 	j DrawObjReady %
0000015e : 00800533;   % 510: 	mv a0,s0 %
0000015f : 575040ef;   % 511: 	jal UpdateCollision %
00000160 : 00800533;   % 513: 	mv a0,s0 %
00000161 : 5a5000ef;   % 514: 	jal ObjectCollisionCheck %
00000162 : 00042283;   % 515: 	lw t0,0(s0) %
00000163 : de0282e3;   % 516: 	beqz t0,DrawNextObj %
00000164 : 00b00313;   % 517: 	li t1,11 %
00000165 : dc530ee3;   % 518: 	beq t1,t0,DrawNextObj %
00000166 : 000b0663;   % 520: 	beq s6,zero,MoveFireLeft %
00000167 : 004a0a13;   % 521: 	addi s4,s4,4 %
00000168 : 0080006f;   % 522: 	j MoveFireHor %
00000169 : ffca0a13;   % 524: 	addi s4,s4,-4 %
0000016a : 001c7293;   % 527: 	andi t0,s8,1 %
0000016b : 00029a63;   % 528: 	bne t0,zero,DoneMoveFireVert # divide a movimentacao vertical por 1 %
0000016c : 000b8663;   % 529: 	beq s7,zero,MoveFireDown %
0000016d : fffa8a93;   % 530: 	addi s5,s5,-1 %
0000016e : 0080006f;   % 531: 	j DoneMoveFireVert %
0000016f : 001a8a93;   % 533: 	addi s5,s5,1 %
00000170 : 01441223;   % 536: 	sh s4,4(s0) # atualiza PosX %
00000171 : 01541323;   % 537: 	sh s5,6(s0) # atualiza PosY %
00000172 : 010a9293;   % 539: 	slli t0,s5,16 %
00000173 : 014285b3;   % 540: 	add a1,t0,s4 %
00000174 : 016006b3;   % 542: 	mv a3,s6 %
00000175 : 00000733;   % 543: 	mv a4,zero %
00000176 : 0fc2b517;   % 545: 	la a0,fire0 # frames com vida 8 e 7 %
00000177 : 87850513;   % 545:  %
00000178 : 00600293;   % 546: 	li t0,6  %
00000179 : 1382cee3;   % 547: 	bgt s8,t0,DrawObjReady %
0000017a : 0fc2b517;   % 548: 	la a0,fire1 # frames com vida 6 e 5 %
0000017b : 97450513;   % 548:  %
0000017c : 00400293;   % 549: 	li t0,4 %
0000017d : 1382c6e3;   % 550: 	bgt s8,t0,DrawObjReady %
0000017e : 0fc2b517;   % 551: 	la a0,fire2 # frames com vida 4 e 3 %
0000017f : a7050513;   % 551:  %
00000180 : 00200293;   % 552: 	li t0,2  %
00000181 : 1182cee3;   % 553: 	bgt s8,t0,DrawObjReady %
00000182 : 0fc2b517;   % 554: 	la a0,fire3 # frames com vida 2 e 1 %
00000183 : b6c50513;   % 554:  %
00000184 : 1110006f;   % 555: 	j DrawObjReady %
00000185 : 00800533;   % 559: 	mv a0,s0 %
00000186 : 4d9040ef;   % 560: 	jal UpdateCollision %
00000187 : 00800533;   % 562: 	mv a0,s0 %
00000188 : 509000ef;   % 563: 	jal ObjectCollisionCheck %
00000189 : 00042283;   % 564: 	lw t0,0(s0) %
0000018a : d40284e3;   % 565: 	beqz t0,DrawNextObj %
0000018b : 00b00313;   % 566: 	li t1,11 %
0000018c : d45300e3;   % 567: 	beq t1,t0,DrawNextObj %
0000018d : 00442583;   % 569: 	lw a1,4(s0) %
0000018e : 016006b3;   % 571: 	mv a3,s6 %
0000018f : 00000733;   % 572: 	mv a4,zero %
00000190 : 0fc2b517;   % 574: 	la a0,ice1 # frames com vida 10 a 7 %
00000191 : ccc50513;   % 574:  %
00000192 : 00600293;   % 575: 	li t0,6  %
00000193 : 0d82cae3;   % 576: 	bgt s8,t0,DrawObjReady %
00000194 : 0fc2a517;   % 577: 	la a0,dust1 # frames com vida 6 a 3 %
00000195 : 66850513;   % 577:  %
00000196 : 00200293;   % 578: 	li t0,2 %
00000197 : 0d82c2e3;   % 579: 	bgt s8,t0,DrawObjReady %
00000198 : 0fc2b517;   % 580: 	la a0,ice0 # frames com vida 2 e 1 %
00000199 : c2050513;   % 580:  %
0000019a : 0b90006f;   % 581: 	j DrawObjReady %
0000019b : 00800533;   % 585: 	mv a0,s0 %
0000019c : 481040ef;   % 586: 	jal UpdateCollision %
0000019d : 00800533;   % 588: 	mv a0,s0 %
0000019e : 4b1000ef;   % 589: 	jal ObjectCollisionCheck %
0000019f : 00042283;   % 590: 	lw t0,0(s0) %
000001a0 : ce0288e3;   % 591: 	beqz t0,DrawNextObj %
000001a1 : 00b00313;   % 592: 	li t1,11 %
000001a2 : ce5304e3;   % 593: 	beq t1,t0,DrawNextObj %
000001a3 : 00400293;   % 595: 	li t0,4  %
000001a4 : 000b1463;   % 597: 	bne s6,zero,DrawStarRight %
000001a5 : 405002b3;   % 598: 	sub t0,zero,t0 %
000001a6 : 005a0a33;   % 601: 	add s4,s4,t0 %
000001a7 : 01441223;   % 603: 	sh s4,4(s0) # atualiza PosX %
000001a8 : 01541323;   % 604: 	sh s5,6(s0) # atualiza PosY %
000001a9 : 010a9293;   % 606: 	slli t0,s5,16 %
000001aa : 014285b3;   % 607: 	add a1,t0,s4 %
000001ab : 00000633;   % 609: 	mv a2,zero %
000001ac : 016006b3;   % 610: 	mv a3,s6 %
000001ad : 00000733;   % 611: 	mv a4,zero %
000001ae : 00fc7313;   % 613: 	andi t1,s8,15 %
000001af : 0fc2b517;   % 615: 	la a0,star0 # frames com vida 0 a 3 %
000001b0 : 3bc50513;   % 615:  %
000001b1 : 00400293;   % 616: 	li t0,4 %
000001b2 : 04534ce3;   % 617: 	blt t1,t0,DrawObjReady %
000001b3 : 0fc2b517;   % 618: 	la a0,star3 # frames com vida 4 a 7 %
000001b4 : 6d050513;   % 618:  %
000001b5 : 00800293;   % 619: 	li t0,8 %
000001b6 : 045344e3;   % 620: 	blt t1,t0,DrawObjReady %
000001b7 : 0fc2b517;   % 621: 	la a0,star2 # frames com vida 8 a 11 %
000001b8 : 5b450513;   % 621:  %
000001b9 : 00c00293;   % 622: 	li t0,12 %
000001ba : 02534ce3;   % 623: 	blt t1,t0,DrawObjReady %
000001bb : 0fc2b517;   % 624: 	la a0,star1 # frames de 12 a 15 %
000001bc : 49850513;   % 624:  %
000001bd : 02d0006f;   % 625: 	j DrawObjReady %
000001be : ffca0a13;   % 630: 	addi s4,s4,-4  %
000001bf : 003c7293;   % 632: 	andi t0,s8,3 %
000001c0 : 00200313;   % 633: 	li t1,2 %
000001c1 : 02028463;   % 634: 	beqz t0,EndMoveEnemyAir %
000001c2 : 00100393;   % 635: 	li t2,1 %
000001c3 : 00000333;   % 636: 	mv t1,zero %
000001c4 : 00728e63;   % 637: 	beq t0,t2,EndMoveEnemyAir %
000001c5 : 00200393;   % 638: 	li t2,2 %
000001c6 : fff00313;   % 639: 	li t1,-1 %
000001c7 : 00728863;   % 640: 	beq t0,t2,EndMoveEnemyAir %
000001c8 : 00300393;   % 641: 	li t2,3 %
000001c9 : 00000333;   % 642: 	mv t1,zero %
000001ca : 00728263;   % 643: 	beq t0,t2,EndMoveEnemyAir %
000001cb : 006a8ab3;   % 646: 	add s5,s5,t1 %
000001cc : 01441223;   % 648: 	sh s4,4(s0) # atualiza PosX %
000001cd : 01541323;   % 649: 	sh s5,6(s0) # atualiza PosY %
000001ce : 010a9293;   % 651: 	slli t0,s5,16 %
000001cf : 014285b3;   % 652: 	add a1,t0,s4 %
000001d0 : 016006b3;   % 654: 	mv a3,s6 %
000001d1 : 00000733;   % 655: 	mv a4,zero %
000001d2 : 0fc2a517;   % 657: 	la a0,air  %
000001d3 : 5fc50513;   % 657:  %
000001d4 : 7d00006f;   % 658: 	j DrawObjReady %
000001d5 : 00442583;   % 662: 	lw a1,4(s0) %
000001d6 : 016006b3;   % 664: 	mv a3,s6 %
000001d7 : 00000733;   % 665: 	mv a4,zero %
000001d8 : 01800533;   % 667: 	mv a0,s8 %
000001d9 : 00100893;   % 668: 	li a7,1 %
000001da : 0fc10517;   % 671: 	la a0,endl %
000001db : b2c50513;   % 671:  %
000001dc : 00400893;   % 672: 	li a7,4 %
000001dd : 0fc2b517;   % 675: 	la a0,hit0 # frames com vida 8 e 7 %
000001de : cbc50513;   % 675:  %
000001df : 00600293;   % 676: 	li t0,6  %
000001e0 : 7b82c063;   % 677: 	bgt s8,t0,DrawObjReady %
000001e1 : 0fc2b517;   % 678: 	la a0,powerUp1 # frames com vida 6 e 5 %
000001e2 : 0dc50513;   % 678:  %
000001e3 : 00400293;   % 679: 	li t0,4 %
000001e4 : 7982c863;   % 680: 	bgt s8,t0,DrawObjReady %
000001e5 : 0fc2b517;   % 681: 	la a0,hit1 # frames com vida 4 e 3 %
000001e6 : da850513;   % 681:  %
000001e7 : 00200293;   % 682: 	li t0,2 %
000001e8 : 7982c063;   % 683: 	bgt s8,t0,DrawObjReady %
000001e9 : 0fc2b517;   % 684: 	la a0,hit2 # frames com vida 2 e 1 %
000001ea : ea450513;   % 684:  %
000001eb : 7740006f;   % 686: 	j DrawObjReady %
000001ec : bd7050e3;   % 690: 	ble s7,zero,DrawNextObj # se estiver com status -1 = morto, 0 = desativado (fora da tela),  1 = ativado, 2 = atingido, 3 = sendo puxado %
000001ed : 00300293;   % 692: 	li t0,3 %
000001ee : 105b8e63;   % 693: 	beq s7,t0,PullingWaddleDee %
000001ef : 000c8663;   % 695: 	beq s9,zero,SkipSubExtraWaddle # tempo %
000001f0 : fffc8c93;   % 696: 	addi s9,s9,-1 %
000001f1 : 01941723;   % 697: 	sh s9,14(s0) %
000001f2 : 00200293;   % 700: 	li t0,2 %
000001f3 : 065b8e63;   % 701: 	beq s7,t0,WaddleDeath %
000001f4 : 000003b3;   % 703: 	mv t2,zero %
000001f5 : 0fc10297;   % 705: 	lh t0,PlayerPosX %
000001f6 : 9f829283;   % 705:  %
000001f7 : fff00313;   % 706: 	li t1,-1 %
000001f8 : 001c7e13;   % 707: 	andi t3,s8,1 %
000001f9 : 01c30333;   % 708: 	add t1,t1,t3 # basicamente divide por 2 a velocidade horizontal %
000001fa : 000006b3;   % 709: 	mv a3,zero %
000001fb : 0142ce63;   % 710: 	blt t0,s4,GotWaddleDeeDir # se X do jogador for menor que X do inimigo, o jogador esta para a esquerda dele %
000001fc : 00100693;   % 711: 	li a3,1 # virado para a direita %
000001fd : 00000333;   % 712: 	mv t1,zero %
000001fe : 01428863;   % 713: 	beq t0,s4,GotWaddleDeeDir %
000001ff : 00100313;   % 714: 	li t1,1 %
00000200 : 001c7e13;   % 715: 	andi t3,s8,1 %
00000201 : 41c30333;   % 716: 	sub t1,t1,t3 # basicamente divide por 2 a velocidade horizontal %
00000202 : 00200393;   % 719: 	li t2,2 	# # # # # "queda" do inimigo, se houver chao ela e cancelada %
00000203 : 001c7293;   % 720: 	andi t0,s8,1 # lifeFrames %
00000204 : 405383b3;   % 721: 	sub t2,t2,t0 	# reduz a velocidade de queda  %
00000205 : 006a0a33;   % 723: 	add s4,s4,t1 %
00000206 : 007a8ab3;   % 724: 	add s5,s5,t2 %
00000207 : 01441223;   % 726: 	sh s4,4(s0) # atualiza PosX %
00000208 : 01541323;   % 727: 	sh s5,6(s0) # atualiza PosY %
00000209 : 00d41423;   % 728: 	sh a3,8(s0) # atualiza Dir %
0000020a : 00800533;   % 730: 	mv a0,s0 # endereco base do objeto %
0000020b : 2c5040ef;   % 731: 	jal UpdateCollision # # # # # %
0000020c : 00800533;   % 733: 	mv a0,s0 %
0000020d : 740000ef;   % 734: 	jal EnemyCollisionCheck # # # # # %
0000020e : 00441a03;   % 736: 	lh s4,4(s0) # PosX # atualiza posicao apos colisoes %
0000020f : 00641a83;   % 737: 	lh s5,6(s0) # PosY %
00000210 : 00200293;   % 739: 	li t0,2 %
00000211 : 145b9663;   % 740: 	bne s7,t0,NotWaddleDeath  %
00000212 : 0fc2c517;   % 743: 	la a0,waddleDeeHit %
00000213 : 87850513;   % 743:  %
00000214 : 00d00293;   % 745: 	li t0,13 %
00000215 : 00100313;   % 746: 	li t1,1 %
00000216 : ffe00393;   % 747: 	li t2,-2 %
00000217 : 045c8663;   % 748: 	beq s9,t0,GotWaddleDeathPos %
00000218 : 00a00293;   % 749: 	li t0,10 %
00000219 : ffe00313;   % 750: 	li t1,-2 %
0000021a : 00200393;   % 751: 	li t2,2 %
0000021b : 025c8e63;   % 752: 	beq s9,t0,GotWaddleDeathPos %
0000021c : 00800293;   % 753: 	li t0,8 %
0000021d : 00100313;   % 754: 	li t1,1 %
0000021e : ffe00393;   % 755: 	li t2,-2 %
0000021f : 025c8663;   % 756: 	beq s9,t0,GotWaddleDeathPos %
00000220 : 00500293;   % 757: 	li t0,5 %
00000221 : 00100313;   % 758: 	li t1,1 %
00000222 : 00100393;   % 759: 	li t2,1 %
00000223 : 005c8e63;   % 760: 	beq s9,t0,GotWaddleDeathPos %
00000224 : 00200293;   % 761: 	li t0,2 %
00000225 : fff00313;   % 762: 	li t1,-1 %
00000226 : fff00393;   % 763: 	li t2,-1 %
00000227 : 005c8663;   % 764: 	beq s9,t0,GotWaddleDeathPos %
00000228 : 00000333;   % 765: 	mv t1,zero %
00000229 : 000003b3;   % 766: 	mv t2,zero %
0000022a : 007a8ab3;   % 769: 	add s5,s5,t2 %
0000022b : 006a0a33;   % 770: 	add s4,s4,t1 %
0000022c : 01441223;   % 772: 	sh s4,4(s0) # atualiza PosX %
0000022d : 01541323;   % 773: 	sh s5,6(s0) # atualiza PosY %
0000022e : 0e0c9c63;   % 775: 	bne s9,zero,GotWaddleDeeSprt # timer de 15 frames da animacao de morte e iniciado no EnemyHit %
0000022f : fff00293;   % 778: 	li t0,-1 %
00000230 : 00541523;   % 779: 	sh t0,10(s0) # atualiza status para -1 (morreu e precisa sair da tela para virar 0 e ser reativado) %
00000231 : 00041623;   % 780: 	sh zero,12(s0) # reinicia LifeFrames para 0 %
00000232 : 01042283;   % 781: 	lw t0,16(s0) # carrega posicao original do objeto %
00000233 : 00542223;   % 782: 	sw t0,4(s0) # atualiza posicao atual do objeto para a original %
00000234 : aa1ff06f;   % 786: 	j DrawNextObj %
00000235 : 001c8c93;   % 789: 	addi s9,s9,1 %
00000236 : 01941723;   % 790: 	sh s9,14(s0) %
00000237 : 00100293;   % 792: 	li t0,1 %
00000238 : 0fc10317;   % 793: 	sh t0,PlayerAnimState,t1 # manualmente mantem a animacao do jogador como a de puxando %
00000239 : 8e531f23;   % 793:  %
0000023a : 000003b3;   % 795: 	mv t2,zero %
0000023b : 00200313;   % 796: 	li t1,2 %
0000023c : 026cc463;   % 797: 	blt s9,t1,LowPullXWaddle %
0000023d : 0fc10297;   % 798: 	lh t0,PlayerLastDir	 %
0000023e : 93429283;   % 798:  %
0000023f : fff00393;   % 799: 	li t2,-1 %
00000240 : 00029463;   % 800: 	bne t0,zero,PullingWaddleToLeft %
00000241 : 00100393;   % 801: 	li t2,1 %
00000242 : 00200293;   % 803: 	li t0,2 %
00000243 : 00a00313;   % 804: 	li t1,10 %
00000244 : 006cc463;   % 805: 	blt s9,t1,LowPullXWaddle %
00000245 : 025383b3;   % 806: 	mul t2,t2,t0 %
00000246 : 0fc10297;   % 809: 	lh t0,PlayerPosY %
00000247 : 8b629283;   % 809:  %
00000248 : fff28293;   % 810: 	addi t0,t0,-1 %
00000249 : 00600313;   % 811: 	li t1,6 %
0000024a : 006cc463;   % 812: 	blt s9,t1,LowPullYWaddle %
0000024b : fff28293;   % 813: 	addi t0,t0,-1 %
0000024c : 41528e33;   % 815: 	sub t3,t0,s5 # player Y - waddle dee Y = velocidade de subida/descida %
0000024d : ffe00313;   % 817: 	li t1,-2 %
0000024e : 006e4863;   % 818: 	blt t3,t1,SetPullRiseWaddle %
0000024f : 00200313;   % 820: 	li t1,2 %
00000250 : 01c34863;   % 821: 	bgt t3,t1,SetPullFallWaddle %
00000251 : 0100006f;   % 822: 	j GotPullWaddleSpY %
00000252 : ffe00e13;   % 825: 	li t3,-2 %
00000253 : 0080006f;   % 826: 	j GotPullWaddleSpY %
00000254 : 00200e13;   % 828: 	li t3,2 %
00000255 : 007a0a33;   % 831: 	add s4,s4,t2 %
00000256 : 01ca8ab3;   % 832: 	add s5,s5,t3 %
00000257 : 01441223;   % 834: 	sh s4,4(s0) # atualiza PosX %
00000258 : 01541323;   % 835: 	sh s5,6(s0) # atualiza PosY %
00000259 : 00800533;   % 837: 	mv a0,s0 # endereco base do objeto %
0000025a : 189040ef;   % 838: 	jal UpdateCollision # # # # # %
0000025b : 00800533;   % 840: 	mv a0,s0 %
0000025c : 604000ef;   % 841: 	jal EnemyCollisionCheck # # # # # %
0000025d : 00a41b83;   % 843: 	lh s7,10(s0) # Status # atualiza ID %
0000025e : 9f705ce3;   % 844: 	ble s7,zero,DrawNextObj # se tiver morrido nao o desenha %
0000025f : 00441a03;   % 846: 	lh s4,4(s0) # PosX # atualiza posicao apos colisoes %
00000260 : 00641a83;   % 847: 	lh s5,6(s0) # PosY %
00000261 : 0fc2b517;   % 849: 	la a0,waddleDee1 %
00000262 : 63050513;   % 849:  %
00000263 : 0240006f;   % 851: 	j GotWaddleDeeSprt %
00000264 : 018002b3;   % 854: 	mv t0,s8 # LifeFrames %
00000265 : 01f2f293;   % 855: 	andi t0,t0,31 %
00000266 : 01000313;   % 856: 	li t1,16 %
00000267 : 0fc2b517;   % 857: 	la a0,waddleDee0 %
00000268 : 50c50513;   % 857:  %
00000269 : 0062c663;   % 858: 	blt t0,t1,GotWaddleDeeSprt %
0000026a : 0fc2b517;   % 859: 	la a0,waddleDee1 %
0000026b : 60c50513;   % 859:  %
0000026c : 00442583;   % 862: 	lw a1,4(s0) %
0000026d : 00841683;   % 863: 	lh a3,8(s0) %
0000026e : 00000733;   % 864: 	mv a4,zero %
0000026f : 5640006f;   % 865: 	j DrawObjReady %
00000270 : 9b7058e3;   % 869: 	ble s7,zero,DrawNextObj # se estiver com status -1 = morto, 0 = desativado (fora da tela),  1 = ativado, 2 = atingido, 3 = sendo puxado %
00000271 : 00300293;   % 871: 	li t0,3 %
00000272 : 145b8063;   % 872: 	beq s7,t0,PullingHotHead %
00000273 : 000c8663;   % 874: 	beq s9,zero,SkipSubExtraHotHead # tempo %
00000274 : fffc8c93;   % 875: 	addi s9,s9,-1 %
00000275 : 01941723;   % 876: 	sh s9,14(s0) %
00000276 : 00200293;   % 879: 	li t0,2 %
00000277 : 0a5b8063;   % 880: 	beq s7,t0,HotHeadDeath %
00000278 : 07fc7293;   % 882: 	andi t0,s8,127 %
00000279 : 0032f393;   % 883: 	andi t2,t0,3 #  %
0000027a : 0082fe13;   % 884: 	andi t3,t0,8 # %
0000027b : 06000313;   % 885: 	li t1,96 %
0000027c : 02534a63;   % 886: 	bgt t0,t1,SkipHotHeadAttack # fim do ataque %
0000027d : 00200313;   % 888: 	li t1,2 %
0000027e : 02639663;   % 889: 	bne t2,t1,SkipHotHeadAttack # define se ataca ou nao %
0000027f : 008e2713;   % 890: 	slti a4,t3,8 # define se ataque vai para cima ou para baixo %
00000280 : 04000313;   % 892: 	li t1,64 %
00000281 : 00534463;   % 893: 	bgt t0,t1,HotHeadAttack # inicio do ataque %
00000282 : 01c0006f;   % 894: 	j SkipHotHeadAttack %
00000283 : 00900513;   % 896: 	li a0,9 # id do objeto (fogo inimigo) %
00000284 : 00100593;   % 897: 	li a1,1 # quantidade do objeto %
00000285 : 010a9613;   % 898: 	slli a2,s5,16 #PosY %
00000286 : 01460633;   % 899: 	add a2,a2,s4 # PosX %
00000287 : 016006b3;   % 900: 	mv a3,s6 # Dir %
00000288 : de4ff0ef;   % 901: 	jal BuildObject %
00000289 : fff00313;   % 904: 	li t1,-1 %
0000028a : 001c7e13;   % 905: 	andi t3,s8,1 # s8, lifeFrames %
0000028b : 01c30333;   % 906: 	add t1,t1,t3 # basicamente divide por 2 a velocidade horizontal %
0000028c : 000b0863;   % 907: 	beqz s6,GotHotHeadDir %
0000028d : 00100313;   % 908: 	li t1,1 %
0000028e : 001c7e13;   % 909: 	andi t3,s8,1 %
0000028f : 41c30333;   % 910: 	sub t1,t1,t3 # basicamente divide por 2 a velocidade horizontal %
00000290 : 00200393;   % 913: 	li t2,2 	# # # # # "queda" do inimigo, se houver chao ela e cancelada %
00000291 : 001c7293;   % 914: 	andi t0,s8,1 # lifeFrames %
00000292 : 405383b3;   % 915: 	sub t2,t2,t0 	# reduz a velocidade de queda  %
00000293 : 006a0a33;   % 917: 	add s4,s4,t1 %
00000294 : 007a8ab3;   % 918: 	add s5,s5,t2 %
00000295 : 01441223;   % 920: 	sh s4,4(s0) # atualiza PosX %
00000296 : 01541323;   % 921: 	sh s5,6(s0) # atualiza PosY %
00000297 : 00800533;   % 923: 	mv a0,s0 # endereco base do objeto %
00000298 : 091040ef;   % 924: 	jal UpdateCollision # # # # # %
00000299 : 00800533;   % 926: 	mv a0,s0 %
0000029a : 50c000ef;   % 927: 	jal EnemyCollisionCheck # # # # # %
0000029b : 00441a03;   % 929: 	lh s4,4(s0) # PosX # atualiza posicao apos colisoes %
0000029c : 00641a83;   % 930: 	lh s5,6(s0) # PosY %
0000029d : 00200293;   % 932: 	li t0,2 %
0000029e : 145b9663;   % 933: 	bne s7,t0,NotHotHeadDeath  %
0000029f : 0fc2c517;   % 936: 	la a0,hotHeadHit %
000002a0 : 1c850513;   % 936:  %
000002a1 : 00d00293;   % 938: 	li t0,13 %
000002a2 : 00100313;   % 939: 	li t1,1 %
000002a3 : ffe00393;   % 940: 	li t2,-2 %
000002a4 : 045c8663;   % 941: 	beq s9,t0,GotHotHeadDeathPos %
000002a5 : 00a00293;   % 942: 	li t0,10 %
000002a6 : ffe00313;   % 943: 	li t1,-2 %
000002a7 : 00200393;   % 944: 	li t2,2 %
000002a8 : 025c8e63;   % 945: 	beq s9,t0,GotHotHeadDeathPos %
000002a9 : 00800293;   % 946: 	li t0,8 %
000002aa : 00100313;   % 947: 	li t1,1 %
000002ab : ffe00393;   % 948: 	li t2,-2 %
000002ac : 025c8663;   % 949: 	beq s9,t0,GotHotHeadDeathPos %
000002ad : 00500293;   % 950: 	li t0,5 %
000002ae : 00100313;   % 951: 	li t1,1 %
000002af : 00100393;   % 952: 	li t2,1 %
000002b0 : 005c8e63;   % 953: 	beq s9,t0,GotHotHeadDeathPos %
000002b1 : 00200293;   % 954: 	li t0,2 %
000002b2 : fff00313;   % 955: 	li t1,-1 %
000002b3 : fff00393;   % 956: 	li t2,-1 %
000002b4 : 005c8663;   % 957: 	beq s9,t0,GotHotHeadDeathPos %
000002b5 : 00000333;   % 958: 	mv t1,zero %
000002b6 : 000003b3;   % 959: 	mv t2,zero %
000002b7 : 007a8ab3;   % 962: 	add s5,s5,t2 %
000002b8 : 006a0a33;   % 963: 	add s4,s4,t1 %
000002b9 : 01441223;   % 965: 	sh s4,4(s0) # atualiza PosX %
000002ba : 01541323;   % 966: 	sh s5,6(s0) # atualiza PosY %
000002bb : 0e0c9c63;   % 968: 	bne s9,zero,GotHotHeadSprt # timer de 15 frames da animacao de morte e iniciado no EnemyHit %
000002bc : fff00293;   % 971: 	li t0,-1 %
000002bd : 00541523;   % 972: 	sh t0,10(s0) # atualiza status para -1 (morreu e precisa sair da tela para virar 0 e ser reativado) %
000002be : 00041623;   % 973: 	sh zero,12(s0) # reinicia LifeFrames para 0 %
000002bf : 01042283;   % 974: 	lw t0,16(s0) # carrega posicao original do objeto %
000002c0 : 00542223;   % 975: 	sw t0,4(s0) # atualiza posicao atual do objeto para a original %
000002c1 : 86dff06f;   % 979: 	j DrawNextObj %
000002c2 : 001c8c93;   % 982: 	addi s9,s9,1 %
000002c3 : 01941723;   % 983: 	sh s9,14(s0) %
000002c4 : 00100293;   % 985: 	li t0,1 %
000002c5 : 0fc0f317;   % 986: 	sh t0,PlayerAnimState,t1 # manualmente mantem a animacao do jogador como a de puxando %
000002c6 : 6c531523;   % 986:  %
000002c7 : 000003b3;   % 988: 	mv t2,zero %
000002c8 : 00200313;   % 989: 	li t1,2 %
000002c9 : 026cc463;   % 990: 	blt s9,t1,LowPullXHotHead %
000002ca : 0fc0f297;   % 991: 	lh t0,PlayerLastDir	 %
000002cb : 70029283;   % 991:  %
000002cc : fff00393;   % 992: 	li t2,-1 %
000002cd : 00029463;   % 993: 	bne t0,zero,PullingHotHeadToLeft %
000002ce : 00100393;   % 994: 	li t2,1 %
000002cf : 00200293;   % 996: 	li t0,2 %
000002d0 : 00a00313;   % 997: 	li t1,10 %
000002d1 : 006cc463;   % 998: 	blt s9,t1,LowPullXHotHead %
000002d2 : 025383b3;   % 999: 	mul t2,t2,t0 %
000002d3 : 0fc0f297;   % 1002: 	lh t0,PlayerPosY %
000002d4 : 68229283;   % 1002:  %
000002d5 : fff28293;   % 1003: 	addi t0,t0,-1 %
000002d6 : 00600313;   % 1004: 	li t1,6 %
000002d7 : 006cc463;   % 1005: 	blt s9,t1,LowPullYHotHead %
000002d8 : fff28293;   % 1006: 	addi t0,t0,-1 %
000002d9 : 41528e33;   % 1008: 	sub t3,t0,s5 # player Y - hot head Y = velocidade de subida/descida %
000002da : ffe00313;   % 1010: 	li t1,-2 %
000002db : 006e4863;   % 1011: 	blt t3,t1,SetPullRiseHotHead %
000002dc : 00200313;   % 1013: 	li t1,2 %
000002dd : 01c34863;   % 1014: 	bgt t3,t1,SetPullFallHotHead %
000002de : 0100006f;   % 1015: 	j GotPullHotHeadSpY %
000002df : ffe00e13;   % 1018: 	li t3,-2 %
000002e0 : 0080006f;   % 1019: 	j GotPullHotHeadSpY %
000002e1 : 00200e13;   % 1021: 	li t3,2 %
000002e2 : 007a0a33;   % 1024: 	add s4,s4,t2 %
000002e3 : 01ca8ab3;   % 1025: 	add s5,s5,t3 %
000002e4 : 01441223;   % 1027: 	sh s4,4(s0) # atualiza PosX %
000002e5 : 01541323;   % 1028: 	sh s5,6(s0) # atualiza PosY %
000002e6 : 00800533;   % 1030: 	mv a0,s0 # endereco base do objeto %
000002e7 : 754040ef;   % 1031: 	jal UpdateCollision # # # # # %
000002e8 : 00800533;   % 1033: 	mv a0,s0 %
000002e9 : 3d0000ef;   % 1034: 	jal EnemyCollisionCheck # # # # # %
000002ea : 00a41b83;   % 1036: 	lh s7,10(s0) # Status # atualiza ID %
000002eb : fd705263;   % 1037: 	ble s7,zero,DrawNextObj # se tiver morrido nao o desenha %
000002ec : 00441a03;   % 1039: 	lh s4,4(s0) # PosX # atualiza posicao apos colisoes %
000002ed : 00641a83;   % 1040: 	lh s5,6(s0) # PosY %
000002ee : 0fc2c517;   % 1042: 	la a0,hotHead1 %
000002ef : b5050513;   % 1042:  %
000002f0 : 0240006f;   % 1044: 	j GotHotHeadSprt %
000002f1 : 018002b3;   % 1047: 	mv t0,s8 # LifeFrames %
000002f2 : 01f2f293;   % 1048: 	andi t0,t0,31 %
000002f3 : 01000313;   % 1049: 	li t1,16 %
000002f4 : 0fc2c517;   % 1050: 	la a0,hotHead0 %
000002f5 : a2c50513;   % 1050:  %
000002f6 : 0062c663;   % 1051: 	blt t0,t1,GotHotHeadSprt %
000002f7 : 0fc2c517;   % 1052: 	la a0,hotHead1 %
000002f8 : b2c50513;   % 1052:  %
000002f9 : 00442583;   % 1055: 	lw a1,4(s0) %
000002fa : 00841683;   % 1056: 	lh a3,8(s0) %
000002fb : 00000733;   % 1057: 	mv a4,zero %
000002fc : 3300006f;   % 1058: 	j DrawObjReady %
000002fd : f7705e63;   % 1062: 	ble s7,zero,DrawNextObj # se estiver com status -1 = morto, 0 = desativado (fora da tela),  1 = ativado, 2 = atingido, 3 = sendo puxado %
000002fe : 00300293;   % 1064: 	li t0,3 %
000002ff : 245b8a63;   % 1065: 	beq s7,t0,PullingChilly %
00000300 : 000c8663;   % 1067: 	beq s9,zero,SkipSubExtraChilly # tempo %
00000301 : fffc8c93;   % 1068: 	addi s9,s9,-1 %
00000302 : 01941723;   % 1069: 	sh s9,14(s0) %
00000303 : 00200293;   % 1072: 	li t0,2 %
00000304 : 1a5b8c63;   % 1073: 	beq s7,t0,ChillyDeath %
00000305 : 000003b3;   % 1075: 	mv t2,zero %
00000306 : 1ffc7293;   % 1077: 	andi t0,s8,511 %
00000307 : 007c7393;   % 1078: 	andi t2,s8,7 %
00000308 : 00fc7e13;   % 1079: 	andi t3,s8,15 %
00000309 : 003c7e93;   % 1080: 	andi t4,s8,3 %
0000030a : 1c000313;   % 1082: 	li t1,448 %
0000030b : 0462d063;   % 1083: 	bge t0,t1,ChillyMoveLeft %
0000030c : 18000313;   % 1084: 	li t1,384 %
0000030d : 0462d263;   % 1085: 	bge t0,t1,ChillyMoveRight %
0000030e : 14000313;   % 1086: 	li t1,320 %
0000030f : 0262d863;   % 1087: 	bge t0,t1,ChillyMoveLeft %
00000310 : 10000313;   % 1088: 	li t1,256 %
00000311 : 0262da63;   % 1089: 	bge t0,t1,ChillyMoveRight %
00000312 : 0c000313;   % 1090: 	li t1,192 %
00000313 : 0262d063;   % 1091: 	bge t0,t1,ChillyMoveLeft %
00000314 : 0a000313;   % 1092: 	li t1,160 %
00000315 : 0262d263;   % 1093: 	bge t0,t1,ChillyMoveRight %
00000316 : 03000313;   % 1094: 	li t1,48 %
00000317 : 0462d063;   % 1095: 	bge t0,t1,ChillyJumpAtt %
00000318 : 02000313;   % 1096: 	li t1,32 %
00000319 : 1062d463;   % 1097: 	bge t0,t1,ChillyCharge %
0000031a : 0100006f;   % 1098: 	j ChillyMoveRight %
0000031b : 001eaf13;   % 1101: 	slti t5,t4,1 # t5, velocidade X, fica 1 se t2 = 0 %
0000031c : 41e00f33;   % 1102: 	sub t5,zero,t5 %
0000031d : 0080006f;   % 1103: 	j ChillyMove %
0000031e : 001eaf13;   % 1106: 	slti t5,t4,1 # t5, velocidade X, fica 1 se t2 = 0 %
0000031f : 00100f93;   % 1109: 	li t6,1 # t6, velocidade Y %
00000320 : 0fc2b817;   % 1110: 	la a6,chilly0		# a6 armazena temporariamente o sprite %
00000321 : 54c80813;   % 1110:  %
00000322 : 00800293;   % 1111: 	li t0,8 %
00000323 : 105e5463;   % 1112: 	bge t3,t0,GotChillyState %
00000324 : 0fc2b817;   % 1113: 	la a6,chilly1 %
00000325 : 64880813;   % 1113:  %
00000326 : 0fc0006f;   % 1114: 	j GotChillyState %
00000327 : 00800293;   % 1117: 	li t0,8 %
00000328 : 065e0063;   % 1118: 	beq t3,t0,ChillyIceObjs2 %
00000329 : 0a0e1863;   % 1119: 	bnez t3,DoneChillyIce %
0000032a : 00a00513;   % 1121: 	li a0,10 # id do objeto (gelo inimigo) %
0000032b : 00100593;   % 1122: 	li a1,1 # quantidade do objeto %
0000032c : 010a9613;   % 1123: 	slli a2,s5,16 %
0000032d : 01460633;   % 1124: 	add a2,a2,s4 %
0000032e : 016006b3;   % 1125: 	mv a3,s6 %
0000032f : 00000713;   % 1126: 	li a4,0 %
00000330 : b44ff0ef;   % 1127: 	jal BuildObject %
00000331 : 00a00513;   % 1128: 	li a0,10 # id do objeto (gelo inimigo) %
00000332 : 00100593;   % 1129: 	li a1,1 # quantidade do objeto %
00000333 : 010a9613;   % 1130: 	slli a2,s5,16 %
00000334 : 01460633;   % 1131: 	add a2,a2,s4 %
00000335 : 016006b3;   % 1132: 	mv a3,s6	 %
00000336 : 00200713;   % 1133: 	li a4,2 %
00000337 : b28ff0ef;   % 1134: 	jal BuildObject %
00000338 : 00a00513;   % 1135: 	li a0,10 # id do objeto (gelo inimigo) %
00000339 : 00100593;   % 1136: 	li a1,1 # quantidade do objeto %
0000033a : 010a9613;   % 1137: 	slli a2,s5,16 %
0000033b : 01460633;   % 1138: 	add a2,a2,s4 %
0000033c : 016006b3;   % 1139: 	mv a3,s6 %
0000033d : 00400713;   % 1140: 	li a4,4 %
0000033e : b0cff0ef;   % 1141: 	jal BuildObject %
0000033f : 0580006f;   % 1143: 	j DoneChillyIce %
00000340 : 00a00513;   % 1146: 	li a0,10 # id do objeto (gelo inimigo) %
00000341 : 00100593;   % 1147: 	li a1,1 # quantidade do objeto %
00000342 : 010a9613;   % 1148: 	slli a2,s5,16 %
00000343 : 01460633;   % 1149: 	add a2,a2,s4 %
00000344 : 016006b3;   % 1150: 	mv a3,s6 %
00000345 : 00100713;   % 1151: 	li a4,1 %
00000346 : aecff0ef;   % 1152: 	jal BuildObject %
00000347 : 00a00513;   % 1153: 	li a0,10 # id do objeto (gelo inimigo) %
00000348 : 00100593;   % 1154: 	li a1,1 # quantidade do objeto %
00000349 : 010a9613;   % 1155: 	slli a2,s5,16 %
0000034a : 01460633;   % 1156: 	add a2,a2,s4 %
0000034b : 016006b3;   % 1157: 	mv a3,s6 %
0000034c : 00300713;   % 1158: 	li a4,3 %
0000034d : ad0ff0ef;   % 1159: 	jal BuildObject %
0000034e : 00a00513;   % 1160: 	li a0,10 # id do objeto (gelo inimigo) %
0000034f : 00100593;   % 1161: 	li a1,1 # quantidade do objeto %
00000350 : 010a9613;   % 1162: 	slli a2,s5,16 %
00000351 : 01460633;   % 1163: 	add a2,a2,s4 %
00000352 : 016006b3;   % 1164: 	mv a3,s6 %
00000353 : 00500713;   % 1165: 	li a4,5 %
00000354 : ab4ff0ef;   % 1166: 	jal BuildObject %
00000355 : 1ffc7293;   % 1169: 	andi t0,s8,511 %
00000356 : 06800313;   % 1171: 	li t1,104 %
00000357 : 00100f93;   % 1172: 	li t6,1 %
00000358 : 0062d863;   % 1173: 	bge t0,t1,GotChillyJump %
00000359 : fff00f93;   % 1174: 	li t6,-1 %
0000035a : 0080006f;   % 1175: 	j GotChillyJump %
0000035b : 00000fb3;   % 1177: 	mv t6,zero %
0000035c : 007c7393;   % 1180: 	andi t2,s8,7 %
0000035d : 00000f33;   % 1181: 	mv t5,zero %
0000035e : 0fc2b817;   % 1183: 	la a6,chillyAtt1 %
0000035f : 77880813;   % 1183:  %
00000360 : 00400293;   % 1184: 	li t0,4 %
00000361 : 0072d863;   % 1185: 	ble t2,t0,GotChillyState %
00000362 : 0fc2b817;   % 1186: 	la a6,chillyAtt0 %
00000363 : 65c80813;   % 1186:  %
00000364 : 0040006f;   % 1187: 	j GotChillyState %
00000365 : 01ea0a33;   % 1191: 	add s4,s4,t5 %
00000366 : 01fa8ab3;   % 1192: 	add s5,s5,t6 %
00000367 : 01441223;   % 1194: 	sh s4,4(s0) # atualiza PosX %
00000368 : 01541323;   % 1195: 	sh s5,6(s0) # atualiza PosY %
00000369 : 00d41423;   % 1196: 	sh a3,8(s0) # atualiza Dir %
0000036a : 00800533;   % 1198: 	mv a0,s0 # endereco base do objeto %
0000036b : 544040ef;   % 1199: 	jal UpdateCollision # # # # # %
0000036c : 00800533;   % 1201: 	mv a0,s0 %
0000036d : 1c0000ef;   % 1202: 	jal EnemyCollisionCheck # # # # # %
0000036e : 00441a03;   % 1204: 	lh s4,4(s0) # PosX # atualiza posicao apos colisoes %
0000036f : 00641a83;   % 1205: 	lh s5,6(s0) # PosY %
00000370 : 00200293;   % 1207: 	li t0,2 %
00000371 : 145b9463;   % 1208: 	bne s7,t0,NotChillyDeath  %
00000372 : 0fc2b517;   % 1211: 	la a0,chillyAtt1 %
00000373 : 72850513;   % 1211:  %
00000374 : 00d00293;   % 1213: 	li t0,13 %
00000375 : 00100313;   % 1214: 	li t1,1 %
00000376 : ffe00393;   % 1215: 	li t2,-2 %
00000377 : 045c8663;   % 1216: 	beq s9,t0,GotChillyDeathPos %
00000378 : 00a00293;   % 1217: 	li t0,10 %
00000379 : ffe00313;   % 1218: 	li t1,-2 %
0000037a : 00200393;   % 1219: 	li t2,2 %
0000037b : 025c8e63;   % 1220: 	beq s9,t0,GotChillyDeathPos %
0000037c : 00800293;   % 1221: 	li t0,8 %
0000037d : 00100313;   % 1222: 	li t1,1 %
0000037e : ffe00393;   % 1223: 	li t2,-2 %
0000037f : 025c8663;   % 1224: 	beq s9,t0,GotChillyDeathPos %
00000380 : 00500293;   % 1225: 	li t0,5 %
00000381 : 00100313;   % 1226: 	li t1,1 %
00000382 : 00100393;   % 1227: 	li t2,1 %
00000383 : 005c8e63;   % 1228: 	beq s9,t0,GotChillyDeathPos %
00000384 : 00200293;   % 1229: 	li t0,2 %
00000385 : fff00313;   % 1230: 	li t1,-1 %
00000386 : fff00393;   % 1231: 	li t2,-1 %
00000387 : 005c8663;   % 1232: 	beq s9,t0,GotChillyDeathPos %
00000388 : 00000333;   % 1233: 	mv t1,zero %
00000389 : 000003b3;   % 1234: 	mv t2,zero %
0000038a : 007a8ab3;   % 1237: 	add s5,s5,t2 %
0000038b : 006a0a33;   % 1238: 	add s4,s4,t1 %
0000038c : 01441223;   % 1240: 	sh s4,4(s0) # atualiza PosX %
0000038d : 01541323;   % 1241: 	sh s5,6(s0) # atualiza PosY %
0000038e : fff00293;   % 1245: 	li t0,-1 %
0000038f : 00541523;   % 1246: 	sh t0,10(s0) # atualiza status para -1 (morreu e precisa sair da tela para virar 0 e ser reativado) %
00000390 : 00041623;   % 1247: 	sh zero,12(s0) # reinicia LifeFrames para 0 %
00000391 : 01042283;   % 1248: 	lw t0,16(s0) # carrega posicao original do objeto %
00000392 : 00542223;   % 1249: 	sw t0,4(s0) # atualiza posicao atual do objeto para a original %
00000393 : d24ff06f;   % 1253: 	j DrawNextObj %
00000394 : 001c8c93;   % 1256: 	addi s9,s9,1 %
00000395 : 01941723;   % 1257: 	sh s9,14(s0) %
00000396 : 00100293;   % 1259: 	li t0,1 %
00000397 : 0fc0f317;   % 1260: 	sh t0,PlayerAnimState,t1 # manualmente mantem a animacao do jogador como a de puxando %
00000398 : 38531123;   % 1260:  %
00000399 : 000003b3;   % 1262: 	mv t2,zero %
0000039a : 00200313;   % 1263: 	li t1,2 %
0000039b : 026cc463;   % 1264: 	blt s9,t1,LowPullXChilly %
0000039c : 0fc0f297;   % 1265: 	lh t0,PlayerLastDir	 %
0000039d : 3b829283;   % 1265:  %
0000039e : fff00393;   % 1266: 	li t2,-1 %
0000039f : 00029463;   % 1267: 	bne t0,zero,PullingChillyToLeft %
000003a0 : 00100393;   % 1268: 	li t2,1 %
000003a1 : 00200293;   % 1270: 	li t0,2 %
000003a2 : 00a00313;   % 1271: 	li t1,10 %
000003a3 : 006cc463;   % 1272: 	blt s9,t1,LowPullXChilly %
000003a4 : 025383b3;   % 1273: 	mul t2,t2,t0 %
000003a5 : 0fc0f297;   % 1276: 	lh t0,PlayerPosY %
000003a6 : 33a29283;   % 1276:  %
000003a7 : fff28293;   % 1277: 	addi t0,t0,-1 %
000003a8 : 00600313;   % 1278: 	li t1,6 %
000003a9 : 006cc463;   % 1279: 	blt s9,t1,LowPullYChilly %
000003aa : fff28293;   % 1280: 	addi t0,t0,-1 %
000003ab : 41528e33;   % 1282: 	sub t3,t0,s5 # player Y - Chilly Y = velocidade de subida/descida %
000003ac : ffe00313;   % 1284: 	li t1,-2 %
000003ad : 006e4863;   % 1285: 	blt t3,t1,SetPullRiseChilly %
000003ae : 00200313;   % 1287: 	li t1,2 %
000003af : 01c34863;   % 1288: 	bgt t3,t1,SetPullFallChilly %
000003b0 : 0100006f;   % 1289: 	j GotPullChillySpY %
000003b1 : ffe00e13;   % 1292: 	li t3,-2 %
000003b2 : 0080006f;   % 1293: 	j GotPullChillySpY %
000003b3 : 00200e13;   % 1295: 	li t3,2 %
000003b4 : 007a0a33;   % 1298: 	add s4,s4,t2 %
000003b5 : 01ca8ab3;   % 1299: 	add s5,s5,t3 %
000003b6 : 01441223;   % 1301: 	sh s4,4(s0) # atualiza PosX %
000003b7 : 01541323;   % 1302: 	sh s5,6(s0) # atualiza PosY %
000003b8 : 00800533;   % 1304: 	mv a0,s0 # endereco base do objeto %
000003b9 : 40c040ef;   % 1305: 	jal UpdateCollision # # # # # %
000003ba : 00800533;   % 1307: 	mv a0,s0 %
000003bb : 088000ef;   % 1308: 	jal EnemyCollisionCheck # # # # # %
000003bc : 00a41b83;   % 1310: 	lh s7,10(s0) # Status # atualiza ID %
000003bd : c7705e63;   % 1311: 	ble s7,zero,DrawNextObj # se tiver morrido nao o desenha %
000003be : 00441a03;   % 1313: 	lh s4,4(s0) # PosX # atualiza posicao apos colisoes %
000003bf : 00641a83;   % 1314: 	lh s5,6(s0) # PosY %
000003c0 : 0fc2b817;   % 1316: 	la a6,chilly1 %
000003c1 : 3d880813;   % 1316:  %
000003c2 : 0040006f;   % 1318: 	j NotChillyDeath %
000003c3 : 01000533;   % 1322: 	mv a0,a6 # Sprite definido na movimentacao %
000003c4 : 00442583;   % 1324: 	lw a1,4(s0) %
000003c5 : 00841683;   % 1325: 	lh a3,8(s0) %
000003c6 : 00200713;   % 1326: 	li a4,2 %
000003c7 : 0040006f;   % 1327: 	j DrawObjReady %
000003c8 : 174040ef;   % 1336: 	jal Print %
000003c9 : 01e00293;   % 1338: 	li t0,30 %
000003ca : 00100313;   % 1339: 	li t1,1 %
000003cb : 0059d463;   % 1340: 	bge s3,t0,SetEnemyLifeFrames # se o id for de um objeto o lifeFrames diminui, se for de um inimigo ele aumenta  %
000003cc : 40600333;   % 1341: 	sub t1,zero,t1 %
000003cd : 006c0c33;   % 1343: 	add s8,s8,t1 %
000003ce : 01800533;   % 1345: 	mv a0,s8 ### %
000003cf : 00100893;   % 1346: 	li a7,1 %
000003d0 : 0fc0f517;   % 1349: 	la a0,endl %
000003d1 : 35450513;   % 1349:  %
000003d2 : 00400893;   % 1350: 	li a7,4 %
000003d3 : 01841623;   % 1353: 	sh s8,12(s0) %
000003d4 : c20c1063;   % 1354: 	bne s8,zero,DrawNextObj %
000003d5 : 00042023;   % 1355: 	sw zero,0(s0)	# define ID do objeto como 0 se tempo de vida dele acabar %
000003d6 : c18ff06f;   % 1357: 	j DrawNextObj %
000003d7 : 00012083;   % 1360: 	lw ra,0(sp) %
000003d8 : 00410113;   % 1361: 	addi sp,sp,4 # conferir %
000003d9 : 0fc0f517;   % 1363: 	la a0,endl %
000003da : 33050513;   % 1363:  %
000003db : 00400893;   % 1364: 	li a7,4 %
000003dc : 00008067;   % 1367: 	ret %
000003dd : fdc10113;   % 1371: 	addi sp,sp,-36 %
000003de : 00112023;   % 1372: 	sw ra,0(sp) %
000003df : 00812223;   % 1373: 	sw s0,4(sp) %
000003e0 : 00912423;   % 1374: 	sw s1,8(sp) %
000003e1 : 01212623;   % 1375: 	sw s2,12(sp) %
000003e2 : 01312823;   % 1376: 	sw s3,16(sp) %
000003e3 : 01412a23;   % 1377: 	sw s4,20(sp) %
000003e4 : 01512c23;   % 1378: 	sw s5,24(sp) %
000003e5 : 01612e23;   % 1379: 	sw s6,28(sp) %
000003e6 : 03712023;   % 1380: 	sw s7,32(sp) %
000003e7 : 00a00433;   % 1382: 	mv s0,a0	# s0, endereco base do inimigo %
000003e8 : 00441483;   % 1383: 	lh s1,4(s0)	# s1, PosX %
000003e9 : 00641903;   % 1384: 	lh s2,6(s0)	# s2, PosY %
000003ea : 00041a03;   % 1385: 	lh s4,0(s0)	# s4, ID %
000003eb : 00a41a83;   % 1386: 	lh s5,10(s0)	# s5, Status %
000003ec : 00841b03;   % 1387: 	lh s6,8(s0)	# s6, Dir %
000003ed : 00c41b83;   % 1388: 	lh s7,12(s0)	# s7, LifeFrames %
000003ee : 0fc2c997;   % 1390: 	la s3,collisionRender %
000003ef : d9898993;   % 1390:  %
000003f0 : 00c98993;   % 1391: 	addi s3,s3,12 %
000003f1 : 009002b3;   % 1393: 	mv t0,s1 %
000003f2 : 00f2f293;   % 1394: 	andi t0,t0,0xf %
000003f3 : 005989b3;   % 1395: 	add s3,s3,t0			# adiciona o resto do offset X por 16 %
000003f4 : 012002b3;   % 1397: 	mv t0,s2 %
000003f5 : 00f2f293;   % 1398: 	andi t0,t0,0xf %
000003f6 : 02000313;   % 1399: 	li t1,32 %
000003f7 : 026282b3;   % 1400: 	mul t0,t0,t1			# adiciona as linhas com base no resto do offset Y por 16 %
000003f8 : 005989b3;   % 1402: 	add s3,s3,t0			# s3, inicialmente com o endereco para o primeiro pixel do jogador no mapa de colisoes renderizado %
000003f9 : 00000fb3;   % 1405: 	mv t6,zero # contador de objetos que podem atingir o jogador %
000003fa : 0100006f;   % 1407: 	j SetupEnemyPlayer %
000003fb : 001f8f93;   % 1409: 	addi t6,t6,1 %
000003fc : 00500313;   % 1410: 	li t1,5 %
000003fd : 0bf30663;   % 1411: 	beq t1,t6,DoneEnemyPlayerColCheck %
000003fe : 013002b3;   % 1415: 	mv t0,s3 %
000003ff : 04200f13;   % 1416: 	li t5,66 # pixel 2,2 (iniciando em 0,0) %
00000400 : 00000e33;   % 1418: 	mv t3,zero %
00000401 : 00400e93;   % 1419: 	li t4,4				# contador de pixels a analisar %
00000402 : 08400393;   % 1421: 	li t2,132 %
00000403 : 020f8a63;   % 1422: 	beq t6,zero,EnemyPlayer %
00000404 : 00100313;   % 1423: 	li t1,1 %
00000405 : 09f00393;   % 1424: 	li t2,159 %
00000406 : 026f8463;   % 1425: 	beq t6,t1,EnemyPlayer %
00000407 : 00200313;   % 1426: 	li t1,2 %
00000408 : 01700393;   % 1427: 	li t2,23 %
00000409 : 006f8e63;   % 1428: 	beq t6,t1,EnemyPlayer %
0000040a : 00300313;   % 1429: 	li t1,3 %
0000040b : 0f800393;   % 1430: 	li t2,248 %
0000040c : 006f8863;   % 1431: 	beq t6,t1,EnemyPlayer %
0000040d : 00400313;   % 1432: 	li t1,4 %
0000040e : 03f00393;   % 1433: 	li t2,63 %
0000040f : 006f8263;   % 1434: 	beq t6,t1,EnemyPlayer %
00000410 : 01e282b3;   % 1438: 	add t0,t0,t5 %
00000411 : 0002c303;   % 1439: 	lbu t1,0(t0) %
00000412 : 08400f13;   % 1441: 	li t5,132 %
00000413 : 17e30a63;   % 1442: 	beq t1,t5,EnemyPull # determinado apos a EnemyCollisionCheck %
00000414 : 00300f13;   % 1444: 	li t5,3 %
00000415 : 015f1663;   % 1445: 	bne t5,s5,NotPullingEnemy %
00000416 : 09f00f13;   % 1447: 	li t5,159 %
00000417 : 17e30863;   % 1448: 	beq t1,t5,EnemyEaten # determinado apos EnemyPull %
00000418 : 02730863;   % 1451: 	beq t1,t2,EnemyHit %
00000419 : 001e0e13;   % 1453: 	addi t3,t3,1 %
0000041a : f9de02e3;   % 1454: 	beq t3,t4,NextEnemyDanger %
0000041b : 00b00f13;   % 1456: 	li t5,11 # pixel 13,2 %
0000041c : 00100313;   % 1457: 	li t1,1 %
0000041d : fdc306e3;   % 1458: 	beq t1,t3,EnemyPlayer %
0000041e : 15500f13;   % 1459: 	li t5,341 # pixel 2,13 %
0000041f : 00200313;   % 1460: 	li t1,2 %
00000420 : fdc300e3;   % 1461: 	beq t1,t3,EnemyPlayer %
00000421 : 00b00f13;   % 1462: 	li t5,11 # pixel 13,13 %
00000422 : 00300313;   % 1463: 	li t1,3 %
00000423 : fbc30ae3;   % 1464: 	beq t1,t3,EnemyPlayer %
00000424 : 00f00293;   % 1467: 	li t0,15 # duracao da animacao de morte %
00000425 : 00541723;   % 1468: 	sh t0,14(s0) # Extra %
00000426 : 00200293;   % 1470: 	li t0,2 %
00000427 : 00541523;   % 1471: 	sh t0,10(s0) # atualiza status para 2 (esta morrendo) %
00000428 : 00300293;   % 1474: 	li t0,3 %
00000429 : 0e5a8663;   % 1475: 	beq s5,t0,DoneEnemyCollisionCheck # se estiver sendo puxado skipa as colisoes com o mapa %
0000042a : 013002b3;   % 1478: 	mv t0,s3 %
0000042b : 1e000313;   % 1479: 	li t1,480 # 15 linhas do sprite x 32 pixels da renderizacao da colisao %
0000042c : 006282b3;   % 1480: 	add t0,t0,t1  %
0000042d : 03800393;   % 1481: 	li t2,56 # verde %
0000042e : 00000e33;   % 1482: 	mv t3,zero %
0000042f : 00400e93;   % 1483: 	li t4,4				# contador de pixels a analisar %
00000430 : 0002c303;   % 1485: 	lbu t1,0(t0) %
00000431 : 0202cf03;   % 1487: 	lbu t5,32(t0) # linha de pixels abaixo do inimigo %
00000432 : 027f0263;   % 1488: 	beq t5,t2,DontFlipHotHead %
00000433 : 01f00f93;   % 1489: 	li t6,31 %
00000434 : 014f9e63;   % 1490: 	bne t6,s4,DontFlipHotHead %
00000435 : 001b4b13;   % 1491: 	xori s6,s6,1 # troca a direcao do hot head se ele for cair %
00000436 : 01641423;   % 1492: 	sh s6,8(s0) %
00000437 : 000e1663;   % 1496: 	bnez t3,NudgeLeft # se for o primeiro pixel analisado empurra o hot head para a direita %
00000438 : 3cc030ef;   % 1497: 	jal SnapRight %
00000439 : 0080006f;   % 1498: 	j DontFlipHotHead %
0000043a : 3b4030ef;   % 1500: 	jal SnapLeft %
0000043b : 00731663;   % 1504: 	bne t1,t2,EnemyDontSnapUp		# analisa pixels 1, 6, 11 e 16 da ultima linha do inimigo %
0000043c : 38c030ef;   % 1505: 	jal SnapUp %
0000043d : fcdff06f;   % 1506: 	j EnemyFloor			# repete enquanto colisao acontece %
0000043e : 00528293;   % 1508: 	addi t0,t0,5			# avanca 5 pixels na linha %
0000043f : 001e0e13;   % 1509: 	addi t3,t3,1 %
00000440 : fdde40e3;   % 1510: 	blt t3,t4,EnemyFloor %
00000441 : 013002b3;   % 1514: 	mv t0,s3 %
00000442 : 00700393;   % 1515: 	li t2,7 # vermelho %
00000443 : 00000e33;   % 1516: 	mv t3,zero %
00000444 : 00400e93;   % 1517: 	li t4,4				# contador de pixels a analisar %
00000445 : 0002c303;   % 1519: 	lbu t1,0(t0) %
00000446 : 00731663;   % 1520: 	bne t1,t2,EnemyDontSnapDown	 %
00000447 : 370030ef;   % 1522: 	jal SnapDown			 %
00000448 : ff5ff06f;   % 1523: 	j EnemyCeiling			# repete enquanto colisao acontece %
00000449 : 00528293;   % 1525: 	addi t0,t0,5			# avanca 5 pixels na linha %
0000044a : 001e0e13;   % 1526: 	addi t3,t3,1 %
0000044b : ffde44e3;   % 1527: 	blt t3,t4,EnemyCeiling %
0000044c : 013002b3;   % 1531: 	mv t0,s3 %
0000044d : 0c000393;   % 1532: 	li t2,192 # azul %
0000044e : 00000e33;   % 1533: 	mv t3,zero %
0000044f : 00400e93;   % 1534: 	li t4,4				# contador de pixels a analisar %
00000450 : 0002c303;   % 1536: 	lbu t1,0(t0) %
00000451 : 00731663;   % 1537: 	bne t1,t2,EnemyDontSnapRight	 %
00000452 : 364030ef;   % 1538: 	jal SnapRight %
00000453 : ff5ff06f;   % 1539: 	j EnemyLeftWall		# repete enquanto colisao acontece %
00000454 : 0a028293;   % 1541: 	addi t0,t0,160			# avanca 5 linhas no mapa de colisao %
00000455 : 001e0e13;   % 1542: 	addi t3,t3,1 %
00000456 : ffde44e3;   % 1543: 	blt t3,t4,EnemyLeftWall %
00000457 : 013002b3;   % 1547: 	mv t0,s3 %
00000458 : 0c000393;   % 1548: 	li t2,192 # azul %
00000459 : 00000e33;   % 1549: 	mv t3,zero %
0000045a : 00400e93;   % 1550: 	li t4,4				# contador de pixels a analisar %
0000045b : 00f2c303;   % 1552: 	lbu t1,15(t0) %
0000045c : 00731663;   % 1554: 	bne t1,t2,EnemyDontSnapLeft	 %
0000045d : 328030ef;   % 1555: 	jal SnapLeft %
0000045e : ff5ff06f;   % 1556: 	j EnemyRightWall		# repete enquanto colisao acontece %
0000045f : 0a028293;   % 1558: 	addi t0,t0,160			# avanca 5 linhas no mapa de colisao %
00000460 : 001e0e13;   % 1559: 	addi t3,t3,1 %
00000461 : ffde44e3;   % 1560: 	blt t3,t4,EnemyRightWall %
00000462 : 00941223;   % 1564: 	sh s1,4(s0)	# s1, PosX %
00000463 : 01241323;   % 1565: 	sh s2,6(s0)	# s2, PosY %
00000464 : 00012083;   % 1569: 	lw ra,0(sp) %
00000465 : 00412403;   % 1570: 	lw s0,4(sp) %
00000466 : 00812483;   % 1571: 	lw s1,8(sp) %
00000467 : 00c12903;   % 1572: 	lw s2,12(sp) %
00000468 : 01012983;   % 1573: 	lw s3,16(sp) %
00000469 : 01412a03;   % 1574: 	lw s4,20(sp) %
0000046a : 01812a83;   % 1575: 	lw s5,24(sp) %
0000046b : 01812a83;   % 1576: 	lw s5,24(sp) %
0000046c : 01c12b03;   % 1577: 	lw s6,28(sp) %
0000046d : 02012b83;   % 1578: 	lw s7,32(sp) %
0000046e : 02410113;   % 1579: 	addi sp,sp,36 %
0000046f : 00008067;   % 1581: 	ret %
00000470 : 00300293;   % 1585: 	li t0,3 %
00000471 : 00541523;   % 1586: 	sh t0,10(s0) %
00000472 : fc9ff06f;   % 1588: 	j DoneEnemyCollisionCheck %
00000473 : fff00293;   % 1592: 	li t0,-1 %
00000474 : 00541523;   % 1593: 	sh t0,10(s0) %
00000475 : 01e00293;   % 1595: 	li t0,30 %
00000476 : 00300313;   % 1596: 	li t1,3 # 3 %
00000477 : 005a0e63;   % 1597: 	beq s4,t0,SetEatenPower %
00000478 : 01f00293;   % 1598: 	li t0,31 %
00000479 : 00400313;   % 1599: 	li t1,4 %
0000047a : 005a0863;   % 1600: 	beq s4,t0,SetEatenPower %
0000047b : 02000293;   % 1601: 	li t0,32 %
0000047c : 00500313;   % 1602: 	li t1,5 %
0000047d : 005a0263;   % 1603: 	beq s4,t0,SetEatenPower %
0000047e : 0fc0f297;   % 1606: 	sw t1,PlayerPowState,t0 %
0000047f : fe62a423;   % 1606:  %
00000480 : 00c00293;   % 1608: 	li t0,12 # transicao engolir %
00000481 : 0fc0f317;   % 1609: 	sh t0,PlayerAnimState,t1	 %
00000482 : fc531d23;   % 1609:  %
00000483 : 01900293;   % 1611: 	li t0,25 # transicao de engolir dura 25 frames e termina no PlayerAnimation %
00000484 : 0fc0f317;   % 1612: 	sh t0,PlayerAnimTransit,t1 %
00000485 : fc531d23;   % 1612:  %
00000486 : 00100293;   % 1614: 	li t0,1 # impede que atire a estrela sem querer %
00000487 : 0fc0f317;   % 1615: 	sw t0,PlayerLock,t1 %
00000488 : fc532823;   % 1615:  %
00000489 : fff00293;   % 1617: 	li t0,-1 %
0000048a : 00541523;   % 1618: 	sh t0,10(s0) # define inimigo como morto %
0000048b : 01042283;   % 1620: 	lw t0,16(s0) %
0000048c : 00542223;   % 1621: 	sw t0,4(s0) # reinicia posicao do inimigo %
0000048d : f5dff06f;   % 1623: 	j DoneEnemyCollisionCheck %
0000048e : fec10113;   % 1628: 	addi sp,sp,-20 %
0000048f : 00112023;   % 1629: 	sw ra,0(sp) %
00000490 : 00812223;   % 1630: 	sw s0,4(sp) %
00000491 : 00912423;   % 1631: 	sw s1,8(sp) %
00000492 : 01212623;   % 1632: 	sw s2,12(sp) %
00000493 : 01312823;   % 1633: 	sw s3,16(sp) %
00000494 : 00451403;   % 1635: 	lh s0,4(a0) # posX %
00000495 : 00651483;   % 1636: 	lh s1,6(a0) # posY %
00000496 : 01051903;   % 1638: 	lh s2,16(a0) # ogPosX %
00000497 : 01251983;   % 1639: 	lh s3,18(a0) # ogPosY %
00000498 : 0fc0f297;   % 1641: 	lhu t0,OffsetX %
00000499 : f5c2d283;   % 1641:  %
0000049a : 0fc0f317;   % 1642: 	lhu t1,OffsetY %
0000049b : f5635303;   % 1642:  %
0000049c : 40540433;   % 1644: 	sub s0,s0,t0 %
0000049d : 406484b3;   % 1645: 	sub s1,s1,t1 %
0000049e : 40590933;   % 1647: 	sub s2,s2,t0 %
0000049f : 406989b3;   % 1648: 	sub s3,s3,t1 %
000004a0 : ff000293;   % 1650: 	li t0,-16 %
000004a1 : 02544063;   % 1651: 	blt s0,t0,OutOfBounds #LeftOOB %
000004a2 : 0f800293;   % 1652: 	li t0,248 # old: 304 %
000004a3 : 0082cc63;   % 1653: 	bgt s0,t0,OutOfBounds #RightOOB %
000004a4 : ff000293;   % 1655: 	li t0,-16 %
000004a5 : 0054c863;   % 1656: 	blt s1,t0,OutOfBounds #TopOOB %
000004a6 : 0f000293;   % 1657: 	li t0,240  %
000004a7 : 0092c463;   % 1658: 	bgt s1,t0,OutOfBounds #BottomOOB %
000004a8 : 0340006f;   % 1660: 	j EndCheckbounds %
000004a9 : 02059463;   % 1663: 	bne a1,zero,DespawnObject %
000004aa : 00100293;   % 1666: 	li t0,1 %
000004ab : 00551523;   % 1667: 	sh t0,10(a0) # atualiza status para 1 %
000004ac : 00051623;   % 1668: 	sh zero,12(a0) # reinicia LifeFrames para 0 %
000004ad : 01052283;   % 1669: 	lw t0,16(a0) # carrega posicao original do objeto %
000004ae : 00552223;   % 1670: 	sw t0,4(a0) # atualiza posicao atual do objeto para a original %
000004af : 0180006f;   % 1672: 	j EndCheckbounds %
000004b0 : 00100293;   % 1675: 	li t0,1 %
000004b1 : 00551523;   % 1676: 	sh t0,10(a0) # atualiza status para 1 se o inimigo foi desativado e saiu da tela (volta a se mover ao entrar na tela, quando status = 1) %
000004b2 : 00c0006f;   % 1677: 	j EndCheckbounds %
000004b3 : 00052023;   % 1680: 	sw zero,0(a0) %
000004b4 : 0040006f;   % 1681: 	j EndCheckbounds %
000004b5 : 00012083;   % 1685: 	lw ra,0(sp) %
000004b6 : 00412403;   % 1686: 	lw s0,4(sp) %
000004b7 : 00812483;   % 1687: 	lw s1,8(sp) %
000004b8 : 00c12903;   % 1688: 	lw s2,12(sp) %
000004b9 : 01012983;   % 1689: 	lw s3,16(sp) %
000004ba : 01410113;   % 1690: 	addi sp,sp,20 %
000004bb : 00008067;   % 1692: 	ret %
000004bc : ffc10113;   % 1696: 	addi sp,sp,-4 %
000004bd : 00112023;   % 1697: 	sw ra,0(sp) %
000004be : 0fc0f297;   % 1699: 	la t0,Obj0ID %
000004bf : d0828293;   % 1699:  %
000004c0 : 00000333;   % 1700: 	mv t1,zero # contador de objetos %
000004c1 : 01400393;   % 1701: 	li t2,20 %
000004c2 : 00730a63;   % 1703: 	beq t1,t2,EndClearObjs %
000004c3 : 0002a023;   % 1705: 	sw zero,0(t0) %
000004c4 : 01428293;   % 1707: 	addi t0,t0,20 %
000004c5 : 00130313;   % 1708: 	addi t1,t1,1 %
000004c6 : ff1ff06f;   % 1710: 	j LoopClearObjs %
000004c7 : 00012083;   % 1713: 	lw ra,0(sp) %
000004c8 : 00410113;   % 1714: 	addi sp,sp,4 %
000004c9 : 00008067;   % 1716: 	ret %
000004ca : fdc10113;   % 1720: 	addi sp,sp,-36 %
000004cb : 00112023;   % 1721: 	sw ra,0(sp) %
000004cc : 00812223;   % 1722: 	sw s0,4(sp) %
000004cd : 00912423;   % 1723: 	sw s1,8(sp) %
000004ce : 01212623;   % 1724: 	sw s2,12(sp) %
000004cf : 01312823;   % 1725: 	sw s3,16(sp) %
000004d0 : 01412a23;   % 1726: 	sw s4,20(sp) %
000004d1 : 01512c23;   % 1727: 	sw s5,24(sp) %
000004d2 : 01612e23;   % 1728: 	sw s6,28(sp) %
000004d3 : 03712023;   % 1729: 	sw s7,32(sp) %
000004d4 : 00a00433;   % 1731: 	mv s0,a0	# s0, endereco base do objeto %
000004d5 : 00441483;   % 1732: 	lh s1,4(s0)	# s1, PosX %
000004d6 : 00641903;   % 1733: 	lh s2,6(s0)	# s2, PosY %
000004d7 : 00041a03;   % 1734: 	lh s4,0(s0)	# s4, ID %
000004d8 : 00a41a83;   % 1735: 	lh s5,10(s0)	# s5, Status %
000004d9 : 00841b03;   % 1736: 	lh s6,8(s0)	# s6, Dir %
000004da : 00c41b83;   % 1737: 	lh s7,12(s0)	# s7, LifeFrames %
000004db : 0fc2c997;   % 1739: 	la s3,collisionRender %
000004dc : 9e498993;   % 1739:  %
000004dd : 00c98993;   % 1740: 	addi s3,s3,12 %
000004de : 009002b3;   % 1742: 	mv t0,s1 %
000004df : 00f2f293;   % 1743: 	andi t0,t0,0xf %
000004e0 : 005989b3;   % 1744: 	add s3,s3,t0			# adiciona o resto do offset X por 16 %
000004e1 : 012002b3;   % 1746: 	mv t0,s2 %
000004e2 : 00f2f293;   % 1747: 	andi t0,t0,0xf %
000004e3 : 02000313;   % 1748: 	li t1,32 %
000004e4 : 026282b3;   % 1749: 	mul t0,t0,t1			# adiciona as linhas com base no resto do offset Y por 16 %
000004e5 : 005989b3;   % 1751: 	add s3,s3,t0			# s3, inicialmente com o endereco para o primeiro pixel do jogador no mapa de colisoes renderizado %
000004e6 : 00000fb3;   % 1754: 	mv t6,zero # contador de colisoes que podem atingir o objeto %
000004e7 : 0100006f;   % 1756: 	j SetupObjectCols %
000004e8 : 001f8f93;   % 1758: 	addi t6,t6,1 %
000004e9 : 00300313;   % 1759: 	li t1,3 # commonEnemyCol, wallCol, whispyCol %
000004ea : 11f30863;   % 1760: 	beq t1,t6,DoneObjectCollisionCheck %
000004eb : 013002b3;   % 1764: 	mv t0,s3 %
000004ec : 04200f13;   % 1765: 	li t5,66 # pixel 2,2 (iniciando em 0,0) %
000004ed : 00000e33;   % 1767: 	mv t3,zero %
000004ee : 00400e93;   % 1768: 	li t4,4				# contador de pixels a analisar %
000004ef : 05500393;   % 1770: 	li t2,85 %
000004f0 : 000f8e63;   % 1771: 	beq t6,zero,ObjectCols %
000004f1 : 00100313;   % 1772: 	li t1,1 %
000004f2 : 0c000393;   % 1773: 	li t2,192 %
000004f3 : 006f8863;   % 1774: 	beq t6,t1,ObjectCols %
000004f4 : 00200313;   % 1775: 	li t1,2 %
000004f5 : 05800393;   % 1776: 	li t2,88 %
000004f6 : 006f8263;   % 1777: 	beq t6,t1,ObjectCols %
000004f7 : 01e282b3;   % 1781: 	add t0,t0,t5 %
000004f8 : 0002c303;   % 1782: 	lbu t1,0(t0) %
000004f9 : 02730863;   % 1784: 	beq t1,t2,ObjectHit %
000004fa : 001e0e13;   % 1786: 	addi t3,t3,1 %
000004fb : fbde0ae3;   % 1787: 	beq t3,t4,NextObjectDanger %
000004fc : 00b00f13;   % 1789: 	li t5,11 # pixel 13,2 %
000004fd : 00100313;   % 1790: 	li t1,1 %
000004fe : ffc302e3;   % 1791: 	beq t1,t3,ObjectCols %
000004ff : 15500f13;   % 1792: 	li t5,341 # pixel 2,13 %
00000500 : 00200313;   % 1793: 	li t1,2 %
00000501 : fdc30ce3;   % 1794: 	beq t1,t3,ObjectCols %
00000502 : 00b00f13;   % 1795: 	li t5,11 # pixel 13,13 %
00000503 : 00300313;   % 1796: 	li t1,3 %
00000504 : fdc306e3;   % 1797: 	beq t1,t3,ObjectCols %
00000505 : 05800293;   % 1800: 	li t0,88 %
00000506 : 06729463;   % 1801: 	bne t0,t2,SkipBossHit # se for o boss tenta dar dano nele %
00000507 : 0fc0f297;   % 1803: 	lw t0,BossIFrames %
00000508 : e6c2a283;   % 1803:  %
00000509 : 04029e63;   % 1804: 	bnez t0,SkipBossHit %
0000050a : 00600293;   % 1806: 	li t0,6 %
0000050b : fff00313;   % 1807: 	li t1,-1 %
0000050c : 03428263;   % 1808: 	beq t0,s4,GotBossDamage %
0000050d : 00400293;   % 1809: 	li t0,4 %
0000050e : ffd00313;   % 1810: 	li t1,-3 %
0000050f : 01428c63;   % 1811: 	beq t0,s4,GotBossDamage %
00000510 : 00300293;   % 1812: 	li t0,3 %
00000511 : ffd00313;   % 1813: 	li t1,-3 %
00000512 : 01428663;   % 1814: 	beq t0,s4,GotBossDamage %
00000513 : 00700293;   % 1815: 	li t0,7 %
00000514 : ffc00313;   % 1816: 	li t1,-4 %
00000515 : 0fc0f297;   % 1819: 	lw t0,BossHP %
00000516 : e102a283;   % 1819:  %
00000517 : 006282b3;   % 1820: 	add t0,t0,t1 %
00000518 : 00504663;   % 1821: 	bgt t0,zero,DontZeroBossHP %
00000519 : e8dff0ef;   % 1822: 	jal ClearObjects %
0000051a : 000002b3;   % 1823: 	mv t0,zero %
0000051b : 0fc0f317;   % 1825: 	sw t0,BossHP,t1 %
0000051c : de532c23;   % 1825:  %
0000051d : 02800293;   % 1827: 	li t0,40 %
0000051e : 0fc0f317;   % 1828: 	sw t0,BossIFrames,t1 %
0000051f : e0532823;   % 1828:  %
00000520 : 00400293;   % 1831: 	li t0,4 %
00000521 : 03428463;   % 1832: 	beq t0,s4,DontHitIce %
00000522 : 00a00293;   % 1834: 	li t0,10 %
00000523 : 03428063;   % 1835: 	beq t0,s4,DontHitIce %
00000524 : 00041023;   % 1837: 	sh zero,0(s0) # desespawna objeto %
00000525 : 00b00513;   % 1839: 	li a0,11 # id do objeto (sprite de hit) ### %
00000526 : 00100593;   % 1840: 	li a1,1 # quantidade do objeto %
00000527 : 00442603;   % 1841: 	lw a2,4(s0) %
00000528 : 000006b3;   % 1842: 	mv a3,zero %
00000529 : 00000733;   % 1843: 	mv a4,zero %
0000052a : b5dfe0ef;   % 1844: 	jal BuildObject %
0000052b : 00c0006f;   % 1847: 	j DoneObjectCollisionCheck %
0000052c : 00941223;   % 1850: 	sh s1,4(s0)	# s1, PosX %
0000052d : 01241323;   % 1851: 	sh s2,6(s0)	# s2, PosY %
0000052e : 00012083;   % 1855: 	lw ra,0(sp) %
0000052f : 00412403;   % 1856: 	lw s0,4(sp) %
00000530 : 00812483;   % 1857: 	lw s1,8(sp) %
00000531 : 00c12903;   % 1858: 	lw s2,12(sp) %
00000532 : 01012983;   % 1859: 	lw s3,16(sp) %
00000533 : 01412a03;   % 1860: 	lw s4,20(sp) %
00000534 : 01812a83;   % 1861: 	lw s5,24(sp) %
00000535 : 01812a83;   % 1862: 	lw s5,24(sp) %
00000536 : 01c12b03;   % 1863: 	lw s6,28(sp) %
00000537 : 02012b83;   % 1864: 	lw s7,32(sp) %
00000538 : 02410113;   % 1865: 	addi sp,sp,36 %
00000539 : 00008067;   % 1867: 	ret %
0000053a : ffc10113;   % 3: 	addi sp,sp,-4 %
0000053b : 00112023;   % 4: 	sw ra,0(sp) %
0000053c : 3c0000ef;   % 6: 	jal DrawBoss %
0000053d : 0fc0f297;   % 8: 	lh t0,PlayerPosY %
0000053e : cda29283;   % 8:  %
0000053f : 0a000313;   % 9: 	li t1,160 %
00000540 : 0462c663;   % 10: 	blt t0,t1,EndCheckBoss %
00000541 : 054000ef;   % 12: 	jal BossLogic %
00000542 : 0fc0f297;   % 14: 	lw t0,BossTimer %
00000543 : d602a283;   % 14:  %
00000544 : 00128293;   % 15: 	addi t0,t0,1 %
00000545 : 0fc0f317;   % 16: 	sw t0,BossTimer,t1 %
00000546 : d4532a23;   % 16:  %
00000547 : 0fc0f297;   % 18: 	lw t0,BossAnimDuration  %
00000548 : d682a283;   % 18:  %
00000549 : 00028863;   % 19: 	beqz t0,SkipSubBossDur %
0000054a : fff28293;   % 20: 	addi t0,t0,-1 %
0000054b : 0fc0f317;   % 21: 	sw t0,BossAnimDuration,t1 %
0000054c : d4532c23;   % 21:  %
0000054d : 0fc0f297;   % 24: 	lw t0,BossIFrames %
0000054e : d542a283;   % 24:  %
0000054f : 00028863;   % 25: 	beqz t0,SkipSubBossIFrames %
00000550 : fff28293;   % 26: 	addi t0,t0,-1 %
00000551 : 0fc0f317;   % 27: 	sw t0,BossIFrames,t1 %
00000552 : d4532223;   % 27:  %
00000553 : 00012083;   % 31: 	lw ra,0(sp) %
00000554 : 00410113;   % 32: 	addi sp,sp,4 %
00000555 : 00008067;   % 34: 	ret %
00000556 : ffc10113;   % 38: 	addi sp,sp,-4 %
00000557 : 00112023;   % 39: 	sw ra,0(sp) %
00000558 : 0fc0f417;   % 43: 	lw s0,BossTimer # BossTimer atualizado ao fim do CheckBoss %
00000559 : d0842403;   % 43:  %
0000055a : 00400493;   % 47: 	li s1,4 # end %
0000055b : 0fc0f297;   % 48: 	lw t0,BossHP %
0000055c : cf82a283;   % 48:  %
0000055d : 06028a63;   % 49: 	beqz t0,DefinedBossAnim %
0000055e : 00300493;   % 51: 	li s1,3 # hurt %
0000055f : 0fc0f297;   % 52: 	lw t0,BossIFrames %
00000560 : d0c2a283;   % 52:  %
00000561 : 06029263;   % 53: 	bnez t0,DefinedBossAnim %
00000562 : 02040c63;   % 55: 	beqz s0,SkipBossAttack # evita ataques no primeiro frame da luta %
00000563 : 08047293;   % 57: 	andi t0,s0,128 %
00000564 : 00029a63;   % 58: 	bnez t0,CheckNextBossAtt # skipa o sopro e a piscada quando t0 for 0, pois e o ataque de maca %
00000565 : 00100513;   % 59: 	li a0,1 # maca %
00000566 : 0ff47593;   % 60: 	andi a1,s0,255 %
00000567 : 250000ef;   % 61: 	jal BossAttacks %
00000568 : 02c0006f;   % 62: 	j SkipBossAnim %
00000569 : 04047293;   % 65: 	andi t0,s0,64 %
0000056a : 00200493;   % 66: 	li s1,2 # attack, sopro comeca nos valores mod 64, exceto quando for mod 128 %
0000056b : 00029a63;   % 67: 	bnez t0,SkipBossAttack %
0000056c : 00000533;   % 68: 	mv a0,zero # sopro %
0000056d : 07f47593;   % 69: 	andi a1,s0,127 %
0000056e : 234000ef;   % 70: 	jal BossAttacks %
0000056f : 02c0006f;   % 71: 	j DefinedBossAnim %
00000570 : 01f47293;   % 73: 	andi t0,s0,31 %
00000571 : 00100493;   % 74: 	li s1,1 # blink %
00000572 : 02028063;   % 75: 	beqz t0,DefinedBossAnim %
00000573 : 0fc0f297;   % 78: 	lw t0,BossAnimDuration %
00000574 : cb82a283;   % 78:  %
00000575 : 0fc0f497;   % 79: 	lw s1,BossAnimState  %
00000576 : c984a483;   % 79:  %
00000577 : 00029663;   % 80: 	bnez t0,DefinedBossAnim # mantem uma animacao que ja estiver acontecendo %
00000578 : 000004b3;   % 82: 	mv s1,zero %
00000579 : 0040006f;   % 83: 	j DefinedBossAnim %
0000057a : 0fc0f297;   % 86: 	sw s1,BossAnimState,t0 %
0000057b : c892a223;   % 86:  %
0000057c : 0fc0fa97;   % 88: 	lw s5,FrameCount %
0000057d : c48aaa83;   % 88:  %
0000057e : 0fc0f297;   % 90: 	lw t0,BossSprite %
0000057f : c782a283;   % 90:  %
00000580 : 0fc0f497;   % 91: 	lw s1,BossAnimCount %
00000581 : c784a483;   % 91:  %
00000582 : 0fc0f917;   % 92: 	lw s2,BossMaxFrame	# duracao do sprite atual em frames, se for 0 sera um sprite sem animacao %
00000583 : c7892903;   % 92:  %
00000584 : 0fc0f997;   % 94: 	lw s3,BossAnimState # # # # atualiza s3 com o valor anterior de s1 %
00000585 : c5c9a983;   % 94:  %
00000586 : 0fc0f297;   % 95: 	lw t0,BossOldAnim %
00000587 : c5c2a283;   % 95:  %
00000588 : 00598c63;   % 96: 	beq s3,t0,ContinueBossAnim  # continua uma animacao se o valor dela nao trocou %
00000589 : 0fc0f317;   % 99: 	sw s5,BossLastFrame,t1 %
0000058a : c5532c23;   % 99:  %
0000058b : 000004b3;   % 100: 	mv s1,zero	# define que o proximo sprite sera o sprite 0 (da animacao definida abaixo) %
0000058c : 0fc0f317;   % 102: 	sh s1,BossAnimCount,t1 %
0000058d : c4931423;   % 102:  %
0000058e : 0fc0f317;   % 104: 	sw s3,BossOldAnim,t1 %
0000058f : c3332e23;   % 104:  %
00000590 : 00000b33;   % 106: 	mv s6,zero  # inicia definindo a duracao da nova animacao como zero, para o caso das que tem apenas 1 frame %
00000591 : 00000a13;   % 109: 	li s4,0 %
00000592 : 14098e63;   % 110: 	beq s3,zero,GotBossSprite %
00000593 : 00100293;   % 111: 	li t0,1 %
00000594 : 00598e63;   % 112: 	beq s3,t0,WhispyBlink %
00000595 : 00200293;   % 113: 	li t0,2 %
00000596 : 06598263;   % 114: 	beq s3,t0,WhispyAttack %
00000597 : 00300293;   % 115: 	li t0,3 %
00000598 : 0a598663;   % 116: 	beq s3,t0,WhispyHurt %
00000599 : 00400293;   % 117: 	li t0,4 %
0000059a : 10598063;   % 118: 	beq s3,t0,WhispyEnd %
0000059b : 15c000ef;   % 122: 	jal CheckNextSprAnimBoss %
0000059c : 00300293;   % 123: 	li t0,3 %
0000059d : 0254e4b3;   % 124: 	rem s1,s1,t0 %
0000059e : 0fc0f297;   % 126: 	lw t0,BossAnimDuration %
0000059f : c0c2a283;   % 126:  %
000005a0 : 00029863;   % 127: 	bnez t0,SkipSetDurationBlink %
000005a1 : 00c00293;   % 128: 	li t0,12 %
000005a2 : 0fc0f317;   % 129: 	sw t0,BossAnimDuration,t1 %
000005a3 : be532e23;   % 129:  %
000005a4 : 00100a13;   % 132: 	li s4,1 # blink0 %
000005a5 : 00400b13;   % 133: 	li s6,4 %
000005a6 : 10048663;   % 134: 	beq s1,zero,GotBossSprite %
000005a7 : 00100293;   % 135: 	li t0,1 %
000005a8 : 00200a13;   % 136: 	li s4,2 # blink1 %
000005a9 : 00400b13;   % 137: 	li s6,4 %
000005aa : 0e548e63;   % 138: 	beq s1,t0,GotBossSprite %
000005ab : 00200293;   % 139: 	li t0,2 %
000005ac : 00100a13;   % 140: 	li s4,1 # blink0 %
000005ad : 00400b13;   % 141: 	li s6,4 %
000005ae : 0e548663;   % 142: 	beq s1,t0,GotBossSprite %
000005af : 10c000ef;   % 145: 	jal CheckNextSprAnimBoss %
000005b0 : 00300293;   % 146: 	li t0,3 %
000005b1 : 0254e4b3;   % 147: 	rem s1,s1,t0 %
000005b2 : 0fc0f297;   % 149: 	lw t0,BossAnimDuration %
000005b3 : bbc2a283;   % 149:  %
000005b4 : 00029863;   % 150: 	bnez t0,SkipSetDurationAtt %
000005b5 : 02800293;   % 151: 	li t0,40 %
000005b6 : 0fc0f317;   % 152: 	sw t0,BossAnimDuration,t1 %
000005b7 : ba532623;   % 152:  %
000005b8 : 00300a13;   % 155: 	li s4,3 # attack0 %
000005b9 : 00800b13;   % 156: 	li s6,8 %
000005ba : 0a048e63;   % 157: 	beq s1,zero,GotBossSprite %
000005bb : 00100293;   % 158: 	li t0,1 %
000005bc : 00400a13;   % 159: 	li s4,4 # attack1 %
000005bd : 01800b13;   % 160: 	li s6,24 %
000005be : 0a548663;   % 161: 	beq s1,t0,GotBossSprite %
000005bf : 00200293;   % 162: 	li t0,2 %
000005c0 : 00500a13;   % 163: 	li s4,5 # attack2 %
000005c1 : 00800b13;   % 164: 	li s6,8 %
000005c2 : 08548e63;   % 165: 	beq s1,t0,GotBossSprite %
000005c3 : 0bc000ef;   % 168: 	jal CheckNextSprAnimBoss %
000005c4 : 0034f493;   % 169: 	andi s1,s1,3 %
000005c5 : 0fc0f297;   % 171: 	lw t0,BossAnimDuration %
000005c6 : b702a283;   % 171:  %
000005c7 : 00029863;   % 172: 	bnez t0,SkipSetDurationHurt %
000005c8 : 01800293;   % 173: 	li t0,24 %
000005c9 : 0fc0f317;   % 174: 	sw t0,BossAnimDuration,t1 %
000005ca : b6532023;   % 174:  %
000005cb : 00600a13;   % 177: 	li s4,6 # hurt0 %
000005cc : 00800b13;   % 178: 	li s6,8 %
000005cd : 06048863;   % 179: 	beq s1,zero,GotBossSprite %
000005ce : 00100293;   % 180: 	li t0,1 %
000005cf : 00700a13;   % 181: 	li s4,7 # hurt1 %
000005d0 : 00800b13;   % 182: 	li s6,8 %
000005d1 : 06548063;   % 183: 	beq s1,t0,GotBossSprite %
000005d2 : 00200293;   % 184: 	li t0,2 %
000005d3 : 00600a13;   % 185: 	li s4,6 # hurt0 %
000005d4 : 00800b13;   % 186: 	li s6,8 %
000005d5 : 04548863;   % 187: 	beq s1,t0,GotBossSprite %
000005d6 : 00300293;   % 188: 	li t0,3 %
000005d7 : 00700a13;   % 189: 	li s4,7 # hurt1 %
000005d8 : 00800b13;   % 190: 	li s6,8 %
000005d9 : 04548063;   % 191: 	beq s1,t0,GotBossSprite %
000005da : 060000ef;   % 194: 	jal CheckNextSprAnimBoss %
000005db : 0014f493;   % 195: 	andi s1,s1,1 %
000005dc : 0fc0f297;   % 197: 	lw t0,BossAnimDuration %
000005dd : b142a283;   % 197:  %
000005de : 00029863;   % 198: 	bnez t0,SkipSetDurationEnd %
000005df : 02000293;   % 199: 	li t0,32 %
000005e0 : 0fc0f317;   % 200: 	sw t0,BossAnimDuration,t1 %
000005e1 : b0532223;   % 200:  %
000005e2 : 00800a13;   % 203: 	li s4,8 # hurt0 %
000005e3 : 01000b13;   % 204: 	li s6,16 %
000005e4 : 00048a63;   % 205: 	beq s1,zero,GotBossSprite %
000005e5 : 00100293;   % 206: 	li t0,1 %
000005e6 : 00900a13;   % 207: 	li s4,9 # hurt1 %
000005e7 : 01000b13;   % 208: 	li s6,16 %
000005e8 : 00548263;   % 209: 	beq s1,t0,GotBossSprite %
000005e9 : 0fc0f297;   % 212: 	sw s1,BossAnimCount,t0 %
000005ea : ac92aa23;   % 212:  %
000005eb : 0fc0f297;   % 213: 	sw s4,BossSprite,t0	# armazena o valor do novo sprite  %
000005ec : ad42a223;   % 213:  %
000005ed : 0fc0f297;   % 214: 	sw s6,BossMaxFrame,t0  # armazena a duracao da animacao atual %
000005ee : ad62a623;   % 214:  %
000005ef : 00012083;   % 217: 	lw ra,0(sp) %
000005f0 : 00410113;   % 218: 	addi sp,sp,4			# recupera endereco de retorno da pilha %
000005f1 : 00008067;   % 220: 	ret %
000005f2 : 0fc0f317;   % 227: 	lw t1,BossLastFrame %
000005f3 : ab432303;   % 227:  %
000005f4 : 406a83b3;   % 229: 	sub t2,s5,t1	 %
000005f5 : 0123ca63;   % 230: 	blt t2,s2,KeepBossSprAnim %
000005f6 : 00090863;   % 231: 	beq s2,zero,KeepBossSprAnim		# se estiver chegando de um sprite fixo %
000005f7 : 0fc0f297;   % 233: 	sw s5,BossLastFrame,t0 %
000005f8 : ab52a023;   % 233:  %
000005f9 : 00148493;   % 234: 	addi s1,s1,1 		# avanca o contador de sprites da animacao se a duracao do sprite passou %
000005fa : 00008067;   % 237: 	ret %
000005fb : ffc10113;   % 241: 	addi sp,sp,-4 %
000005fc : 00112023;   % 242: 	sw ra,0(sp) %
000005fd : 04051463;   % 244: 	bnez a0,AppleAttack %
000005fe : 00000293;   % 246: 	li t0,0 %
000005ff : 02b28063;   % 247: 	beq t0,a1,AirAttack %
00000600 : 01500293;   % 248: 	li t0,21 %
00000601 : 00b28c63;   % 249: 	beq t0,a1,AirAttack %
00000602 : 02a00293;   % 250: 	li t0,42 %
00000603 : 00b28863;   % 251: 	beq t0,a1,AirAttack %
00000604 : 03f00293;   % 252: 	li t0,63 %
00000605 : 00b28463;   % 253: 	beq t0,a1,AirAttack %
00000606 : 08c0006f;   % 254: 	j DoneBossAttacks %
00000607 : 00800513;   % 257: 	li a0,8 # id do objeto (vento inimigo) %
00000608 : 00100593;   % 258: 	li a1,1 # quantidade do objeto %
00000609 : 13700613;   % 259: 	li a2,311 %
0000060a : 01061613;   % 260: 	slli a2,a2,16 %
0000060b : 0bd60613;   % 261: 	addi a2,a2,189 %
0000060c : 000006b3;   % 262: 	mv a3,zero # Dir %
0000060d : fd0fe0ef;   % 263: 	jal BuildObject %
0000060e : 06c0006f;   % 265: 	j DoneBossAttacks %
0000060f : 06059463;   % 268: 	bnez a1,DoneBossAttacks %
00000610 : 0fc0f297;   % 270: 	lw t0,LastApple %
00000611 : a4c2a283;   % 270:  %
00000612 : 01000393;   % 272: 	li t2,16 %
00000613 : 02028463;   % 273: 	beqz t0,GotApplePos %
00000614 : 00100313;   % 274: 	li t1,1 %
00000615 : 07000393;   % 275: 	li t2,112 %
00000616 : 00628e63;   % 276: 	beq t0,t1,GotApplePos %
00000617 : 00200313;   % 277: 	li t1,2 %
00000618 : 04000393;   % 278: 	li t2,64  %
00000619 : 00628863;   % 279: 	beq t0,t1,GotApplePos %
0000061a : 00300313;   % 280: 	li t1,3 %
0000061b : 0a000393;   % 281: 	li t2,160  %
0000061c : 00628263;   % 282: 	beq t0,t1,GotApplePos %
0000061d : 02100513;   % 285: 	li a0,33 # id do objeto (maca) %
0000061e : 00100593;   % 286: 	li a1,1 # quantidade do objeto %
0000061f : 0f000613;   % 287: 	li a2,240 %
00000620 : 01061613;   % 288: 	slli a2,a2,16 %
00000621 : 00760633;   % 289: 	add a2,a2,t2 %
00000622 : 000006b3;   % 290: 	mv a3,zero # Dir %
00000623 : 00500733;   % 291: 	mv a4,t0 %
00000624 : f74fe0ef;   % 292: 	jal BuildObject %
00000625 : 00128293;   % 294: 	addi t0,t0,1 %
00000626 : 0032f293;   % 295: 	andi t0,t0,3 %
00000627 : 0fc0f317;   % 296: 	sw t0,LastApple,t1 %
00000628 : 9e532823;   % 296:  %
00000629 : 00012083;   % 300: 	lw ra,0(sp) %
0000062a : 00410113;   % 301: 	addi sp,sp,4 %
0000062b : 00008067;   % 303: 	ret %
0000062c : ffc10113;   % 307: 	addi sp,sp,-4 %
0000062d : 00112023;   % 308: 	sw ra,0(sp) %
0000062e : 0fc0f297;   % 310: 	lw t0,BossSprite %
0000062f : 9b82a283;   % 310:  %
00000630 : 04028663;   % 311: 	beqz t0,WhispyIdle %
00000631 : 00100313;   % 312: 	li t1,1 %
00000632 : 0a628463;   % 313: 	beq t0,t1,WhispyBlink0 %
00000633 : 00200313;   % 314: 	li t1,2 %
00000634 : 10628263;   % 315: 	beq t0,t1,WhispyBlink1 %
00000635 : 00300313;   % 316: 	li t1,3 %
00000636 : 16628063;   % 317: 	beq t0,t1,WhispyAtt0 %
00000637 : 00400313;   % 318: 	li t1,4 %
00000638 : 1a628e63;   % 319: 	beq t0,t1,WhispyAtt1 %
00000639 : 00500313;   % 320: 	li t1,5 %
0000063a : 20628c63;   % 321: 	beq t0,t1,WhispyAtt2 %
0000063b : 00600313;   % 322: 	li t1,6 %
0000063c : 26628a63;   % 323: 	beq t0,t1,WhispyHurt0 %
0000063d : 00700313;   % 324: 	li t1,7 %
0000063e : 2c628863;   % 325: 	beq t0,t1,WhispyHurt1 %
0000063f : 00800313;   % 326: 	li t1,8 %
00000640 : 32628663;   % 327: 	beq t0,t1,WhispyEnd0 %
00000641 : 00900313;   % 328: 	li t1,9 %
00000642 : 3a628463;   % 329: 	beq t0,t1,WhispyEnd1 %
00000643 : 0fc0f517;   % 332: 	la a0,eye0 %
00000644 : 98c50513;   % 332:  %
00000645 : 10700593;   % 333: 	li a1,263 %
00000646 : 01059593;   % 334: 	slli a1,a1,16 %
00000647 : 0aa58593;   % 335: 	addi a1,a1,170 %
00000648 : 000006b3;   % 336: 	mv a3,zero %
00000649 : 00000733;   % 337: 	mv a4,zero %
0000064a : 76c030ef;   % 338: 	jal Print %
0000064b : 0fc0f517;   % 340: 	la a0,eye0 %
0000064c : 96c50513;   % 340:  %
0000064d : 10700593;   % 341: 	li a1,263 %
0000064e : 01059593;   % 342: 	slli a1,a1,16 %
0000064f : 0b758593;   % 343: 	addi a1,a1,183 %
00000650 : 000006b3;   % 344: 	mv a3,zero %
00000651 : 00000733;   % 345: 	mv a4,zero %
00000652 : 74c030ef;   % 346: 	jal Print %
00000653 : 0fc0f517;   % 348: 	la a0,eye0 %
00000654 : 94c50513;   % 348:  %
00000655 : 13100593;   % 349: 	li a1,305 %
00000656 : 01059593;   % 350: 	slli a1,a1,16 %
00000657 : 0af58593;   % 351: 	addi a1,a1,175 %
00000658 : 000006b3;   % 352: 	mv a3,zero %
00000659 : 00000733;   % 353: 	mv a4,zero %
0000065a : 72c030ef;   % 354: 	jal Print %
0000065b : 3c80006f;   % 356: 	j EndPrintWhispy %
0000065c : 0fc0f517;   % 359: 	la a0,eye1 %
0000065d : 9b450513;   % 359:  %
0000065e : 10900593;   % 360: 	li a1,265 %
0000065f : 01059593;   % 361: 	slli a1,a1,16 %
00000660 : 0a958593;   % 362: 	addi a1,a1,169 %
00000661 : 000006b3;   % 363: 	mv a3,zero %
00000662 : 00000733;   % 364: 	mv a4,zero %
00000663 : 708030ef;   % 365: 	jal Print %
00000664 : 0fc0f517;   % 367: 	la a0,eye1 %
00000665 : 99450513;   % 367:  %
00000666 : 10900593;   % 368: 	li a1,265 %
00000667 : 01059593;   % 369: 	slli a1,a1,16 %
00000668 : 0b658593;   % 370: 	addi a1,a1,182 %
00000669 : 000006b3;   % 371: 	mv a3,zero %
0000066a : 00000733;   % 372: 	mv a4,zero %
0000066b : 6e8030ef;   % 373: 	jal Print %
0000066c : 0fc0f517;   % 375: 	la a0,eye1 %
0000066d : 97450513;   % 375:  %
0000066e : 12e00593;   % 376: 	li a1,302 %
0000066f : 01059593;   % 377: 	slli a1,a1,16 %
00000670 : 0af58593;   % 378: 	addi a1,a1,175 %
00000671 : 000006b3;   % 379: 	mv a3,zero %
00000672 : 00000733;   % 380: 	mv a4,zero %
00000673 : 6c8030ef;   % 381: 	jal Print %
00000674 : 3640006f;   % 383: 	j EndPrintWhispy %
00000675 : 0fc0f517;   % 386: 	la a0,eye2 %
00000676 : 9bc50513;   % 386:  %
00000677 : 10e00593;   % 387: 	li a1,270 %
00000678 : 01059593;   % 388: 	slli a1,a1,16 %
00000679 : 0a958593;   % 389: 	addi a1,a1,169 %
0000067a : 000006b3;   % 390: 	mv a3,zero %
0000067b : 00000733;   % 391: 	mv a4,zero %
0000067c : 6a4030ef;   % 392: 	jal Print %
0000067d : 0fc0f517;   % 394: 	la a0,eye2 %
0000067e : 99c50513;   % 394:  %
0000067f : 10e00593;   % 395: 	li a1,270 %
00000680 : 01059593;   % 396: 	slli a1,a1,16 %
00000681 : 0b658593;   % 397: 	addi a1,a1,182 %
00000682 : 000006b3;   % 398: 	mv a3,zero %
00000683 : 00000733;   % 399: 	mv a4,zero %
00000684 : 684030ef;   % 400: 	jal Print %
00000685 : 0fc0f517;   % 402: 	la a0,eye1 %
00000686 : 91050513;   % 402:  %
00000687 : 12e00593;   % 403: 	li a1,302 %
00000688 : 01059593;   % 404: 	slli a1,a1,16 %
00000689 : 0af58593;   % 405: 	addi a1,a1,175 %
0000068a : 000006b3;   % 406: 	mv a3,zero %
0000068b : 00000733;   % 407: 	mv a4,zero %
0000068c : 664030ef;   % 408: 	jal Print %
0000068d : 3000006f;   % 410: 	j EndPrintWhispy %
0000068e : 0fc0f517;   % 413: 	la a0,eye0 %
0000068f : 86050513;   % 413:  %
00000690 : 10700593;   % 414: 	li a1,263 %
00000691 : 01059593;   % 415: 	slli a1,a1,16 %
00000692 : 0aa58593;   % 416: 	addi a1,a1,170 %
00000693 : 000006b3;   % 417: 	mv a3,zero %
00000694 : 00000733;   % 418: 	mv a4,zero %
00000695 : 640030ef;   % 419: 	jal Print %
00000696 : 0fc0f517;   % 421: 	la a0,eye0 %
00000697 : 84050513;   % 421:  %
00000698 : 10700593;   % 422: 	li a1,263 %
00000699 : 01059593;   % 423: 	slli a1,a1,16 %
0000069a : 0b758593;   % 424: 	addi a1,a1,183 %
0000069b : 000006b3;   % 425: 	mv a3,zero %
0000069c : 00000733;   % 426: 	mv a4,zero %
0000069d : 620030ef;   % 427: 	jal Print %
0000069e : 0fc0f517;   % 429: 	la a0,mouth0 %
0000069f : 97050513;   % 429:  %
000006a0 : 12f00593;   % 430: 	li a1,303 %
000006a1 : 01059593;   % 431: 	slli a1,a1,16 %
000006a2 : 0a558593;   % 432: 	addi a1,a1,165 %
000006a3 : 00100693;   % 433: 	li a3,1 %
000006a4 : 00000733;   % 434: 	mv a4,zero %
000006a5 : 600030ef;   % 435: 	jal Print %
000006a6 : 29c0006f;   % 437: 	j EndPrintWhispy %
000006a7 : 0fc0e517;   % 440: 	la a0,eye0 %
000006a8 : 7fc50513;   % 440:  %
000006a9 : 10700593;   % 441: 	li a1,263 %
000006aa : 01059593;   % 442: 	slli a1,a1,16 %
000006ab : 0aa58593;   % 443: 	addi a1,a1,170 %
000006ac : 000006b3;   % 444: 	mv a3,zero %
000006ad : 00000733;   % 445: 	mv a4,zero %
000006ae : 5dc030ef;   % 446: 	jal Print %
000006af : 0fc0e517;   % 448: 	la a0,eye0 %
000006b0 : 7dc50513;   % 448:  %
000006b1 : 10700593;   % 449: 	li a1,263 %
000006b2 : 01059593;   % 450: 	slli a1,a1,16 %
000006b3 : 0b758593;   % 451: 	addi a1,a1,183 %
000006b4 : 000006b3;   % 452: 	mv a3,zero %
000006b5 : 00000733;   % 453: 	mv a4,zero %
000006b6 : 5bc030ef;   % 454: 	jal Print %
000006b7 : 0fc0f517;   % 456: 	la a0,mouth0 %
000006b8 : 90c50513;   % 456:  %
000006b9 : 12f00593;   % 457: 	li a1,303 %
000006ba : 01059593;   % 458: 	slli a1,a1,16 %
000006bb : 0a858593;   % 459: 	addi a1,a1,168 %
000006bc : 00100693;   % 460: 	li a3,1 %
000006bd : 00000733;   % 461: 	mv a4,zero %
000006be : 59c030ef;   % 462: 	jal Print %
000006bf : 2380006f;   % 464: 	j EndPrintWhispy %
000006c0 : 0fc0e517;   % 467: 	la a0,eye0 %
000006c1 : 79850513;   % 467:  %
000006c2 : 10700593;   % 468: 	li a1,263 %
000006c3 : 01059593;   % 469: 	slli a1,a1,16 %
000006c4 : 0aa58593;   % 470: 	addi a1,a1,170 %
000006c5 : 000006b3;   % 471: 	mv a3,zero %
000006c6 : 00000733;   % 472: 	mv a4,zero %
000006c7 : 578030ef;   % 473: 	jal Print %
000006c8 : 0fc0e517;   % 475: 	la a0,eye0 %
000006c9 : 77850513;   % 475:  %
000006ca : 10700593;   % 476: 	li a1,263 %
000006cb : 01059593;   % 477: 	slli a1,a1,16 %
000006cc : 0b758593;   % 478: 	addi a1,a1,183 %
000006cd : 000006b3;   % 479: 	mv a3,zero %
000006ce : 00000733;   % 480: 	mv a4,zero %
000006cf : 558030ef;   % 481: 	jal Print %
000006d0 : 0fc0f517;   % 483: 	la a0,mouth0 %
000006d1 : 8a850513;   % 483:  %
000006d2 : 12f00593;   % 484: 	li a1,303 %
000006d3 : 01059593;   % 485: 	slli a1,a1,16 %
000006d4 : 0a558593;   % 486: 	addi a1,a1,165 %
000006d5 : 00100693;   % 487: 	li a3,1 %
000006d6 : 00000733;   % 488: 	mv a4,zero %
000006d7 : 538030ef;   % 489: 	jal Print %
000006d8 : 1d40006f;   % 491: 	j EndPrintWhispy %
000006d9 : 0fc0e517;   % 494: 	la a0,eye0 %
000006da : 73450513;   % 494:  %
000006db : 0fc00593;   % 495: 	li a1,252 %
000006dc : 01059593;   % 496: 	slli a1,a1,16 %
000006dd : 0ac58593;   % 497: 	addi a1,a1,172 %
000006de : 000006b3;   % 498: 	mv a3,zero %
000006df : 00000733;   % 499: 	mv a4,zero %
000006e0 : 514030ef;   % 500: 	jal Print %
000006e1 : 0fc0e517;   % 502: 	la a0,eye1 %
000006e2 : 7a050513;   % 502:  %
000006e3 : 10400593;   % 503: 	li a1,260 %
000006e4 : 01059593;   % 504: 	slli a1,a1,16 %
000006e5 : 0bb58593;   % 505: 	addi a1,a1,187 %
000006e6 : 000006b3;   % 506: 	mv a3,zero %
000006e7 : 00000733;   % 507: 	mv a4,zero %
000006e8 : 4f4030ef;   % 508: 	jal Print %
000006e9 : 0fc0f517;   % 510: 	la a0,mouth1 %
000006ea : 95050513;   % 510:  %
000006eb : 13c00593;   % 511: 	li a1,316 %
000006ec : 01059593;   % 512: 	slli a1,a1,16 %
000006ed : 0ad58593;   % 513: 	addi a1,a1,173 %
000006ee : 000006b3;   % 514: 	mv a3,zero %
000006ef : 00000733;   % 515: 	mv a4,zero %
000006f0 : 4d4030ef;   % 516: 	jal Print %
000006f1 : 1700006f;   % 518: 	j EndPrintWhispy %
000006f2 : 0fc0e517;   % 521: 	la a0,eye0 %
000006f3 : 6d050513;   % 521:  %
000006f4 : 10900593;   % 522: 	li a1,265 %
000006f5 : 01059593;   % 523: 	slli a1,a1,16 %
000006f6 : 0ac58593;   % 524: 	addi a1,a1,172 %
000006f7 : 000006b3;   % 525: 	mv a3,zero %
000006f8 : 00000733;   % 526: 	mv a4,zero %
000006f9 : 4b0030ef;   % 527: 	jal Print %
000006fa : 0fc0e517;   % 529: 	la a0,eye1 %
000006fb : 73c50513;   % 529:  %
000006fc : 10c00593;   % 530: 	li a1,268 %
000006fd : 01059593;   % 531: 	slli a1,a1,16 %
000006fe : 0b958593;   % 532: 	addi a1,a1,185 %
000006ff : 000006b3;   % 533: 	mv a3,zero %
00000700 : 00000733;   % 534: 	mv a4,zero %
00000701 : 490030ef;   % 535: 	jal Print %
00000702 : 0fc0f517;   % 537: 	la a0,mouth1 %
00000703 : 8ec50513;   % 537:  %
00000704 : 13400593;   % 538: 	li a1,308 %
00000705 : 01059593;   % 539: 	slli a1,a1,16 %
00000706 : 0ae58593;   % 540: 	addi a1,a1,174 %
00000707 : 000006b3;   % 541: 	mv a3,zero %
00000708 : 00000733;   % 542: 	mv a4,zero %
00000709 : 470030ef;   % 543: 	jal Print %
0000070a : 10c0006f;   % 545: 	j EndPrintWhispy %
0000070b : 0fc0e517;   % 548: 	la a0,eye3 %
0000070c : 77850513;   % 548:  %
0000070d : 11000593;   % 549: 	li a1,272 %
0000070e : 01059593;   % 550: 	slli a1,a1,16 %
0000070f : 0a958593;   % 551: 	addi a1,a1,169 %
00000710 : 00100693;   % 552: 	li a3,1 %
00000711 : 00000733;   % 553: 	mv a4,zero %
00000712 : 44c030ef;   % 554: 	jal Print %
00000713 : 0fc0e517;   % 556: 	la a0,eye3 %
00000714 : 75850513;   % 556:  %
00000715 : 11000593;   % 557: 	li a1,272 %
00000716 : 01059593;   % 558: 	slli a1,a1,16 %
00000717 : 0b758593;   % 559: 	addi a1,a1,183 %
00000718 : 000006b3;   % 560: 	mv a3,zero %
00000719 : 00000733;   % 561: 	mv a4,zero %
0000071a : 42c030ef;   % 562: 	jal Print %
0000071b : 0fc0f517;   % 564: 	la a0,mouth1 %
0000071c : 88850513;   % 564:  %
0000071d : 13000593;   % 565: 	li a1,304 %
0000071e : 01059593;   % 566: 	slli a1,a1,16 %
0000071f : 0aa58593;   % 567: 	addi a1,a1,170 %
00000720 : 000006b3;   % 568: 	mv a3,zero %
00000721 : 00000733;   % 569: 	mv a4,zero %
00000722 : 40c030ef;   % 570: 	jal Print %
00000723 : 0fc0f517;   % 572: 	la a0,tear %
00000724 : 8e450513;   % 572:  %
00000725 : 11b00593;   % 573: 	li a1,283 %
00000726 : 01059593;   % 574: 	slli a1,a1,16 %
00000727 : 0b858593;   % 575: 	addi a1,a1,184 %
00000728 : 000006b3;   % 576: 	mv a3,zero %
00000729 : 00000733;   % 577: 	mv a4,zero %
0000072a : 3ec030ef;   % 578: 	jal Print %
0000072b : 0880006f;   % 580: 	j EndPrintWhispy %
0000072c : 0fc0e517;   % 583: 	la a0,eye0 %
0000072d : 5e850513;   % 583:  %
0000072e : 10700593;   % 584: 	li a1,263 %
0000072f : 01059593;   % 585: 	slli a1,a1,16 %
00000730 : 0aa58593;   % 586: 	addi a1,a1,170 %
00000731 : 000006b3;   % 587: 	mv a3,zero %
00000732 : 00000733;   % 588: 	mv a4,zero %
00000733 : 3c8030ef;   % 589: 	jal Print %
00000734 : 0fc0e517;   % 591: 	la a0,eye3 %
00000735 : 6d450513;   % 591:  %
00000736 : 10f00593;   % 592: 	li a1,271 %
00000737 : 01059593;   % 593: 	slli a1,a1,16 %
00000738 : 0b758593;   % 594: 	addi a1,a1,183 %
00000739 : 000006b3;   % 595: 	mv a3,zero %
0000073a : 00000733;   % 596: 	mv a4,zero %
0000073b : 3a8030ef;   % 597: 	jal Print %
0000073c : 0fc0f517;   % 599: 	la a0,mouth1 %
0000073d : 80450513;   % 599:  %
0000073e : 13200593;   % 600: 	li a1,306 %
0000073f : 01059593;   % 601: 	slli a1,a1,16 %
00000740 : 0ab58593;   % 602: 	addi a1,a1,171 %
00000741 : 000006b3;   % 603: 	mv a3,zero %
00000742 : 00000733;   % 604: 	mv a4,zero %
00000743 : 388030ef;   % 605: 	jal Print %
00000744 : 0fc0f517;   % 607: 	la a0,tear %
00000745 : 86050513;   % 607:  %
00000746 : 11a00593;   % 608: 	li a1,282 %
00000747 : 01059593;   % 609: 	slli a1,a1,16 %
00000748 : 0b858593;   % 610: 	addi a1,a1,184 %
00000749 : 000006b3;   % 611: 	mv a3,zero %
0000074a : 00000733;   % 612: 	mv a4,zero %
0000074b : 368030ef;   % 613: 	jal Print %
0000074c : 0040006f;   % 615: 	j EndPrintWhispy %
0000074d : 00012083;   % 618: 	lw ra,0(sp) %
0000074e : 00410113;   % 619: 	addi sp,sp,4 %
0000074f : 00008067;   % 621: 	ret %
00000750 : ff2002b7;   % 17: 	li t0,0xFF200000		# carrega o endereco de controle do KDMMIO %
00000751 : 00028293;   % 17:  %
00000752 : 0002a383;   % 18: 	lw t2,0(t0)			# Le bit de Controle Teclado %
00000753 : 0013f393;   % 19: 	andi t2,t2,0x0001		# mascara o bit menos significativo %
00000754 : 0042a303;   % 20: 	lw t1,4(t0)  			# le o valor da tecla %
00000755 : 04038c63;   % 22: 	beq t2,zero,FimTitleKP	 %
00000756 : 0fc0e397;   % 24: 	lw t2,TitleControls %
00000757 : 4483a383;   % 24:  %
00000758 : 06500293;   % 26: 	li t0,'e' %
00000759 : 04628063;   % 27: 	beq t0,t1,PressButton %
0000075a : 02000293;   % 28: 	li t0,' ' %
0000075b : 02628c63;   % 29: 	beq t0,t1,PressButton %
0000075c : 07700293;   % 31: 	li t0,'w' %
0000075d : 02628063;   % 32: 	beq t0,t1,FlipButton %
0000075e : 06100293;   % 33: 	li t0,'a' %
0000075f : 00628c63;   % 34: 	beq t0,t1,FlipButton %
00000760 : 07300293;   % 35: 	li t0,'s' %
00000761 : 00628863;   % 36: 	beq t0,t1,FlipButton %
00000762 : 06400293;   % 37: 	li t0,'d' %
00000763 : 00628463;   % 38: 	beq t0,t1,FlipButton %
00000764 : 01c0006f;   % 39: 	j FimTitleKP %
00000765 : 0013c393;   % 42: 	xori t2,t2,1 %
00000766 : 0fc0e297;   % 43: 	sw t2,TitleControls,t0 %
00000767 : 4072a423;   % 43:  %
00000768 : 00c0006f;   % 45: 	j FimTitleKP %
00000769 : 00039463;   % 48: 	bnez t2,FimTitleKP %
0000076a : 1940106f;   % 50: 	j LoadHub # # # # # # # # # # # # # %
0000076b : 00008067;   % 53: 	ret %
0000076c : fe410113;   % 56: 	addi sp,sp,-28 %
0000076d : 00112023;   % 57: 	sw ra,0(sp)			# pilha armazena apenas valor de retorno %
0000076e : 00812223;   % 58: 	sw s0,4(sp) %
0000076f : 00912423;   % 59: 	sw s1,8(sp) %
00000770 : 01212623;   % 60: 	sw s2,12(sp) %
00000771 : 01312823;   % 61: 	sw s3,16(sp) %
00000772 : 01412a23;   % 62: 	sw s4,20(sp) %
00000773 : 01512c23;   % 63: 	sw s5,24(sp) %
00000774 : ff2002b7;   % 67: 	li t0,0xFF200000		# carrega o endereco de controle do KDMMIO %
00000775 : 00028293;   % 67:  %
00000776 : 0002a383;   % 68: 	lw t2,0(t0)			# Le bit de Controle Teclado %
00000777 : 0013f393;   % 69: 	andi t2,t2,0x0001		# mascara o bit menos significativo %
00000778 : 0042a303;   % 70: 	lw t1,4(t0)  			# le o valor da tecla %
00000779 : 00039463;   % 72: 	bne t2,zero,ContinueKP	 %
0000077a : 00000333;   % 73: 	mv t1,zero			# se nenhuma tecla esta sendo apertada salva 0 como a tecla atual %
0000077b : 0fc0e297;   % 76: 	sw t1,LastKey,t0		# atualiza a ultima tecla pressionada %
0000077c : 4262ac23;   % 76:  %
0000077d : 100082b7;   % 78: <2> li t0, 0x10008000	# carrega tp %
0000077e : 00028293;   % 78:  %
0000077f : 0a519063;   % 78: <3> bne gp, t0, DE1KeyPress	# Na DE1 gp = 0 ! Nao tem segmento .extern %
00000780 : 0fc0e417;   % 82: 	lw s0,PlayerLock %
00000781 : 3ec42403;   % 82:  %
00000782 : 02041863;   % 83: 	bne s0,zero,LockedPlayer %
00000783 : 0fc0e317;   % 85: 	lw t1,LastKey %
00000784 : 41832303;   % 85:  %
00000785 : 06400293;   % 87: 	li t0,'d' %
00000786 : 00628863;   % 88: 	beq t0,t1,DirectionKey %
00000787 : 06100293;   % 89: 	li t0,'a' %
00000788 : 00628463;   % 90: 	beq t0,t1,DirectionKey %
00000789 : 0140006f;   % 91: 	j SpecialKeys %
0000078a : 06100293;   % 93: 	li t0,'a'	 %
0000078b : 0062a3b3;   % 94: 	slt t2,t0,t1			# se estiver virado para a esquerda s0 = 0, para a direita s0 = 1 %
0000078c : 0fc0e297;   % 95: 	sw t2,PlayerLastDir,t0		# serve para as animacoes %
0000078d : 3e72ac23;   % 95:  %
0000078e : 07000293;   % 100: 	li t0,'p' %
0000078f : 0e530863;   % 101:   	beq t1,t0,EndGame %
00000790 : 03100293;   % 103:   	li t0,'1' %
00000791 : 0e530663;   % 104:   	beq t1,t0,SetPower0 %
00000792 : 03200293;   % 106:   	li t0,'2' %
00000793 : 0e530863;   % 107:   	beq t1,t0,SetPower1 %
00000794 : 03300293;   % 109:   	li t0,'3' %
00000795 : 0e530c63;   % 110:   	beq t1,t0,SetPower2 %
00000796 : 03400293;   % 112:   	li t0,'4' %
00000797 : 10530063;   % 113:   	beq t1,t0,SetPower3 %
00000798 : 03500293;   % 115:   	li t0,'5' %
00000799 : 10530463;   % 116:   	beq t1,t0,SetPower4 %
0000079a : 03600293;   % 118:   	li t0,'6' %
0000079b : 10530863;   % 119:   	beq t1,t0,SetPower5 %
0000079c : 06300293;   % 121:   	li t0,'c' %
0000079d : 10530c63;   % 122:   	beq t1,t0,SetCompletion %
0000079e : 00012083;   % 125: 	lw ra,0(sp)			# pilha armazena apenas valor de retorno %
0000079f : 00412403;   % 126: 	lw s0,4(sp) %
000007a0 : 00812483;   % 127: 	lw s1,8(sp) %
000007a1 : 00c12903;   % 128: 	lw s2,12(sp) %
000007a2 : 01012983;   % 129: 	lw s3,16(sp) %
000007a3 : 01412a03;   % 130: 	lw s4,20(sp) %
000007a4 : 01812a83;   % 131: 	lw s5,24(sp) %
000007a5 : 01c10113;   % 132: 	addi sp,sp,28 %
000007a6 : 00008067;   % 134:   	ret %
000007a7 : 00100493;   % 138: 	li s1,1 %
000007a8 : 0fc0e917;   % 139: 	la s2,MoveKeys %
000007a9 : 38c90913;   % 139:  %
000007aa : 0fc0e997;   % 140: 	la s3,OtherKeys %
000007ab : 38898993;   % 140:  %
000007ac : ff2002b7;   % 142: 	li t0,0xFF200520 %
000007ad : 52028293;   % 142:  %
000007ae : 0002aa03;   % 143: 	lw s4,0(t0) %
000007af : 0042aa83;   % 144: 	lw s5,4(t0) %
000007b0 : 00092023;   % 146: 	sw zero,0(s2) %
000007b1 : 0009a003;   % 147: 	lw zero,0(s3) %
000007b2 : 01d49293;   % 149: 	slli t0,s1,29 %
000007b3 : 005a7333;   % 150: 	and t1,s4,t0 # KeyMap0 %
000007b4 : 006023b3;   % 151: 	slt t2,zero,t1 %
000007b5 : 00790023;   % 152: 	sb t2,0(s2) %
000007b6 : 01c49293;   % 154: 	slli t0,s1,28 %
000007b7 : 005a7333;   % 155: 	and t1,s4,t0 # KeyMap0 %
000007b8 : 006023b3;   % 156: 	slt t2,zero,t1 %
000007b9 : 007900a3;   % 157: 	sb t2,1(s2) %
000007ba : 01b49293;   % 159: 	slli t0,s1,27 %
000007bb : 005a7333;   % 160: 	and t1,s4,t0 # KeyMap0 %
000007bc : 006023b3;   % 161: 	slt t2,zero,t1 %
000007bd : 00790123;   % 162: 	sb t2,2(s2) %
000007be : 00349293;   % 164: 	slli t0,s1,3 %
000007bf : 005af333;   % 165: 	and t1,s5,t0 # KeyMap1 %
000007c0 : 006023b3;   % 166: 	slt t2,zero,t1 %
000007c1 : 007901a3;   % 167: 	sb t2,3(s2) %
000007c2 : 00449293;   % 169: 	slli t0,s1,4 %
000007c3 : 005af333;   % 170: 	and t1,s5,t0 # KeyMap1 %
000007c4 : 006023b3;   % 171: 	slt t2,zero,t1 %
000007c5 : 00798023;   % 172: 	sb t2,0(s3) %
000007c6 : 00949293;   % 174: 	slli t0,s1,9 %
000007c7 : 005af333;   % 175: 	and t1,s5,t0 # KeyMap1 %
000007c8 : 006023b3;   % 176: 	slt t2,zero,t1 %
000007c9 : 007980a3;   % 177: 	sb t2,1(s3) %
000007ca : ed9ff06f;   % 179: 	j ReturnDE1KP %
000007cb : 00a00893;   % 183: 	li a7,10 %
000007cc : 0fc0e317;   % 188: 	sw zero,PlayerPowState,t1 %
000007cd : 2a032823;   % 188:  %
000007ce : f41ff06f;   % 189: 	j FimKeyPress %
000007cf : 00100293;   % 192: 	li t0,1 %
000007d0 : 0fc0e317;   % 193: 	sw t0,PlayerPowState,t1 %
000007d1 : 2a532023;   % 193:  %
000007d2 : f31ff06f;   % 194: 	j FimKeyPress %
000007d3 : 00200293;   % 197: 	li t0,2 %
000007d4 : 0fc0e317;   % 198: 	sw t0,PlayerPowState,t1 %
000007d5 : 28532823;   % 198:  %
000007d6 : f21ff06f;   % 199: 	j FimKeyPress %
000007d7 : 00300293;   % 202: 	li t0,3 %
000007d8 : 0fc0e317;   % 203: 	sw t0,PlayerPowState,t1 %
000007d9 : 28532023;   % 203:  %
000007da : f11ff06f;   % 204: 	j FimKeyPress %
000007db : 00400293;   % 207: 	li t0,4 %
000007dc : 0fc0e317;   % 208: 	sw t0,PlayerPowState,t1 %
000007dd : 26532823;   % 208:  %
000007de : f01ff06f;   % 209: 	j FimKeyPress %
000007df : 00500293;   % 212: 	li t0,5 %
000007e0 : 0fc0e317;   % 213: 	sw t0,PlayerPowState,t1 %
000007e1 : 26532023;   % 213:  %
000007e2 : ef1ff06f;   % 214: 	j FimKeyPress %
000007e3 : 06400513;   % 218: 	li a0,100 # duracao em ms %
000007e4 : 05000593;   % 219: 	li a1,80 # nota %
000007e5 : 00000633;   % 220: 	mv a2,zero # instrumento %
000007e6 : 014000ef;   % 221: 	jal SetSound %
000007e7 : 00100293;   % 223: 	li t0,1 %
000007e8 : 0fc0e317;   % 224: 	sh t0,Completion,t1 %
000007e9 : 1e531b23;   % 224:  %
000007ea : ed1ff06f;   % 225: 	j FimKeyPress %
000007eb : ffc10113;   % 229: 	addi sp,sp,-4 %
000007ec : 00112023;   % 230: 	sw ra,0(sp)			# pilha armazena apenas valor de retorno %
000007ed : 0fc0e297;   % 233: 	lw t0,SoundDuration	 %
000007ee : 29c2a283;   % 233:  %
000007ef : 00029e63;   % 234: 	bne t0,zero,SkipSetSound # para iniciar um som verifica se a duracao dele ja passou (a todo ms o valor de duracao e subtraido por 1) %
000007f0 : 0fc0e317;   % 236: 	sw a0,SoundDuration,t1 %
000007f1 : 28a32823;   % 236:  %
000007f2 : 0fc0e317;   % 237: 	sw a1,SoundEffectAtual,t1 %
000007f3 : 28b32623;   % 237:  %
000007f4 : 0fc0e317;   % 238: 	sw a2,SoundInstrument,t1 %
000007f5 : 28c32423;   % 238:  %
000007f6 : 00012083;   % 241: 	lw ra,0(sp)			# pilha armazena apenas valor de retorno %
000007f7 : 00410113;   % 242: 	addi sp,sp,4 %
000007f8 : 00008067;   % 244: 	ret %
000007f9 : fec10113;   % 23: 	addi sp,sp,-20 %
000007fa : 00112023;   % 24: 	sw ra,0(sp) %
000007fb : 00812223;   % 25: 	sw s0,4(sp) %
000007fc : 00912423;   % 26: 	sw s1,8(sp) %
000007fd : 01212623;   % 27: 	sw s2,12(sp) %
000007fe : 01312823;   % 28: 	sw s3,16(sp) %
000007ff : 00a00433;   % 30: 	mv s0,a0 %
00000800 : 0fc0e497;   % 31: 	lw s1,MusicAtual %
00000801 : 2404a483;   % 31:  %
00000802 : 0fc0e917;   % 34: 		lw s2,NoteEndTime	# salva o tempo do fim da nota em s2 %
00000803 : 24092903;   % 34:  %
00000804 : 00090663;   % 35: 		beqz s2,PlayNote	# vai pro musicloop se s2 valer 0 (primeira nota da musica) %
00000805 : 01245463;   % 38: 		bge s0,s2,PlayNote	# se o tempo atual for maior que o fim da nota, vai pro PlayNote %
00000806 : 0c40006f;   % 39:         	j EndMusicLoop		# vai pro resto do game loop / repete a comparacao do fim da nota %
00000807 : 00000613;   % 42: 		li a2,0			# define o instrumento	- PIANO %
00000808 : 04000693;   % 43: 		li a3,64		# define o volume		- 64 %
00000809 : 0004d503;   % 44: 		lhu a0,0(s1)		# le o valor da nota %
0000080a : 0024d583;   % 45: 		lhu a1,2(s1)		# le a duracao da nota %
0000080b : 0d4000ef;   % 49: 		jal midiOut %
0000080c : 0fc0e297;   % 53: 		lw t0,LastGlblTime %
0000080d : 2042a283;   % 53:  %
0000080e : 0024d303;   % 55: 		lhu t1,2(s1)		# carrega a duracao em milissegundos da nota %
0000080f : 00530333;   % 56: 		add t1,t1,t0		# soma o tempo atual com a duracao da nota  %
00000810 : 0fc0ef97;   % 57: 		sw t1,NoteEndTime,t6	# salva o valor do fim da nota (valor de s2) em NoteEndTime %
00000811 : 206fa423;   % 57:  %
00000812 : 0fc0e997;   % 60: 		lw s3,NoteCounter	# carregando o numero da nota atual (valor de NoteCounter) em s3 %
00000813 : 2049a983;   % 60:  %
00000814 : 0fc0e297;   % 61: 		lw t0,LenMusAtual	# carregando o numero total de notas %
00000815 : 1f42a283;   % 61:  %
00000816 : 00598c63;   % 62: 		beq s3,t0,RestartMusic	# comparar se foi a ultima nota (pra loopar a musica) %
00000817 : 00198993;   % 64: 		addi s3,s3,1		# incrementa o contador de notas %
00000818 : 00448493;   % 65: 		addi s1,s1,4		# incrementa para o endereco da proxima nota %
00000819 : 0fc0ef97;   % 66: 		sw s3,NoteCounter,t6	# salva o valor de t4 no contador de notas (nessa parte do programa, estamos carregando NoteCounter em t0, fazemos t0++, e carregamos de volta o valor) %
0000081a : 1f3fa423;   % 66:  %
0000081b : 0700006f;   % 67: 		j EndMusicLoop		# volta pro teste se a nota acabou %
0000081c : 00000993;   % 70: 		li s3,0 %
0000081d : 0fc0ef97;   % 71: 		sw s3,NoteCounter,t6	# zera o NoteCounter %
0000081e : 1d3fac23;   % 71:  %
0000081f : 0fc0e497;   % 72: 		lw s1,MusicStartAdd	# define o endereco das notas / zera o ponteiro %
00000820 : 1c04a483;   % 72:  %
00000821 : ffc10113;   % 75: 	addi sp,sp,-4	 %
00000822 : 00112023;   % 76: 	sw ra,0(sp) %
00000823 : 0fc0e297;   % 78: 	lw t0,LastGlblTime %
00000824 : 1a82a283;   % 78:  %
00000825 : 0fc0e317;   % 79: 	lw t1,SoundEndTime	# salva o tempo do fim da nota em s2 %
00000826 : 1c832303;   % 79:  %
00000827 : 0062d463;   % 80: 	bge t0,t1,PlaySound	# se o tempo atual for maior que o fim da nota, vai pro PlayNote %
00000828 : 0300006f;   % 81:         j EndSound		# vai pro resto do game loop / repete a comparacao do fim da nota %
00000829 : 0fc0e297;   % 84: 	lw t0,LastGlblTime %
0000082a : 1902a283;   % 84:  %
0000082b : 00b282b3;   % 85: 	add t0,t0,a1		# soma o tempo atual com a duracao do som %
0000082c : 0fc0e317;   % 86: 	sw t0,SoundEndTime,t1	# salva o valor do fim da nota (valor de s2) em NoteEndTime %
0000082d : 1a532623;   % 86:  %
0000082e : 0fc0e297;   % 87: 	sw zero,SoundEffectAtual,t0 %
0000082f : 1802ae23;   % 87:  %
00000830 : 0fc0e297;   % 88: 	sw zero,SoundDuration,t0 %
00000831 : 1802a823;   % 88:  %
00000832 : 04000693;   % 93: 	li a3,64		# define o volume - 64 %
00000833 : 034000ef;   % 95: 	jal midiOut %
00000834 : 00012083;   % 98: 	lw ra,0(sp) %
00000835 : 00410113;   % 99: 	addi sp,sp,4 %
00000836 : 00008067;   % 101: 	ret %
00000837 : 0fc0e297;   % 104: 	sw s1,MusicAtual,t0 %
00000838 : 1692a223;   % 104:  %
00000839 : 00012083;   % 106: 	lw ra,0(sp) %
0000083a : 00412403;   % 107: 	lw s0,4(sp) %
0000083b : 00812483;   % 108: 	lw s1,8(sp) %
0000083c : 00c12903;   % 109: 	lw s2,12(sp) %
0000083d : 01012983;   % 110: 	lw s3,16(sp) %
0000083e : 01410113;   % 111: 	addi sp,sp,20 %
0000083f : 00008067;   % 113: 	ret %
00000840 : 100082b7;   % 124: <2> li t0, 0x10008000	# carrega tp %
00000841 : 00028293;   % 124:  %
00000842 : 00519863;   % 124: <3> bne gp, t0, midiOutDE2	# Na DE1 gp = 0 ! Nao tem segmento .extern %
00000843 : 01f00893;   % 126: 	li a7,31		# Chama o ecall normal %
00000844 : 00000073;   % 127: 	ecall %
00000845 : 0600006f;   % 128: 	j fimmidiOut %
00000846 : ff2002b7;   % 130: midiOutDE2:	li      t0, 0xFF200178 %
00000847 : 17828293;   % 130:  %
00000848 : 00000333;   % 131:     		add     t1, zero, zero %
00000849 : 00f67393;   % 136:    	 	andi    t2, a2, 0x0000000F %
0000084a : 01b39393;   % 137:     		slli    t2, t2, 27 %
0000084b : 00736333;   % 138:     		or      t1, t1, t2 %
0000084c : 07f6f393;   % 141:     		andi    t2, a3, 0x0000007F %
0000084d : 01439393;   % 142:     		slli    t2, t2, 20 %
0000084e : 00736333;   % 143:     		or      t1, t1, t2 %
0000084f : 07f57393;   % 146:     		andi    t2, a0, 0x0000007F %
00000850 : 00d39393;   % 147:     		slli    t2, t2, 13 %
00000851 : 00736333;   % 148:     		or      t1, t1, t2 %
00000852 : 1ff00e93;   % 151: 		li 	t4, 0x1FF %
00000853 : 004e9e93;   % 152: 		slli 	t4, t4, 4 %
00000854 : 00fe8e93;   % 153: 		addi 	t4, t4, 0x00F			# t4 = 0x00001FFF %
00000855 : 01d5f3b3;   % 154:     		and    	t2, a1, t4 %
00000856 : 00736333;   % 155:     		or      t1, t1, t2 %
00000857 : 0040006f;   % 158:     		j       SintMidOut %
00000858 : 0062a023;   % 160: SintMidOut:	sw	t1, 0(t0) %
00000859 : ff2003b7;   % 163: 	    		li      t2, 0xFF20017C %
0000085a : 17c38393;   % 163:  %
0000085b : 0003ae03;   % 164: Check_AUD_DACLRCK:     	lw      t3, 0(t2) %
0000085c : fe0e0ee3;   % 165:     			beq     t3, zero, Check_AUD_DACLRCK %
0000085d : 00008067;   % 167: fimmidiOut:    		ret %
0000085e : ffc10113;   % 4: 	addi sp,sp,-4 %
0000085f : 00112023;   % 5: 	sw ra,0(sp) %
00000860 : 0ff00513;   % 7: 	li a0,0xff %
00000861 : 00000593;   % 8: 	li a1,0 %
00000862 : 00000613;   % 9: 	li a2,0 %
00000863 : 14000693;   % 10: 	li a3,320 %
00000864 : 0f000713;   % 11: 	li a4,240 %
00000865 : 00100793;   % 12: 	li a5,1 %
00000866 : 740030ef;   % 13: 	jal FillPrint %
00000867 : 0fc15517;   % 15: 	la a0,smallStarTitle %
00000868 : 75450513;   % 15:  %
00000869 : 00000593;   % 17: 	li a1,0 %
0000086a : 01059593;   % 18: 	slli a1,a1,16 %
0000086b : 02158593;   % 19: 	addi a1,a1,33 %
0000086c : 6bc030ef;   % 20: 	jal SimplePrint %
0000086d : 00000593;   % 22: 	li a1,0 %
0000086e : 01059593;   % 23: 	slli a1,a1,16 %
0000086f : 09158593;   % 24: 	addi a1,a1,145 %
00000870 : 6ac030ef;   % 25: 	jal SimplePrint %
00000871 : 00000593;   % 27: 	li a1,0 %
00000872 : 01059593;   % 28: 	slli a1,a1,16 %
00000873 : 0e158593;   % 29: 	addi a1,a1,225 %
00000874 : 69c030ef;   % 30: 	jal SimplePrint %
00000875 : 01000593;   % 32: 	li a1,16 %
00000876 : 01059593;   % 33: 	slli a1,a1,16 %
00000877 : 04158593;   % 34: 	addi a1,a1,65 %
00000878 : 68c030ef;   % 35: 	jal SimplePrint %
00000879 : 01000593;   % 37: 	li a1,16 %
0000087a : 01059593;   % 38: 	slli a1,a1,16 %
0000087b : 10158593;   % 39: 	addi a1,a1,257 %
0000087c : 67c030ef;   % 40: 	jal SimplePrint %
0000087d : 02000593;   % 42: 	li a1,32 %
0000087e : 01059593;   % 43: 	slli a1,a1,16 %
0000087f : 08158593;   % 44: 	addi a1,a1,129 %
00000880 : 66c030ef;   % 45: 	jal SimplePrint %
00000881 : 02000593;   % 47: 	li a1,32 %
00000882 : 01059593;   % 48: 	slli a1,a1,16 %
00000883 : 0d158593;   % 49: 	addi a1,a1,209 %
00000884 : 65c030ef;   % 50: 	jal SimplePrint %
00000885 : 02000593;   % 52: 	li a1,32 %
00000886 : 01059593;   % 53: 	slli a1,a1,16 %
00000887 : 13158593;   % 54: 	addi a1,a1,305 %
00000888 : 64c030ef;   % 55: 	jal SimplePrint %
00000889 : 03000593;   % 57: 	li a1,48 %
0000088a : 01059593;   % 58: 	slli a1,a1,16 %
0000088b : 01158593;   % 59: 	addi a1,a1,17 %
0000088c : 63c030ef;   % 60: 	jal SimplePrint %
0000088d : 04000593;   % 62: 	li a1,64 %
0000088e : 01059593;   % 63: 	slli a1,a1,16 %
0000088f : 11158593;   % 64: 	addi a1,a1,273 %
00000890 : 62c030ef;   % 65: 	jal SimplePrint %
00000891 : 05000593;   % 67: 	li a1,80 %
00000892 : 01059593;   % 68: 	slli a1,a1,16 %
00000893 : 02158593;   % 69: 	addi a1,a1,33 %
00000894 : 61c030ef;   % 70: 	jal SimplePrint %
00000895 : 06000593;   % 72: 	li a1,96 %
00000896 : 01059593;   % 73: 	slli a1,a1,16 %
00000897 : 04158593;   % 74: 	addi a1,a1,65 %
00000898 : 60c030ef;   % 75: 	jal SimplePrint %
00000899 : 06000593;   % 77: 	li a1,96 %
0000089a : 01059593;   % 78: 	slli a1,a1,16 %
0000089b : 12158593;   % 79: 	addi a1,a1,289 %
0000089c : 5fc030ef;   % 80: 	jal SimplePrint %
0000089d : 08000593;   % 82: 	li a1,128 %
0000089e : 01059593;   % 83: 	slli a1,a1,16 %
0000089f : 00158593;   % 84: 	addi a1,a1,1 %
000008a0 : 5ec030ef;   % 85: 	jal SimplePrint %
000008a1 : 08000593;   % 87: 	li a1,128 %
000008a2 : 01059593;   % 88: 	slli a1,a1,16 %
000008a3 : 13158593;   % 89: 	addi a1,a1,305 %
000008a4 : 5dc030ef;   % 90: 	jal SimplePrint %
000008a5 : 09000593;   % 92: 	li a1,144 %
000008a6 : 01059593;   % 93: 	slli a1,a1,16 %
000008a7 : 0f158593;   % 94: 	addi a1,a1,241 %
000008a8 : 5cc030ef;   % 95: 	jal SimplePrint %
000008a9 : 0a000593;   % 97: 	li a1,160 %
000008aa : 01059593;   % 98: 	slli a1,a1,16 %
000008ab : 04158593;   % 99: 	addi a1,a1,65 %
000008ac : 5bc030ef;   % 100: 	jal SimplePrint %
000008ad : 0a000593;   % 102: 	li a1,160 %
000008ae : 01059593;   % 103: 	slli a1,a1,16 %
000008af : 11158593;   % 104: 	addi a1,a1,273 %
000008b0 : 5ac030ef;   % 105: 	jal SimplePrint %
000008b1 : 0b000593;   % 107: 	li a1,176 %
000008b2 : 01059593;   % 108: 	slli a1,a1,16 %
000008b3 : 02158593;   % 109: 	addi a1,a1,33 %
000008b4 : 59c030ef;   % 110: 	jal SimplePrint %
000008b5 : 0c000593;   % 112: 	li a1,192 %
000008b6 : 01059593;   % 113: 	slli a1,a1,16 %
000008b7 : 0e158593;   % 114: 	addi a1,a1,225 %
000008b8 : 58c030ef;   % 115: 	jal SimplePrint %
000008b9 : 0c000593;   % 117: 	li a1,192 %
000008ba : 01059593;   % 118: 	slli a1,a1,16 %
000008bb : 13158593;   % 119: 	addi a1,a1,305 %
000008bc : 57c030ef;   % 120: 	jal SimplePrint %
000008bd : 0d000593;   % 122: 	li a1,208 %
000008be : 01059593;   % 123: 	slli a1,a1,16 %
000008bf : 01158593;   % 124: 	addi a1,a1,17 %
000008c0 : 56c030ef;   % 125: 	jal SimplePrint %
000008c1 : 0e000593;   % 127: 	li a1,224 %
000008c2 : 01059593;   % 128: 	slli a1,a1,16 %
000008c3 : 05158593;   % 129: 	addi a1,a1,81 %
000008c4 : 55c030ef;   % 130: 	jal SimplePrint %
000008c5 : 0e000593;   % 132: 	li a1,224 %
000008c6 : 01059593;   % 133: 	slli a1,a1,16 %
000008c7 : 0b158593;   % 134: 	addi a1,a1,177 %
000008c8 : 54c030ef;   % 135: 	jal SimplePrint %
000008c9 : 0e000593;   % 137: 	li a1,224 %
000008ca : 01059593;   % 138: 	slli a1,a1,16 %
000008cb : 10158593;   % 139: 	addi a1,a1,257 %
000008cc : 53c030ef;   % 140: 	jal SimplePrint %
000008cd : 0fc11517;   % 142: 	la a0,bigStarTitle %
000008ce : 17450513;   % 142:  %
000008cf : 00400593;   % 144: 	li a1,4 %
000008d0 : 01059593;   % 145: 	slli a1,a1,16 %
000008d1 : 05c58593;   % 146: 	addi a1,a1,92 %
000008d2 : 524030ef;   % 147: 	jal SimplePrint %
000008d3 : 00300593;   % 149: 	li a1,3 %
000008d4 : 01059593;   % 150: 	slli a1,a1,16 %
000008d5 : 0ab58593;   % 151: 	addi a1,a1,171 %
000008d6 : 514030ef;   % 152: 	jal SimplePrint %
000008d7 : 02300593;   % 154: 	li a1,35 %
000008d8 : 01059593;   % 155: 	slli a1,a1,16 %
000008d9 : 02b58593;   % 156: 	addi a1,a1,43 %
000008da : 504030ef;   % 157: 	jal SimplePrint %
000008db : 02300593;   % 159: 	li a1,35 %
000008dc : 01059593;   % 160: 	slli a1,a1,16 %
000008dd : 0eb58593;   % 161: 	addi a1,a1,235 %
000008de : 4f4030ef;   % 162: 	jal SimplePrint %
000008df : 07300593;   % 164: 	li a1,115 %
000008e0 : 01059593;   % 165: 	slli a1,a1,16 %
000008e1 : 01b58593;   % 166: 	addi a1,a1,27 %
000008e2 : 4e4030ef;   % 167: 	jal SimplePrint %
000008e3 : 06300593;   % 169: 	li a1,99 %
000008e4 : 01059593;   % 170: 	slli a1,a1,16 %
000008e5 : 0fb58593;   % 171: 	addi a1,a1,251 %
000008e6 : 4d4030ef;   % 172: 	jal SimplePrint %
000008e7 : 0c300593;   % 174: 	li a1,195 %
000008e8 : 01059593;   % 175: 	slli a1,a1,16 %
000008e9 : 02b58593;   % 176: 	addi a1,a1,43 %
000008ea : 4c4030ef;   % 177: 	jal SimplePrint %
000008eb : 0b300593;   % 179: 	li a1,179 %
000008ec : 01059593;   % 180: 	slli a1,a1,16 %
000008ed : 0fb58593;   % 181: 	addi a1,a1,251 %
000008ee : 4b4030ef;   % 182: 	jal SimplePrint %
000008ef : 0d300593;   % 184: 	li a1,211 %
000008f0 : 01059593;   % 185: 	slli a1,a1,16 %
000008f1 : 07b58593;   % 186: 	addi a1,a1,123 %
000008f2 : 4a4030ef;   % 187: 	jal SimplePrint %
000008f3 : 0d300593;   % 189: 	li a1,211 %
000008f4 : 01059593;   % 190: 	slli a1,a1,16 %
000008f5 : 0cb58593;   % 191: 	addi a1,a1,203 %
000008f6 : 494030ef;   % 192: 	jal SimplePrint %
000008f7 : 0fc15517;   % 194: 	la a0,mediumStarTitle %
000008f8 : 30c50513;   % 194:  %
000008f9 : 06200593;   % 196: 	li a1,98 %
000008fa : 01059593;   % 197: 	slli a1,a1,16 %
000008fb : 05958593;   % 198: 	addi a1,a1,89 %
000008fc : 47c030ef;   % 199: 	jal SimplePrint %
000008fd : 06200593;   % 201: 	li a1,98 %
000008fe : 01059593;   % 202: 	slli a1,a1,16 %
000008ff : 0d058593;   % 203: 	addi a1,a1,208 %
00000900 : 46c030ef;   % 204: 	jal SimplePrint %
00000901 : 0fc11517;   % 206: 	la a0,kirbysTitle %
00000902 : 5e450513;   % 206:  %
00000903 : 03400593;   % 208: 	li a1,52 %
00000904 : 01059593;   % 209: 	slli a1,a1,16 %
00000905 : 06858593;   % 210: 	addi a1,a1,104 %
00000906 : 454030ef;   % 211: 	jal SimplePrint %
00000907 : 0fc10517;   % 213: 	la a0,adventureTitle %
00000908 : 8c450513;   % 213:  %
00000909 : 07f00593;   % 215: 	li a1,127 %
0000090a : 01059593;   % 216: 	slli a1,a1,16 %
0000090b : 06358593;   % 217: 	addi a1,a1,99 %
0000090c : 43c030ef;   % 218: 	jal SimplePrint %
0000090d : 0fc13517;   % 220: 	la a0,kirbyTitle0 %
0000090e : b7050513;   % 220:  %
0000090f : 05c00593;   % 222: 	li a1,92 %
00000910 : 01059593;   % 223: 	slli a1,a1,16 %
00000911 : 08058593;   % 224: 	addi a1,a1,128 %
00000912 : 424030ef;   % 225: 	jal SimplePrint %
00000913 : 00012083;   % 227: 	lw ra,0(sp) %
00000914 : 00410113;   % 228: 	addi sp,sp,4 %
00000915 : 00008067;   % 230: 	ret %
00000916 : ffc10113;   % 4: 	addi sp,sp,-4 %
00000917 : 00112023;   % 5: 	sw ra,0(sp) %
00000918 : 02600513;   % 7: 	li a0,38 # cor %
00000919 : 000007b3;   % 8: 	mv a5,zero # quick print desativado %
0000091a : 10a00593;   % 10: 	li a1,266 # PosX %
0000091b : 00000613;   % 11: 	li a2,0 # PosY %
0000091c : 03400693;   % 12: 	li a3,52 # tamanho X %
0000091d : 0f000713;   % 13: 	li a4,240 # tamanho Y %
0000091e : 460030ef;   % 14: 	jal FillPrint %
0000091f : 0b700513;   % 18: 	li a0,183 %
00000920 : 10b00593;   % 20: 	li a1,267 %
00000921 : 00000613;   % 21: 	li a2,0 %
00000922 : 00100693;   % 22: 	li a3,1 %
00000923 : 0f000713;   % 23: 	li a4,240 %
00000924 : 448030ef;   % 24: 	jal FillPrint %
00000925 : 13c00593;   % 26: 	li a1,316 %
00000926 : 00000613;   % 27: 	li a2,0 %
00000927 : 00100693;   % 28: 	li a3,1 %
00000928 : 0f000713;   % 29: 	li a4,240 %
00000929 : 434030ef;   % 30: 	jal FillPrint %
0000092a : 13f00593;   % 32: 	li a1,319 %
0000092b : 00000613;   % 33: 	li a2,0 %
0000092c : 00100693;   % 34: 	li a3,1 %
0000092d : 0f000713;   % 35: 	li a4,240 %
0000092e : 420030ef;   % 36: 	jal FillPrint %
0000092f : 12000593;   % 38: 	li a1,288 %
00000930 : 00200613;   % 39: 	li a2,2 %
00000931 : 00800693;   % 40: 	li a3,8 %
00000932 : 00100713;   % 41: 	li a4,1 %
00000933 : 40c030ef;   % 42: 	jal FillPrint %
00000934 : 11b00593;   % 44: 	li a1,283 %
00000935 : 00300613;   % 45: 	li a2,3 %
00000936 : 01200693;   % 46: 	li a3,18 %
00000937 : 00100713;   % 47: 	li a4,1 %
00000938 : 3f8030ef;   % 48: 	jal FillPrint %
00000939 : 11700593;   % 50: 	li a1,279 %
0000093a : 00400613;   % 51: 	li a2,4 %
0000093b : 01a00693;   % 52: 	li a3,26 %
0000093c : 00100713;   % 53: 	li a4,1 %
0000093d : 3e4030ef;   % 54: 	jal FillPrint %
0000093e : 11400593;   % 56: 	li a1,276 %
0000093f : 00500613;   % 57: 	li a2,5 %
00000940 : 02000693;   % 58: 	li a3,32 %
00000941 : 00100713;   % 59: 	li a4,1 %
00000942 : 3d0030ef;   % 60: 	jal FillPrint %
00000943 : 11100593;   % 62: 	li a1,273 %
00000944 : 00600613;   % 63: 	li a2,6 %
00000945 : 02600693;   % 64: 	li a3,38 %
00000946 : 00100713;   % 65: 	li a4,1 %
00000947 : 3bc030ef;   % 66: 	jal FillPrint %
00000948 : 10f00593;   % 68: 	li a1,271 %
00000949 : 00700613;   % 69: 	li a2,7 %
0000094a : 02a00693;   % 70: 	li a3,42 %
0000094b : 00100713;   % 71: 	li a4,1 %
0000094c : 3a8030ef;   % 72: 	jal FillPrint %
0000094d : 10e00593;   % 74: 	li a1,270 %
0000094e : 00800613;   % 75: 	li a2,8 %
0000094f : 02c00693;   % 76: 	li a3,44 %
00000950 : 07300713;   % 77: 	li a4,115 %
00000951 : 394030ef;   % 78: 	jal FillPrint %
00000952 : 10f00593;   % 80: 	li a1,271 %
00000953 : 07b00613;   % 81: 	li a2,123 %
00000954 : 02a00693;   % 82: 	li a3,42 %
00000955 : 00200713;   % 83: 	li a4,2 %
00000956 : 380030ef;   % 84: 	jal FillPrint %
00000957 : 11000593;   % 86: 	li a1,272 %
00000958 : 07d00613;   % 87: 	li a2,125 %
00000959 : 02600693;   % 88: 	li a3,38 %
0000095a : 00100713;   % 89: 	li a4,1 %
0000095b : 36c030ef;   % 90: 	jal FillPrint %
0000095c : 11100593;   % 92: 	li a1,273 %
0000095d : 07e00613;   % 93: 	li a2,126 %
0000095e : 02400693;   % 94: 	li a3,36 %
0000095f : 00100713;   % 95: 	li a4,1 %
00000960 : 358030ef;   % 96: 	jal FillPrint %
00000961 : 11200593;   % 98: 	li a1,274 %
00000962 : 07f00613;   % 99: 	li a2,127 %
00000963 : 02200693;   % 100: 	li a3,34 %
00000964 : 00100713;   % 101: 	li a4,1 %
00000965 : 344030ef;   % 102: 	jal FillPrint %
00000966 : 11400593;   % 104: 	li a1,276 %
00000967 : 08000613;   % 105: 	li a2,128 %
00000968 : 01e00693;   % 106: 	li a3,30 %
00000969 : 00100713;   % 107: 	li a4,1 %
0000096a : 330030ef;   % 108: 	jal FillPrint %
0000096b : 10c00593;   % 110: 	li a1,268 %
0000096c : 08200613;   % 111: 	li a2,130 %
0000096d : 00100693;   % 112: 	li a3,1 %
0000096e : 00300713;   % 113: 	li a4,3 %
0000096f : 31c030ef;   % 114: 	jal FillPrint %
00000970 : 13b00593;   % 116: 	li a1,315 %
00000971 : 08200613;   % 117: 	li a2,130 %
00000972 : 00100693;   % 118: 	li a3,1 %
00000973 : 00300713;   % 119: 	li a4,3 %
00000974 : 308030ef;   % 120: 	jal FillPrint %
00000975 : 10d00593;   % 122: 	li a1,269 %
00000976 : 08300613;   % 123: 	li a2,131 %
00000977 : 02e00693;   % 124: 	li a3,46 %
00000978 : 00100713;   % 125: 	li a4,1 %
00000979 : 2f4030ef;   % 126: 	jal FillPrint %
0000097a : 11200593;   % 128: 	li a1,274 %
0000097b : 08600613;   % 129: 	li a2,134 %
0000097c : 02400693;   % 130: 	li a3,36 %
0000097d : 02c00713;   % 131: 	li a4,44 %
0000097e : 2e0030ef;   % 132: 	jal FillPrint %
0000097f : 10c00593;   % 134: 	li a1,268 %
00000980 : 0b300613;   % 135: 	li a2,179 %
00000981 : 00100693;   % 136: 	li a3,1 %
00000982 : 00300713;   % 137: 	li a4,3 %
00000983 : 2cc030ef;   % 138: 	jal FillPrint %
00000984 : 13b00593;   % 140: 	li a1,315 %
00000985 : 0b300613;   % 141: 	li a2,179 %
00000986 : 00100693;   % 142: 	li a3,1 %
00000987 : 00300713;   % 143: 	li a4,3 %
00000988 : 2b8030ef;   % 144: 	jal FillPrint %
00000989 : 10d00593;   % 146: 	li a1,269 %
0000098a : 0b400613;   % 147: 	li a2,180 %
0000098b : 02e00693;   % 148: 	li a3,46 %
0000098c : 00100713;   % 149: 	li a4,1 %
0000098d : 2a4030ef;   % 150: 	jal FillPrint %
0000098e : 10e00593;   % 152: 	li a1,270 %
0000098f : 0b900613;   % 153: 	li a2,185 %
00000990 : 00100693;   % 154: 	li a3,1 %
00000991 : 02d00713;   % 155: 	li a4,45 %
00000992 : 290030ef;   % 156: 	jal FillPrint %
00000993 : 10f00593;   % 158: 	li a1,271 %
00000994 : 0b900613;   % 159: 	li a2,185 %
00000995 : 00300693;   % 160: 	li a3,3 %
00000996 : 00100713;   % 161: 	li a4,1 %
00000997 : 27c030ef;   % 162: 	jal FillPrint %
00000998 : 11200593;   % 164: 	li a1,274 %
00000999 : 0b900613;   % 165: 	li a2,185 %
0000099a : 00100693;   % 166: 	li a3,1 %
0000099b : 03000713;   % 167: 	li a4,48 %
0000099c : 268030ef;   % 168: 	jal FillPrint %
0000099d : 13500593;   % 170: 	li a1,309 %
0000099e : 0b900613;   % 171: 	li a2,185 %
0000099f : 00100693;   % 172: 	li a3,1 %
000009a0 : 03000713;   % 173: 	li a4,48 %
000009a1 : 254030ef;   % 174: 	jal FillPrint %
000009a2 : 13600593;   % 176: 	li a1,310 %
000009a3 : 0b900613;   % 177: 	li a2,185 %
000009a4 : 00300693;   % 178: 	li a3,3 %
000009a5 : 00100713;   % 179: 	li a4,1 %
000009a6 : 240030ef;   % 180: 	jal FillPrint %
000009a7 : 13900593;   % 182: 	li a1,313 %
000009a8 : 0b900613;   % 183: 	li a2,185 %
000009a9 : 00100693;   % 184: 	li a3,1 %
000009aa : 02d00713;   % 185: 	li a4,45 %
000009ab : 22c030ef;   % 186: 	jal FillPrint %
000009ac : 11a00593;   % 188: 	li a1,282 %
000009ad : 0b700613;   % 189: 	li a2,183 %
000009ae : 01400693;   % 190: 	li a3,20 %
000009af : 00100713;   % 191: 	li a4,1 %
000009b0 : 218030ef;   % 192: 	jal FillPrint %
000009b1 : 11800593;   % 194: 	li a1,280 %
000009b2 : 0b800613;   % 195: 	li a2,184 %
000009b3 : 01800693;   % 196: 	li a3,24 %
000009b4 : 00100713;   % 197: 	li a4,1 %
000009b5 : 204030ef;   % 198: 	jal FillPrint %
000009b6 : 11700593;   % 200: 	li a1,279 %
000009b7 : 0b900613;   % 201: 	li a2,185 %
000009b8 : 01a00693;   % 202: 	li a3,26 %
000009b9 : 00200713;   % 203: 	li a4,2 %
000009ba : 1f0030ef;   % 204: 	jal FillPrint %
000009bb : 11600593;   % 206: 	li a1,278 %
000009bc : 0bb00613;   % 207: 	li a2,187 %
000009bd : 01c00693;   % 208: 	li a3,28 %
000009be : 03000713;   % 209: 	li a4,48 %
000009bf : 1dc030ef;   % 210: 	jal FillPrint %
000009c0 : 11700593;   % 212: 	li a1,279 %
000009c1 : 0eb00613;   % 213: 	li a2,235 %
000009c2 : 01a00693;   % 214: 	li a3,26 %
000009c3 : 00100713;   % 215: 	li a4,1 %
000009c4 : 1c8030ef;   % 216: 	jal FillPrint %
000009c5 : 11b00593;   % 218: 	li a1,283 %
000009c6 : 0ec00613;   % 219: 	li a2,236 %
000009c7 : 01200693;   % 220: 	li a3,18 %
000009c8 : 00100713;   % 221: 	li a4,1 %
000009c9 : 1b4030ef;   % 222: 	jal FillPrint %
000009ca : 12000593;   % 224: 	li a1,288 %
000009cb : 0ed00613;   % 225: 	li a2,237 %
000009cc : 00800693;   % 226: 	li a3,8 %
000009cd : 00100713;   % 227: 	li a4,1 %
000009ce : 1a0030ef;   % 228: 	jal FillPrint %
000009cf : 10f00593;   % 230: 	li a1,271 %
000009d0 : 0e600613;   % 231: 	li a2,230 %
000009d1 : 00100693;   % 232: 	li a3,1 %
000009d2 : 00200713;   % 233: 	li a4,2 %
000009d3 : 18c030ef;   % 234: 	jal FillPrint %
000009d4 : 11000593;   % 236: 	li a1,272 %
000009d5 : 0e700613;   % 237: 	li a2,231 %
000009d6 : 00100693;   % 238: 	li a3,1 %
000009d7 : 00100713;   % 239: 	li a4,1 %
000009d8 : 178030ef;   % 240: 	jal FillPrint %
000009d9 : 11100593;   % 242: 	li a1,273 %
000009da : 0e800613;   % 243: 	li a2,232 %
000009db : 00100693;   % 244: 	li a3,1 %
000009dc : 00100713;   % 245: 	li a4,1 %
000009dd : 164030ef;   % 246: 	jal FillPrint %
000009de : 13800593;   % 248: 	li a1,312 %
000009df : 0e600613;   % 249: 	li a2,230 %
000009e0 : 00100693;   % 250: 	li a3,1 %
000009e1 : 00200713;   % 251: 	li a4,2 %
000009e2 : 150030ef;   % 252: 	jal FillPrint %
000009e3 : 13700593;   % 254: 	li a1,311 %
000009e4 : 0e700613;   % 255: 	li a2,231 %
000009e5 : 00100693;   % 256: 	li a3,1 %
000009e6 : 00100713;   % 257: 	li a4,1 %
000009e7 : 13c030ef;   % 258: 	jal FillPrint %
000009e8 : 13600593;   % 260: 	li a1,310 %
000009e9 : 0e800613;   % 261: 	li a2,232 %
000009ea : 00100693;   % 262: 	li a3,1 %
000009eb : 00100713;   % 263: 	li a4,1 %
000009ec : 128030ef;   % 264: 	jal FillPrint %
000009ed : 00a00513;   % 268: 	li a0,10 %
000009ee : 10800593;   % 270: 	li a1,264 %
000009ef : 00000613;   % 271: 	li a2,0 %
000009f0 : 00200693;   % 272: 	li a3,2 %
000009f1 : 0f000713;   % 273: 	li a4,240 %
000009f2 : 110030ef;   % 274: 	jal FillPrint %
000009f3 : 13e00593;   % 276: 	li a1,318 %
000009f4 : 00000613;   % 277: 	li a2,0 %
000009f5 : 00100693;   % 278: 	li a3,1 %
000009f6 : 0f000713;   % 279: 	li a4,240 %
000009f7 : 0fc030ef;   % 280: 	jal FillPrint %
000009f8 : 12000593;   % 282: 	li a1,288 %
000009f9 : 00100613;   % 283: 	li a2,1 %
000009fa : 00800693;   % 284: 	li a3,8 %
000009fb : 00100713;   % 285: 	li a4,1 %
000009fc : 0e8030ef;   % 286: 	jal FillPrint %
000009fd : 11b00593;   % 288: 	li a1,283 %
000009fe : 00200613;   % 289: 	li a2,2 %
000009ff : 00500693;   % 290: 	li a3,5 %
00000a00 : 00100713;   % 291: 	li a4,1 %
00000a01 : 0d4030ef;   % 292: 	jal FillPrint %
00000a02 : 12800593;   % 294: 	li a1,296 %
00000a03 : 00200613;   % 295: 	li a2,2 %
00000a04 : 00500693;   % 296: 	li a3,5 %
00000a05 : 00100713;   % 297: 	li a4,1 %
00000a06 : 0c0030ef;   % 298: 	jal FillPrint %
00000a07 : 11700593;   % 300: 	li a1,279 %
00000a08 : 00300613;   % 301: 	li a2,3 %
00000a09 : 00400693;   % 302: 	li a3,4 %
00000a0a : 00100713;   % 303: 	li a4,1 %
00000a0b : 0ac030ef;   % 304: 	jal FillPrint %
00000a0c : 12d00593;   % 306: 	li a1,301 %
00000a0d : 00300613;   % 307: 	li a2,3 %
00000a0e : 00400693;   % 308: 	li a3,4 %
00000a0f : 00100713;   % 309: 	li a4,1 %
00000a10 : 098030ef;   % 310: 	jal FillPrint %
00000a11 : 11400593;   % 312: 	li a1,276 %
00000a12 : 00400613;   % 313: 	li a2,4 %
00000a13 : 00300693;   % 314: 	li a3,3 %
00000a14 : 00100713;   % 315: 	li a4,1 %
00000a15 : 084030ef;   % 316: 	jal FillPrint %
00000a16 : 13100593;   % 318: 	li a1,305 %
00000a17 : 00400613;   % 319: 	li a2,4 %
00000a18 : 00300693;   % 320: 	li a3,3 %
00000a19 : 00100713;   % 321: 	li a4,1 %
00000a1a : 070030ef;   % 322: 	jal FillPrint %
00000a1b : 11100593;   % 324: 	li a1,273 %
00000a1c : 00500613;   % 325: 	li a2,5 %
00000a1d : 00400693;   % 326: 	li a3,4 %
00000a1e : 00100713;   % 327: 	li a4,1 %
00000a1f : 05c030ef;   % 328: 	jal FillPrint %
00000a20 : 13400593;   % 330: 	li a1,308 %
00000a21 : 00500613;   % 331: 	li a2,5 %
00000a22 : 00400693;   % 332: 	li a3,4 %
00000a23 : 00100713;   % 333: 	li a4,1 %
00000a24 : 048030ef;   % 334: 	jal FillPrint %
00000a25 : 10f00593;   % 336: 	li a1,271 %
00000a26 : 00600613;   % 337: 	li a2,6 %
00000a27 : 00200693;   % 338: 	li a3,2 %
00000a28 : 00100713;   % 339: 	li a4,1 %
00000a29 : 034030ef;   % 340: 	jal FillPrint %
00000a2a : 13700593;   % 342: 	li a1,311 %
00000a2b : 00600613;   % 343: 	li a2,6 %
00000a2c : 00200693;   % 344: 	li a3,2 %
00000a2d : 00100713;   % 345: 	li a4,1 %
00000a2e : 020030ef;   % 346: 	jal FillPrint %
00000a2f : 10e00593;   % 348: 	li a1,270 %
00000a30 : 00700613;   % 349: 	li a2,7 %
00000a31 : 00100693;   % 350: 	li a3,1 %
00000a32 : 00100713;   % 351: 	li a4,1 %
00000a33 : 00c030ef;   % 352: 	jal FillPrint %
00000a34 : 13900593;   % 354: 	li a1,313 %
00000a35 : 00700613;   % 355: 	li a2,7 %
00000a36 : 00100693;   % 356: 	li a3,1 %
00000a37 : 00100713;   % 357: 	li a4,1 %
00000a38 : 7f9020ef;   % 358: 	jal FillPrint %
00000a39 : 10d00593;   % 360: 	li a1,269 %
00000a3a : 00800613;   % 361: 	li a2,8 %
00000a3b : 00100693;   % 362: 	li a3,1 %
00000a3c : 07a00713;   % 363: 	li a4,122 %
00000a3d : 7e5020ef;   % 364: 	jal FillPrint %
00000a3e : 13a00593;   % 366: 	li a1,314 %
00000a3f : 00800613;   % 367: 	li a2,8 %
00000a40 : 00100693;   % 368: 	li a3,1 %
00000a41 : 07a00713;   % 369: 	li a4,122 %
00000a42 : 7d1020ef;   % 370: 	jal FillPrint %
00000a43 : 10e00593;   % 372: 	li a1,270 %
00000a44 : 08100613;   % 373: 	li a2,129 %
00000a45 : 02c00693;   % 374: 	li a3,44 %
00000a46 : 00100713;   % 375: 	li a4,1 %
00000a47 : 7bd020ef;   % 376: 	jal FillPrint %
00000a48 : 11100593;   % 378: 	li a1,273 %
00000a49 : 08500613;   % 379: 	li a2,133 %
00000a4a : 00100693;   % 380: 	li a3,1 %
00000a4b : 02e00713;   % 381: 	li a4,46 %
00000a4c : 7a9020ef;   % 382: 	jal FillPrint %
00000a4d : 11200593;   % 384: 	li a1,274 %
00000a4e : 08500613;   % 385: 	li a2,133 %
00000a4f : 02400693;   % 386: 	li a3,36 %
00000a50 : 00100713;   % 387: 	li a4,1 %
00000a51 : 795020ef;   % 388: 	jal FillPrint %
00000a52 : 13600593;   % 390: 	li a1,310 %
00000a53 : 08500613;   % 391: 	li a2,133 %
00000a54 : 00100693;   % 392: 	li a3,1 %
00000a55 : 02e00713;   % 393: 	li a4,46 %
00000a56 : 781020ef;   % 394: 	jal FillPrint %
00000a57 : 11200593;   % 396: 	li a1,274 %
00000a58 : 0b200613;   % 397: 	li a2,178 %
00000a59 : 02400693;   % 398: 	li a3,36 %
00000a5a : 00100713;   % 399: 	li a4,1 %
00000a5b : 76d020ef;   % 400: 	jal FillPrint %
00000a5c : 11500593;   % 402: 	li a1,277 %
00000a5d : 0b600613;   % 403: 	li a2,182 %
00000a5e : 00100693;   % 404: 	li a3,1 %
00000a5f : 03600713;   % 405: 	li a4,54 %
00000a60 : 759020ef;   % 406: 	jal FillPrint %
00000a61 : 11600593;   % 408: 	li a1,278 %
00000a62 : 0b600613;   % 409: 	li a2,182 %
00000a63 : 01c00693;   % 410: 	li a3,28 %
00000a64 : 00100713;   % 411: 	li a4,1 %
00000a65 : 745020ef;   % 412: 	jal FillPrint %
00000a66 : 13200593;   % 414: 	li a1,306 %
00000a67 : 0b600613;   % 415: 	li a2,182 %
00000a68 : 00100693;   % 416: 	li a3,1 %
00000a69 : 03600713;   % 417: 	li a4,54 %
00000a6a : 731020ef;   % 418: 	jal FillPrint %
00000a6b : 11600593;   % 420: 	li a1,278 %
00000a6c : 0eb00613;   % 421: 	li a2,235 %
00000a6d : 00100693;   % 422: 	li a3,1 %
00000a6e : 00100713;   % 423: 	li a4,1 %
00000a6f : 71d020ef;   % 424: 	jal FillPrint %
00000a70 : 13100593;   % 426: 	li a1,305 %
00000a71 : 0eb00613;   % 427: 	li a2,235 %
00000a72 : 00100693;   % 428: 	li a3,1 %
00000a73 : 00100713;   % 429: 	li a4,1 %
00000a74 : 709020ef;   % 430: 	jal FillPrint %
00000a75 : 11700593;   % 432: 	li a1,279 %
00000a76 : 0ec00613;   % 433: 	li a2,236 %
00000a77 : 00400693;   % 434: 	li a3,4 %
00000a78 : 00100713;   % 435: 	li a4,1 %
00000a79 : 6f5020ef;   % 436: 	jal FillPrint %
00000a7a : 12d00593;   % 438: 	li a1,301 %
00000a7b : 0ec00613;   % 439: 	li a2,236 %
00000a7c : 00400693;   % 440: 	li a3,4 %
00000a7d : 00100713;   % 441: 	li a4,1 %
00000a7e : 6e1020ef;   % 442: 	jal FillPrint %
00000a7f : 11b00593;   % 444: 	li a1,283 %
00000a80 : 0ed00613;   % 445: 	li a2,237 %
00000a81 : 00500693;   % 446: 	li a3,5 %
00000a82 : 00100713;   % 447: 	li a4,1 %
00000a83 : 6cd020ef;   % 448: 	jal FillPrint %
00000a84 : 12800593;   % 450: 	li a1,296 %
00000a85 : 0ed00613;   % 451: 	li a2,237 %
00000a86 : 00500693;   % 452: 	li a3,5 %
00000a87 : 00100713;   % 453: 	li a4,1 %
00000a88 : 6b9020ef;   % 454: 	jal FillPrint %
00000a89 : 12000593;   % 456: 	li a1,288 %
00000a8a : 0ee00613;   % 457: 	li a2,238 %
00000a8b : 00800693;   % 458: 	li a3,8 %
00000a8c : 00100713;   % 459: 	li a4,1 %
00000a8d : 6a5020ef;   % 460: 	jal FillPrint %
00000a8e : 12100593;   % 462: 	li a1,289 %
00000a8f : 0d000613;   % 463: 	li a2,208 %
00000a90 : 00100693;   % 464: 	li a3,1 %
00000a91 : 00100713;   % 465: 	li a4,1 %
00000a92 : 691020ef;   % 466: 	jal FillPrint %
00000a93 : 12600593;   % 468: 	li a1,294 %
00000a94 : 0d000613;   % 469: 	li a2,208 %
00000a95 : 00100693;   % 470: 	li a3,1 %
00000a96 : 00100713;   % 471: 	li a4,1 %
00000a97 : 67d020ef;   % 472: 	jal FillPrint %
00000a98 : 12200593;   % 474: 	li a1,290 %
00000a99 : 0d100613;   % 475: 	li a2,209 %
00000a9a : 00100693;   % 476: 	li a3,1 %
00000a9b : 00100713;   % 477: 	li a4,1 %
00000a9c : 669020ef;   % 478: 	jal FillPrint %
00000a9d : 12500593;   % 480: 	li a1,293 %
00000a9e : 0d100613;   % 481: 	li a2,209 %
00000a9f : 00100693;   % 482: 	li a3,1 %
00000aa0 : 00100713;   % 483: 	li a4,1 %
00000aa1 : 655020ef;   % 484: 	jal FillPrint %
00000aa2 : 12300593;   % 486: 	li a1,291 %
00000aa3 : 0d200613;   % 487: 	li a2,210 %
00000aa4 : 00200693;   % 488: 	li a3,2 %
00000aa5 : 00200713;   % 489: 	li a4,2 %
00000aa6 : 641020ef;   % 490: 	jal FillPrint %
00000aa7 : 12200593;   % 492: 	li a1,290 %
00000aa8 : 0d400613;   % 493: 	li a2,212 %
00000aa9 : 00100693;   % 494: 	li a3,1 %
00000aaa : 00100713;   % 495: 	li a4,1 %
00000aab : 62d020ef;   % 496: 	jal FillPrint %
00000aac : 12500593;   % 498: 	li a1,293 %
00000aad : 0d400613;   % 499: 	li a2,212 %
00000aae : 00100693;   % 500: 	li a3,1 %
00000aaf : 00100713;   % 501: 	li a4,1 %
00000ab0 : 619020ef;   % 502: 	jal FillPrint %
00000ab1 : 12100593;   % 504: 	li a1,289 %
00000ab2 : 0d500613;   % 505: 	li a2,213 %
00000ab3 : 00100693;   % 506: 	li a3,1 %
00000ab4 : 00100713;   % 507: 	li a4,1 %
00000ab5 : 605020ef;   % 508: 	jal FillPrint %
00000ab6 : 12600593;   % 510: 	li a1,294 %
00000ab7 : 0d500613;   % 511: 	li a2,213 %
00000ab8 : 00100693;   % 512: 	li a3,1 %
00000ab9 : 00100713;   % 513: 	li a4,1 %
00000aba : 5f1020ef;   % 514: 	jal FillPrint %
00000abb : 00600293;   % 518: 	li t0,6 %
00000abc : 0fc0d317;   % 519: 	lh t1,StageID %
00000abd : 6a431303;   % 519:  %
00000abe : 06628a63;   % 520: 	beq t0,t1,MenuBoss # Se estiver no boss %
00000abf : 0fc18517;   % 522: 	la a0,menuScoreName %
00000ac0 : 8c850513;   % 522:  %
00000ac1 : 00b00593;   % 523: 	li a1,11 %
00000ac2 : 01059593;   % 524: 	slli a1,a1,16 %
00000ac3 : 12858593;   % 525: 	addi a1,a1,296 %
00000ac4 : 55d020ef;   % 526: 	jal SimplePrint %
00000ac5 : 0fc0d417;   % 528: 	lw s0,Score %
00000ac6 : 6b042403;   % 528:  %
00000ac7 : 12800493;   % 530: 	li s1,296 # PosX inicial %
00000ac8 : 06c00913;   % 531: 	li s2,108 # PosY %
00000ac9 : 000009b3;   % 533: 	mv s3,zero # contador de casas do numero %
00000aca : 00600a13;   % 534: 	li s4,6 %
00000acb : 0b498863;   % 537: 	beq s3,s4,EndMenuScoreBoss %
00000acc : 00a00293;   % 539: 	li t0,10 %
00000acd : 02546ab3;   % 540: 	rem s5,s0,t0 # s5, digito atual %
00000ace : 0fc18517;   % 542: 	la a0,number0 %
00000acf : a6850513;   % 542:  %
00000ad0 : 04c00313;   % 544: 	li t1,76 # tamanho dos sprites de numero %
00000ad1 : 03530333;   % 545: 	mul t1,t1,s5 %
00000ad2 : 00650533;   % 546: 	add a0,a0,t1 # chega ao endereco do numero equivalente %
00000ad3 : 01091593;   % 548: 	slli a1,s2,16 %
00000ad4 : 009585b3;   % 549: 	add a1,a1,s1 %
00000ad5 : 519020ef;   % 550: 	jal SimplePrint %
00000ad6 : 00a00293;   % 552: 	li t0,10 %
00000ad7 : 02544433;   % 553: 	div s0,s0,t0 %
00000ad8 : ff790913;   % 555: 	addi s2,s2,-9 %
00000ad9 : 00198993;   % 556: 	addi s3,s3,1 %
00000ada : fc5ff06f;   % 558: 	j LoopScoreNum %
00000adb : 0fc16517;   % 562: 	la a0,menuEnemyName %
00000adc : 88850513;   % 562:  %
00000add : 00b00593;   % 563: 	li a1,11 %
00000ade : 01059593;   % 564: 	slli a1,a1,16 %
00000adf : 12858593;   % 565: 	addi a1,a1,296 %
00000ae0 : 4ed020ef;   % 566: 	jal SimplePrint %
00000ae1 : 0fc0d417;   % 568: 	lw s0,BossHP %
00000ae2 : 6e042403;   % 568:  %
00000ae3 : 12800493;   % 570: 	li s1,296 # PosX inicial %
00000ae4 : 03e00913;   % 571: 	li s2,62 # PosY inicial %
00000ae5 : 000009b3;   % 573: 	mv s3,zero # contador de HP %
00000ae6 : 01c00a13;   % 574: 	li s4,28  %
00000ae7 : 05498063;   % 577: 	beq s3,s4,EndMenuScoreBoss %
00000ae8 : 01091593;   % 579: 	slli a1,s2,16 %
00000ae9 : 009585b3;   % 580: 	add a1,a1,s1 %
00000aea : 0089c863;   % 582: 	blt s3,s0,BossHPOn %
00000aeb : 0fc18517;   % 584: 	la a0,menuBossHp1 %
00000aec : 9d050513;   % 584:  %
00000aed : 0180006f;   % 585: 	j GotBossHP %
00000aee : 0fc18517;   % 587: 	la a0,menuBossHp0 %
00000aef : 9a050513;   % 587:  %
00000af0 : 000102b7;   % 588: 	li t0,0x10000 %
00000af1 : 00028293;   % 588:  %
00000af2 : 005585b3;   % 589: 	add a1,a1,t0 # adiciona 1 ao Y %
00000af3 : 4a1020ef;   % 591: 	jal SimplePrint %
00000af4 : 00198993;   % 593: 	addi s3,s3,1 %
00000af5 : 00290913;   % 594: 	addi s2,s2,2 %
00000af6 : fc5ff06f;   % 596: 	j DrawBossHP %
00000af7 : 0fc16517;   % 602: 	la a0,menuKirbyName %
00000af8 : 53850513;   % 602:  %
00000af9 : 00b00593;   % 603: 	li a1,11 %
00000afa : 01059593;   % 604: 	slli a1,a1,16 %
00000afb : 11858593;   % 605: 	addi a1,a1,280 %
00000afc : 47d020ef;   % 606: 	jal SimplePrint %
00000afd : 0fc0d417;   % 608: 	lh s0,PlayerHP %
00000afe : 5d441403;   % 608:  %
00000aff : 11500493;   % 610: 	li s1,277 # PosX inicial %
00000b00 : 03f00913;   % 611: 	li s2,63 # PosY inicial %
00000b01 : 000009b3;   % 613: 	mv s3,zero # contador de HP %
00000b02 : 00700a13;   % 614: 	li s4,7  %
00000b03 : 05498863;   % 617: 	beq s3,s4,EndDrawPlayerHP %
00000b04 : 01091593;   % 619: 	slli a1,s2,16 %
00000b05 : 009585b3;   % 620: 	add a1,a1,s1 %
00000b06 : 0089c863;   % 622: 	blt s3,s0,PlayerHPOn %
00000b07 : 0fc16517;   % 624: 	la a0,menuHp0 %
00000b08 : 38450513;   % 624:  %
00000b09 : 0280006f;   % 625: 	j GotPlayerHP %
00000b0a : 0fc0d297;   % 628: 	lw t0,FrameCount %
00000b0b : 6102a283;   % 628:  %
00000b0c : 01f2f293;   % 629: 	andi t0,t0,31 %
00000b0d : 0fc16517;   % 631: 	la a0,menuHp1 %
00000b0e : 3e850513;   % 631:  %
00000b0f : 01000313;   % 632: 	li t1,16 %
00000b10 : 0062c663;   % 633: 	blt t0,t1,GotPlayerHP %
00000b11 : 0fc16517;   % 634: 	la a0,menuHp2 %
00000b12 : 45450513;   % 634:  %
00000b13 : 421020ef;   % 637: 	jal SimplePrint %
00000b14 : 00890913;   % 639: 	addi s2,s2,8 %
00000b15 : 00198993;   % 640: 	addi s3,s3,1 %
00000b16 : fb5ff06f;   % 642: 	j DrawPlayerHP %
00000b17 : 0fc0d297;   % 647: 	lw t0,FrameCount %
00000b18 : 5dc2a283;   % 647:  %
00000b19 : 03f2f293;   % 648: 	andi t0,t0,63 %
00000b1a : 0fc16517;   % 650: 	la a0,menuLittleKirby0 %
00000b1b : 64050513;   % 650:  %
00000b1c : 01000313;   % 651: 	li t1,16 %
00000b1d : 0262c663;   % 652: 	blt t0,t1,GotLittleKirby %
00000b1e : 0fc16517;   % 653: 	la a0,menuLittleKirby1 %
00000b1f : 6d850513;   % 653:  %
00000b20 : 02000313;   % 654: 	li t1,32 %
00000b21 : 0062ce63;   % 655: 	blt t0,t1,GotLittleKirby %
00000b22 : 0fc16517;   % 656: 	la a0,menuLittleKirby2 %
00000b23 : 77050513;   % 656:  %
00000b24 : 03000313;   % 657: 	li t1,48 %
00000b25 : 0062c663;   % 658: 	blt t0,t1,GotLittleKirby %
00000b26 : 0fc16517;   % 659: 	la a0,menuLittleKirby1 %
00000b27 : 6b850513;   % 659:  %
00000b28 : 0c000593;   % 662: 	li a1,192 %
00000b29 : 01059593;   % 663: 	slli a1,a1,16 %
00000b2a : 11e58593;   % 664: 	addi a1,a1,286 %
00000b2b : 3c1020ef;   % 665: 	jal SimplePrint %
00000b2c : 0fc18517;   % 667: 	la a0,number0 %
00000b2d : 8f050513;   % 667:  %
00000b2e : 0da00593;   % 668: 	li a1,218 %
00000b2f : 01059593;   % 669: 	slli a1,a1,16 %
00000b30 : 11c58593;   % 670: 	addi a1,a1,284 %
00000b31 : 3a9020ef;   % 671: 	jal SimplePrint %
00000b32 : 0fc18517;   % 673: 	la a0,number0 %
00000b33 : 8d850513;   % 673:  %
00000b34 : 0da00593;   % 674: 	li a1,218 %
00000b35 : 01059593;   % 675: 	slli a1,a1,16 %
00000b36 : 11c58593;   % 676: 	addi a1,a1,284 %
00000b37 : 391020ef;   % 677: 	jal SimplePrint %
00000b38 : 0fc18517;   % 679: 	la a0,number0 %
00000b39 : 8c050513;   % 679:  %
00000b3a : 0fc0d297;   % 680: 	lhu t0,PlayerLives %
00000b3b : 4e22d283;   % 680:  %
00000b3c : 04c00313;   % 682: 	li t1,76 # tamanho dos sprites de numero %
00000b3d : 02530333;   % 683: 	mul t1,t1,t0 %
00000b3e : 00650533;   % 684: 	add a0,a0,t1 # chega ao endereco do numero equivalente %
00000b3f : 0da00593;   % 686: 	li a1,218 %
00000b40 : 01059593;   % 687: 	slli a1,a1,16 %
00000b41 : 12458593;   % 688: 	addi a1,a1,292 %
00000b42 : 365020ef;   % 689: 	jal SimplePrint %
00000b43 : 0fc0d417;   % 693: 	lh s0,StageID %
00000b44 : 48841403;   % 693:  %
00000b45 : 0fc0d497;   % 694: 	lw s1,PlayerPowState %
00000b46 : 4cc4a483;   % 694:  %
00000b47 : 0fc0d917;   % 695: 	lh s2,PlayerAnimState %
00000b48 : 4c291903;   % 695:  %
00000b49 : 0fc15517;   % 697: 	la a0,menuBye %
00000b4a : cb850513;   % 697:  %
00000b4b : 00700293;   % 698: 	li t0,7 %
00000b4c : 06540a63;   % 699: 	beq s0,t0,GotMenuState %
00000b4d : 0fc17517;   % 701: 	la a0,menuOuch %
00000b4e : 18450513;   % 701:  %
00000b4f : 00500293;   % 702: 	li t0,5 %
00000b50 : 06590263;   % 703: 	beq s2,t0,GotMenuState %
00000b51 : 0fc16517;   % 705: 	la a0,menuFire %
00000b52 : 84450513;   % 705:  %
00000b53 : 00100293;   % 706: 	li t0,1 %
00000b54 : 04548a63;   % 707: 	beq s1,t0,GotMenuState %
00000b55 : 0fc16517;   % 709: 	la a0,menuFreeze %
00000b56 : d4050513;   % 709:  %
00000b57 : 00200293;   % 710: 	li t0,2 %
00000b58 : 04548263;   % 711: 	beq s1,t0,GotMenuState %
00000b59 : 00800293;   % 713: 	li t0,8 %
00000b5a : 02591a63;   % 714: 	bne s2,t0,NotMenuEating %
00000b5b : 0fc17517;   % 716: 	la a0,menuNothing %
00000b5c : c4050513;   % 716:  %
00000b5d : 00300293;   % 717: 	li t0,3 %
00000b5e : 02548663;   % 718: 	beq s1,t0,GotMenuState %
00000b5f : 0fc16517;   % 720: 	la a0,menuFire %
00000b60 : 80c50513;   % 720:  %
00000b61 : 00400293;   % 721: 	li t0,4 %
00000b62 : 00548e63;   % 722: 	beq s1,t0,GotMenuState %
00000b63 : 0fc16517;   % 724: 	la a0,menuFreeze %
00000b64 : d0850513;   % 724:  %
00000b65 : 00500293;   % 725: 	li t0,5 %
00000b66 : 00548663;   % 726: 	beq s1,t0,GotMenuState %
00000b67 : 0fc16517;   % 730: 	la a0,menuNormal %
00000b68 : 70450513;   % 730:  %
00000b69 : 08800593;   % 733: 	li a1,136 %
00000b6a : 01059593;   % 734: 	slli a1,a1,16 %
00000b6b : 11458593;   % 735: 	addi a1,a1,276 %
00000b6c : 2bd020ef;   % 736: 	jal SimplePrint %
00000b6d : 00012083;   % 738: 	lw ra,0(sp) %
00000b6e : 00410113;   % 739: 	addi sp,sp,4 %
00000b6f : 00008067;   % 741: 	ret %
00000b70 : c0102573;   % 171: 	csrr a0,3073 %
00000b71 : 0fc0d297;   % 172: 	sw a0,LastGlblTime,t0	# define o primeiro valor do timer global, que sera comparado no Clock %
00000b72 : 46a2a823;   % 172:  %
00000b73 : 00700293;   % 174: 	li t0,7 %
00000b74 : 0fc0d317;   % 175: 	sh t0,PlayerHP,t1 %
00000b75 : 3e531c23;   % 175:  %
00000b76 : 00400293;   % 177: 	li t0,4 %
00000b77 : 0fc0d317;   % 178: 	sh t0,PlayerLives,t1 %
00000b78 : 3e531723;   % 178:  %
00000b79 : 01c00293;   % 180: 	li t0,28 %
00000b7a : 0fc0d317;   % 181: 	sw t0,BossHP,t1 %
00000b7b : 46532e23;   % 181:  %
00000b7c : 100082b7;   % 183: <2> li t0, 0x10008000	# carrega tp %
00000b7d : 00028293;   % 183:  %
00000b7e : 00519463;   % 183: <3> bne gp, t0, DE1Start	# Na DE1 gp = 0 ! Nao tem segmento .extern %
00000b7f : 0400006f;   % 185: 	j SkipDE1Start %
00000b80 : 03c00293;   % 188: 	li t0,60 %
00000b81 : 0fc0d317;   % 189: 	sw t0,playerAccX,t1 %
00000b82 : 40532423;   % 189:  %
00000b83 : 01e00293;   % 190: 	li t0,30 %
00000b84 : 0fc0d317;   % 191: 	sw t0,playerDeaccX,t1 %
00000b85 : 40532023;   % 191:  %
00000b86 : 03c00293;   % 192: 	li t0,60 %
00000b87 : 0fc0d317;   % 193: 	sw t0,playerSlowDeaccX,t1 %
00000b88 : 3e532c23;   % 193:  %
00000b89 : 32000293;   % 194: 	li t0,800 %
00000b8a : 0fc0d317;   % 195: 	sw t0,playerKnockbackX,t1 %
00000b8b : 3e532823;   % 195:  %
00000b8c : eed00293;   % 196: 	li t0,-275 %
00000b8d : 0fc0d317;   % 197: 	sw t0,playerKnockbackY,t1 %
00000b8e : 3e532423;   % 197:  %
00000b8f : 0ff00513;   % 201: 	li a0,0xff %
00000b90 : 000005b3;   % 202: 	mv a1,zero %
00000b91 : 00000633;   % 203: 	mv a2,zero %
00000b92 : 14000693;   % 204: 	li a3,320 %
00000b93 : 0f000713;   % 205: 	li a4,240 %
00000b94 : 00100793;   % 206: 	li a5,1 %
00000b95 : 285020ef;   % 207: 	jal FillPrint %
00000b96 : 5c5000ef;   % 209: 	jal ChangeFrame %
00000b97 : 0ff00513;   % 211: 	li a0,0xff %
00000b98 : 000005b3;   % 212: 	mv a1,zero %
00000b99 : 00000633;   % 213: 	mv a2,zero %
00000b9a : 14000693;   % 214: 	li a3,320 %
00000b9b : 0f000713;   % 215: 	li a4,240 %
00000b9c : 00100793;   % 216: 	li a5,1 %
00000b9d : 265020ef;   % 217: 	jal FillPrint %
00000b9e : 0c40006f;   % 219: 	j LoadHub %
00000b9f : 0fc0d297;   % 222: 	sw zero,PlayerDoor,t0 # garante que volta a zero, pois unico lugar que tambem seta isso e no comeco da colisao do jogador com o chao %
00000ba0 : 3802a623;   % 222:  %
00000ba1 : 0fc0d297;   % 224: 	lh t0,StageID %
00000ba2 : 31029283;   % 224:  %
00000ba3 : 00100313;   % 225: 	li t1,1 %
00000ba4 : 02628863;   % 226: 	beq t0,t1,CheckHubDoor %
00000ba5 : 00200313;   % 227: 	li t1,2 %
00000ba6 : 2a628663;   % 228: 	beq t0,t1,LoadLevel2 %
00000ba7 : 00300313;   % 229: 	li t1,3 %
00000ba8 : 36628463;   % 230: 	beq t0,t1,LoadLevel3 %
00000ba9 : 00400313;   % 231: 	li t1,4 %
00000baa : 42628263;   % 232: 	beq t0,t1,LoadLevel4 %
00000bab : 00100393;   % 234: 	li t2,1 %
00000bac : 0fc0d317;   % 235: 	sh t2,Completion,t1 %
00000bad : 2e731323;   % 235:  %
00000bae : 00500313;   % 237: 	li t1,5 %
00000baf : 08628063;   % 238: 	beq t0,t1,LoadHub %
00000bb0 : 0c000293;   % 241: 	li t0,192 %
00000bb1 : 0fc0d317;   % 242: 	lhu t1,PlayerPosY %
00000bb2 : 30a35303;   % 242:  %
00000bb3 : 4c534263;   % 244: 	blt t1,t0,LoadBoss # se estiver no hub e se jogador estiver na metade de cima do hub quer dizer que ele entrou na porta do boss %
00000bb4 : 1800006f;   % 246: 	j LoadLevel1 %
00000bb5 : 0fc0d317;   % 249: 	sh zero,StageID,t1 %
00000bb6 : 2c031023;   % 249:  %
00000bb7 : 0fc2c297;   % 251: 	la t0,NotasTitle			# define o endereco inicial das notas %
00000bb8 : 0e028293;   % 251:  %
00000bb9 : 0fc0d317;   % 252: 	sw t0,MusicStartAdd,t1 %
00000bba : 34532c23;   % 252:  %
00000bbb : 0fc0d317;   % 253: 	sw t0,MusicAtual,t1 %
00000bbc : 34532a23;   % 253:  %
00000bbd : 0fc0d317;   % 254: 	sw zero,NoteCounter,t1	# zera o NoteCounter %
00000bbe : 34032c23;   % 254:  %
00000bbf : 0fc2c297;   % 256: 	lw t0,DuracaoTitle # DuracaoHub %
00000bc0 : 0bc2a283;   % 256:  %
00000bc1 : 0fc0d317;   % 257: 	sw t0,LenMusAtual,t1 %
00000bc2 : 34532023;   % 257:  %
00000bc3 : 0fc0d297;   % 259: 	lh t0,PlayerLives %
00000bc4 : 2be29283;   % 259:  %
00000bc5 : 02000293;   % 261: 	li t0,32 %
00000bc6 : 0fc0d317;   % 262: 	sh t0,FadeTimer,t1 %
00000bc7 : 28531123;   % 262:  %
00000bc8 : 0ff00293;   % 263: 	li t0,0xff %
00000bc9 : 0fc0d317;   % 264: 	sw t0,FadeColor,t1 %
00000bca : 26532c23;   % 264:  %
00000bcb : 00400293;   % 267: 	li t0,4 %
00000bcc : 0fc0d317;   % 268: 	sh t0,PlayerLives,t1 %
00000bcd : 28531d23;   % 268:  %
00000bce : 69c0006f;   % 270: 	j TitleMain %
00000bcf : 00100293;   % 273: 	li t0,1 %
00000bd0 : 0fc0d317;   % 274: 	sh t0,StageID,t1 %
00000bd1 : 24531a23;   % 274:  %
00000bd2 : 20000293;   % 277: 	li t0,512 # 32 %
00000bd3 : 17000313;   % 278: 	li t1,368 # 23 %
00000bd4 : 0fc0d397;   % 279: 	sh t0,GridSizeX,t2 %
00000bd5 : 24539e23;   % 279:  %
00000bd6 : 0fc0d397;   % 280: 	sh t1,GridSizeY,t2 %
00000bd7 : 24639b23;   % 280:  %
00000bd8 : 00400293;   % 283: 	li t0,4 %
00000bd9 : 01100313;   % 284: 	li t1,17 %
00000bda : 0fc0d397;   % 285: 	lh t2,Completion %
00000bdb : 22e39383;   % 285:  %
00000bdc : 00038663;   % 286: 	beqz t2,GotPlayerHubPos %
00000bdd : 01900293;   % 287: 	li t0,25 %
00000bde : 01000313;   % 288: 	li t1,16 %
00000bdf : 00429293;   % 290: 	slli t0,t0,4 %
00000be0 : 00431313;   % 291: 	slli t1,t1,4 %
00000be1 : 0fc0d397;   % 292: 	sh t0,PlayerPosX,t2 %
00000be2 : 24539423;   % 292:  %
00000be3 : 0fc0d397;   % 293: 	sh t1,PlayerPosY,t2 %
00000be4 : 24639123;   % 293:  %
00000be5 : 0fc2c297;   % 295: 	la t0,NotasHub			# define o endereco inicial das notas %
00000be6 : 0cc28293;   % 295:  %
00000be7 : 0fc0d317;   % 296: 	sw t0,MusicStartAdd,t1 %
00000be8 : 2a532023;   % 296:  %
00000be9 : 0fc0d317;   % 297: 	sw t0,MusicAtual,t1 %
00000bea : 28532e23;   % 297:  %
00000beb : 0fc0d317;   % 298: 	sw zero,NoteCounter,t1	# zera o NoteCounter %
00000bec : 2a032023;   % 298:  %
00000bed : 0fc2c297;   % 300: 	lw t0,DuracaoHub %
00000bee : 0a82a283;   % 300:  %
00000bef : 0fc0d317;   % 301: 	sw t0,LenMusAtual,t1 %
00000bf0 : 28532423;   % 301:  %
00000bf1 : 0fc23297;   % 303: 	la t0,hubReducedGrid#hubFullGrid 		# endereco do grid de tiles atual %
00000bf2 : 23028293;   % 303:  %
00000bf3 : 0fc0d317;   % 304: 	sw t0,MapGridAtual,t1 %
00000bf4 : 1c532e23;   % 304:  %
00000bf5 : 0fc18297;   % 306: 	la t0,hubRTiles 	# endereco inicial dos sprites de tile %
00000bf6 : 07c28293;   % 306:  %
00000bf7 : 0fc0d317;   % 307: 	sw t0,TileSprtStartAdd,t1 %
00000bf8 : 1c532a23;   % 307:  %
00000bf9 : 0fc22297;   % 309: 	la t0,hubCol 		# endereco do grid de colisao atual %
00000bfa : 10428293;   % 309:  %
00000bfb : 0fc0d317;   % 310: 	sw t0,ColGridAtual,t1 %
00000bfc : 1c532423;   % 310:  %
00000bfd : 0fc2a297;   % 312: 	la t0,Col0 		# endereco inicial dos sprites de tile de colisao %
00000bfe : 16828293;   % 312:  %
00000bff : 0fc0d317;   % 313: 	sw t0,ColSprtStartAdd,t1 %
00000c00 : 1a532e23;   % 313:  %
00000c01 : 00700293;   % 315: 	li t0,7 %
00000c02 : 0fc0d317;   % 316: 	sh t0,PlayerHP,t1 %
00000c03 : 1c531023;   % 316:  %
00000c04 : 0fc0d297;   % 318: 	sw zero,PlayerSpeedX,t0 %
00000c05 : 1c02a423;   % 318:  %
00000c06 : 0fc0d297;   % 319: 	sh zero,PlayerAnimState,t0 %
00000c07 : 1c029323;   % 319:  %
00000c08 : 0fc0d297;   % 320: 	sw zero,PlayerIFrames,t0  %
00000c09 : 1e02a223;   % 320:  %
00000c0a : 0fc0d297;   % 321: 	sw zero,PlayerLock,t0 %
00000c0b : 1c02a223;   % 321:  %
00000c0c : ac0fe0ef;   % 323: 	jal ClearObjects %
00000c0d : 02000293;   % 325: 	li t0,32 %
00000c0e : 0fc0d317;   % 326: 	sh t0,FadeTimer,t1 %
00000c0f : 16531123;   % 326:  %
00000c10 : 0ff00293;   % 327: 	li t0,255 %
00000c11 : 0fc0d317;   % 328: 	sw t0,FadeColor,t1 %
00000c12 : 14532c23;   % 328:  %
00000c13 : 5340006f;   % 330: 	j Main %
00000c14 : 00200293;   % 334: 	li t0,2 %
00000c15 : 0fc0d317;   % 335: 	sh t0,StageID,t1 %
00000c16 : 14531023;   % 335:  %
00000c17 : 11000293;   % 338: 	li t0,272 # 17 %
00000c18 : 17000313;   % 339: 	li t1,368 # 23 %
00000c19 : 0fc0d397;   % 340: 	sh t0,GridSizeX,t2 %
00000c1a : 14539423;   % 340:  %
00000c1b : 0fc0d397;   % 341: 	sh t1,GridSizeY,t2 %
00000c1c : 14639123;   % 341:  %
00000c1d : 00200293;   % 344: 	li t0,2 %
00000c1e : 00c00313;   % 345: 	li t1,12 %
00000c1f : 00429293;   % 346: 	slli t0,t0,4 %
00000c20 : 00431313;   % 347: 	slli t1,t1,4 %
00000c21 : 0fc0d397;   % 348: 	sh t0,PlayerPosX,t2 %
00000c22 : 14539423;   % 348:  %
00000c23 : 0fc0d397;   % 349: 	sh t1,PlayerPosY,t2 %
00000c24 : 14639123;   % 349:  %
00000c25 : 0fc2c297;   % 351: 	la t0,NotasLvl			# define o endereco inicial das notas %
00000c26 : 28828293;   % 351:  %
00000c27 : 0fc0d317;   % 352: 	sw t0,MusicStartAdd,t1 %
00000c28 : 1a532023;   % 352:  %
00000c29 : 0fc0d317;   % 353: 	sw t0,MusicAtual,t1 %
00000c2a : 18532e23;   % 353:  %
00000c2b : 0fc0d317;   % 354: 	sw zero,NoteCounter,t1	# zera o NoteCounter %
00000c2c : 1a032023;   % 354:  %
00000c2d : 0fc2c297;   % 356: 	lw t0,DuracaoLvl %
00000c2e : 2642a283;   % 356:  %
00000c2f : 0fc0d317;   % 357: 	sw t0,LenMusAtual,t1 %
00000c30 : 18532423;   % 357:  %
00000c31 : 0fc23297;   % 359: 	la t0,stage1 		# endereco do grid de tiles atual %
00000c32 : 41c28293;   % 359:  %
00000c33 : 0fc0d317;   % 360: 	sw t0,MapGridAtual,t1 %
00000c34 : 0c532e23;   % 360:  %
00000c35 : 0fc1a297;   % 362: 	la t0,stageTiles 	# endereco inicial dos sprites de tile %
00000c36 : 38028293;   % 362:  %
00000c37 : 0fc0d317;   % 363: 	sw t0,TileSprtStartAdd,t1 %
00000c38 : 0c532a23;   % 363:  %
00000c39 : 0fc22297;   % 365: 	la t0,stage1C 		# endereco do grid de colisao atual %
00000c3a : 2f028293;   % 365:  %
00000c3b : 0fc0d317;   % 366: 	sw t0,ColGridAtual,t1 %
00000c3c : 0c532423;   % 366:  %
00000c3d : 0fc2a297;   % 368: 	la t0,Col0 		# endereco inicial dos sprites de tile de colisao %
00000c3e : 06828293;   % 368:  %
00000c3f : 0fc0d317;   % 369: 	sw t0,ColSprtStartAdd,t1 %
00000c40 : 0a532e23;   % 369:  %
00000c41 : 0fc0d297;   % 371: 	sw zero,PlayerSpeedX,t0 %
00000c42 : 0c02aa23;   % 371:  %
00000c43 : 0fc0d297;   % 372: 	sh zero,PlayerAnimState,t0 %
00000c44 : 0c029923;   % 372:  %
00000c45 : 0fc0d297;   % 373: 	sw zero,PlayerIFrames,t0  %
00000c46 : 0e02a823;   % 373:  %
00000c47 : 0fc0d297;   % 374: 	sw zero,PlayerLock,t0 %
00000c48 : 0c02a823;   % 374:  %
00000c49 : 9ccfe0ef;   % 376: 	jal ClearObjects %
00000c4a : 039000ef;   % 378: 	jal StartEnemiesLvl1 %
00000c4b : 02000293;   % 380: 	li t0,32 %
00000c4c : 0fc0d317;   % 381: 	sh t0,FadeTimer,t1 %
00000c4d : 06531523;   % 381:  %
00000c4e : 0fc0d317;   % 382: 	sw zero,FadeColor,t1 %
00000c4f : 06032223;   % 382:  %
00000c50 : 4400006f;   % 384: 	j Main %
00000c51 : 00300293;   % 388: 	li t0,3 %
00000c52 : 0fc0d317;   % 389: 	sh t0,StageID,t1 %
00000c53 : 04531623;   % 389:  %
00000c54 : 40000293;   % 392: 	li t0,1024 # 64  %
00000c55 : 0f000313;   % 393: 	li t1,240 # 15 %
00000c56 : 0fc0d397;   % 394: 	sh t0,GridSizeX,t2 %
00000c57 : 04539a23;   % 394:  %
00000c58 : 0fc0d397;   % 395: 	sh t1,GridSizeY,t2 %
00000c59 : 04639723;   % 395:  %
00000c5a : 00400293;   % 398: 	li t0,4 %
00000c5b : 00700313;   % 399: 	li t1,7 %
00000c5c : 00429293;   % 400: 	slli t0,t0,4 %
00000c5d : 00431313;   % 401: 	slli t1,t1,4 %
00000c5e : 0fc0d397;   % 402: 	sh t0,PlayerPosX,t2 %
00000c5f : 04539a23;   % 402:  %
00000c60 : 0fc0d397;   % 403: 	sh t1,PlayerPosY,t2 %
00000c61 : 04639723;   % 403:  %
00000c62 : 0fc23297;   % 407: 	la t0,stage2 		# endereco do grid de tiles atual %
00000c63 : 4ec28293;   % 407:  %
00000c64 : 0fc0d317;   % 408: 	sw t0,MapGridAtual,t1 %
00000c65 : 00532c23;   % 408:  %
00000c66 : 0fc1a297;   % 410: 	la t0,stageTiles	# endereco inicial dos sprites de tile %
00000c67 : 2bc28293;   % 410:  %
00000c68 : 0fc0d317;   % 411: 	sw t0,TileSprtStartAdd,t1 %
00000c69 : 00532823;   % 411:  %
00000c6a : 0fc22297;   % 413: 	la t0,stage2C 		# endereco do grid de colisao atual %
00000c6b : 3c028293;   % 413:  %
00000c6c : 0fc0d317;   % 414: 	sw t0,ColGridAtual,t1 %
00000c6d : 00532223;   % 414:  %
00000c6e : 0fc2a297;   % 416: 	la t0,Col0 		# endereco inicial dos sprites de tile de colisao %
00000c6f : fa428293;   % 416:  %
00000c70 : 0fc0d317;   % 417: 	sw t0,ColSprtStartAdd,t1 %
00000c71 : fe532c23;   % 417:  %
00000c72 : 0fc0d297;   % 419: 	sw zero,PlayerSpeedX,t0 %
00000c73 : 0002a823;   % 419:  %
00000c74 : 0fc0d297;   % 420: 	sh zero,PlayerAnimState,t0 %
00000c75 : 00029723;   % 420:  %
00000c76 : 0fc0d297;   % 421: 	sw zero,PlayerIFrames,t0  %
00000c77 : 0202a623;   % 421:  %
00000c78 : 0fc0d297;   % 422: 	sw zero,PlayerLock,t0 %
00000c79 : 0002a623;   % 422:  %
00000c7a : 908fe0ef;   % 424: 	jal ClearObjects %
00000c7b : 7f4000ef;   % 426: 	jal StartEnemiesLvl2 %
00000c7c : 02000293;   % 428: 	li t0,32 %
00000c7d : 0fc0d317;   % 429: 	sh t0,FadeTimer,t1 %
00000c7e : fa531323;   % 429:  %
00000c7f : 0fc0d317;   % 430: 	sw zero,FadeColor,t1 %
00000c80 : fa032023;   % 430:  %
00000c81 : 37c0006f;   % 432: 	j Main %
00000c82 : 00400293;   % 436: 	li t0,4 %
00000c83 : 0fc0d317;   % 437: 	sh t0,StageID,t1 %
00000c84 : f8531423;   % 437:  %
00000c85 : 11000293;   % 440: 	li t0,272 # 17  %
00000c86 : 23000313;   % 441: 	li t1,560 # 35 %
00000c87 : 0fc0d397;   % 442: 	sh t0,GridSizeX,t2 %
00000c88 : f8539823;   % 442:  %
00000c89 : 0fc0d397;   % 443: 	sh t1,GridSizeY,t2 %
00000c8a : f8639523;   % 443:  %
00000c8b : 00700293;   % 446: 	li t0,7 %
00000c8c : 01f00313;   % 447: 	li t1,31 %
00000c8d : 00429293;   % 448: 	slli t0,t0,4 %
00000c8e : 00431313;   % 449: 	slli t1,t1,4 %
00000c8f : 0fc0d397;   % 450: 	sh t0,PlayerPosX,t2 %
00000c90 : f8539823;   % 450:  %
00000c91 : 0fc0d397;   % 451: 	sh t1,PlayerPosY,t2 %
00000c92 : f8639523;   % 451:  %
00000c93 : 0fc23297;   % 455: 	la t0,stage3 		# endereco do grid de tiles atual %
00000c94 : 7f428293;   % 455:  %
00000c95 : 0fc0d317;   % 456: 	sw t0,MapGridAtual,t1 %
00000c96 : f4532a23;   % 456:  %
00000c97 : 0fc1a297;   % 458: 	la t0,stageTiles	# endereco inicial dos sprites de tile %
00000c98 : 1f828293;   % 458:  %
00000c99 : 0fc0d317;   % 459: 	sw t0,TileSprtStartAdd,t1 %
00000c9a : f4532623;   % 459:  %
00000c9b : 0fc22297;   % 461: 	la t0,stage3C 		# endereco do grid de colisao atual %
00000c9c : 6c828293;   % 461:  %
00000c9d : 0fc0d317;   % 462: 	sw t0,ColGridAtual,t1 %
00000c9e : f4532023;   % 462:  %
00000c9f : 0fc2a297;   % 464: 	la t0,Col0 		# endereco inicial dos sprites de tile de colisao %
00000ca0 : ee028293;   % 464:  %
00000ca1 : 0fc0d317;   % 465: 	sw t0,ColSprtStartAdd,t1 %
00000ca2 : f2532a23;   % 465:  %
00000ca3 : 864fe0ef;   % 467: 	jal ClearObjects %
00000ca4 : 0fc0d297;   % 469: 	sw zero,PlayerSpeedX,t0 %
00000ca5 : f402a423;   % 469:  %
00000ca6 : 0fc0d297;   % 470: 	sh zero,PlayerAnimState,t0 %
00000ca7 : f4029323;   % 470:  %
00000ca8 : 0fc0d297;   % 471: 	sw zero,PlayerIFrames,t0  %
00000ca9 : f602a223;   % 471:  %
00000caa : 0fc0d297;   % 472: 	sw zero,PlayerLock,t0 %
00000cab : f402a223;   % 472:  %
00000cac : 7e4000ef;   % 474: 	jal StartEnemiesLvl3 %
00000cad : 02000293;   % 476: 	li t0,32 %
00000cae : 0fc0d317;   % 477: 	sh t0,FadeTimer,t1 %
00000caf : ee531123;   % 477:  %
00000cb0 : 0fc0d317;   % 478: 	sw zero,FadeColor,t1 %
00000cb1 : ec032e23;   % 478:  %
00000cb2 : 2b80006f;   % 480: 	j Main %
00000cb3 : 00500293;   % 484: 	li t0,5 %
00000cb4 : 0fc0d317;   % 485: 	sh t0,StageID,t1 %
00000cb5 : ec531223;   % 485:  %
00000cb6 : 50000293;   % 488: 	li t0,1280 # 80 %
00000cb7 : 0f000313;   % 489: 	li t1,240 # 15 %
00000cb8 : 0fc0d397;   % 490: 	sh t0,GridSizeX,t2 %
00000cb9 : ec539623;   % 490:  %
00000cba : 0fc0d397;   % 491: 	sh t1,GridSizeY,t2 %
00000cbb : ec639323;   % 491:  %
00000cbc : 00300293;   % 494: 	li t0,3 %
00000cbd : 00800313;   % 495: 	li t1,8 %
00000cbe : 00429293;   % 496: 	slli t0,t0,4 %
00000cbf : 00431313;   % 497: 	slli t1,t1,4 %
00000cc0 : 0fc0d397;   % 498: 	sh t0,PlayerPosX,t2 %
00000cc1 : ec539623;   % 498:  %
00000cc2 : 0fc0d397;   % 499: 	sh t1,PlayerPosY,t2 %
00000cc3 : ec639323;   % 499:  %
00000cc4 : 0fc24297;   % 503: 	la t0,stage4 		# endereco do grid de tiles atual %
00000cc5 : 99028293;   % 503:  %
00000cc6 : 0fc0d317;   % 504: 	sw t0,MapGridAtual,t1 %
00000cc7 : e8532823;   % 504:  %
00000cc8 : 0fc1a297;   % 506: 	la t0,stageTiles	# endereco inicial dos sprites de tile %
00000cc9 : 13428293;   % 506:  %
00000cca : 0fc0d317;   % 507: 	sw t0,TileSprtStartAdd,t1 %
00000ccb : e8532423;   % 507:  %
00000ccc : 0fc23297;   % 509: 	la t0,stage4C 		# endereco do grid de colisao atual %
00000ccd : 86428293;   % 509:  %
00000cce : 0fc0d317;   % 510: 	sw t0,ColGridAtual,t1 %
00000ccf : e6532e23;   % 510:  %
00000cd0 : 0fc2a297;   % 512: 	la t0,Col0 		# endereco inicial dos sprites de tile de colisao %
00000cd1 : e1c28293;   % 512:  %
00000cd2 : 0fc0d317;   % 513: 	sw t0,ColSprtStartAdd,t1 %
00000cd3 : e6532823;   % 513:  %
00000cd4 : 0fc0d297;   % 515: 	sw zero,PlayerSpeedX,t0 %
00000cd5 : e802a423;   % 515:  %
00000cd6 : 0fc0d297;   % 516: 	sh zero,PlayerAnimState,t0 %
00000cd7 : e8029323;   % 516:  %
00000cd8 : 0fc0d297;   % 517: 	sw zero,PlayerIFrames,t0  %
00000cd9 : ea02a223;   % 517:  %
00000cda : 0fc0d297;   % 518: 	sw zero,PlayerLock,t0 %
00000cdb : e802a223;   % 518:  %
00000cdc : f81fd0ef;   % 520: 	jal ClearObjects %
00000cdd : 7b4000ef;   % 522: 	jal StartEnemiesLvl4 %
00000cde : 02000293;   % 524: 	li t0,32 %
00000cdf : 0fc0d317;   % 525: 	sh t0,FadeTimer,t1 %
00000ce0 : e0531f23;   % 525:  %
00000ce1 : 0fc0d317;   % 526: 	sw zero,FadeColor,t1 %
00000ce2 : e0032c23;   % 526:  %
00000ce3 : 1f40006f;   % 528: 	j Main %
00000ce4 : 00600293;   % 532: 	li t0,6 %
00000ce5 : 0fc0d317;   % 533: 	sh t0,StageID,t1 %
00000ce6 : e0531023;   % 533:  %
00000ce7 : 11000293;   % 536: 	li t0,272 # 17  %
00000ce8 : 18000313;   % 537: 	li t1,384 # 24 %
00000ce9 : 0fc0d397;   % 538: 	sh t0,GridSizeX,t2 %
00000cea : e0539423;   % 538:  %
00000ceb : 0fc0d397;   % 539: 	sh t1,GridSizeY,t2 %
00000cec : e0639123;   % 539:  %
00000ced : 00200293;   % 542: 	li t0,2 %
00000cee : 00300313;   % 543: 	li t1,3 %
00000cef : 00429293;   % 544: 	slli t0,t0,4 %
00000cf0 : 00431313;   % 545: 	slli t1,t1,4 %
00000cf1 : 0fc0d397;   % 546: 	sh t0,PlayerPosX,t2 %
00000cf2 : e0539423;   % 546:  %
00000cf3 : 0fc0d397;   % 547: 	sh t1,PlayerPosY,t2 %
00000cf4 : e0639123;   % 547:  %
00000cf5 : 0fc2c297;   % 549: 	la t0,NotasBoss			# define o endereco inicial das notas %
00000cf6 : 0ac28293;   % 549:  %
00000cf7 : 0fc0d317;   % 550: 	sw t0,MusicStartAdd,t1 %
00000cf8 : e6532023;   % 550:  %
00000cf9 : 0fc0d317;   % 551: 	sw t0,MusicAtual,t1 %
00000cfa : e4532e23;   % 551:  %
00000cfb : 0fc2c297;   % 553: 	lw t0,DuracaoBoss %
00000cfc : 0902a283;   % 553:  %
00000cfd : 0fc0d317;   % 554: 	sw t0,LenMusAtual,t1 %
00000cfe : e4532823;   % 554:  %
00000cff : 0fc24297;   % 556: 	la t0,stageWhispy 		# endereco do grid de tiles atual %
00000d00 : d6028293;   % 556:  %
00000d01 : 0fc0d317;   % 557: 	sw t0,MapGridAtual,t1 %
00000d02 : da532223;   % 557:  %
00000d03 : 0fc1a297;   % 559: 	la t0,stageTiles	# endereco inicial dos sprites de tile %
00000d04 : 04828293;   % 559:  %
00000d05 : 0fc0d317;   % 560: 	sw t0,TileSprtStartAdd,t1 %
00000d06 : d8532e23;   % 560:  %
00000d07 : 0fc23297;   % 562: 	la t0,whispyStageCol 		# endereco do grid de colisao atual %
00000d08 : c3428293;   % 562:  %
00000d09 : 0fc0d317;   % 563: 	sw t0,ColGridAtual,t1 %
00000d0a : d8532823;   % 563:  %
00000d0b : 0fc2a297;   % 565: 	la t0,Col0 		# endereco inicial dos sprites de tile de colisao %
00000d0c : d3028293;   % 565:  %
00000d0d : 0fc0d317;   % 566: 	sw t0,ColSprtStartAdd,t1 %
00000d0e : d8532223;   % 566:  %
00000d0f : 0fc0d297;   % 568: 	sw zero,PlayerSpeedX,t0 %
00000d10 : d802ae23;   % 568:  %
00000d11 : 0fc0d297;   % 569: 	sh zero,PlayerAnimState,t0 %
00000d12 : d8029d23;   % 569:  %
00000d13 : 0fc0d297;   % 570: 	sw zero,PlayerIFrames,t0  %
00000d14 : da02ac23;   % 570:  %
00000d15 : 0fc0d297;   % 571: 	sw zero,PlayerLock,t0 %
00000d16 : d802ac23;   % 571:  %
00000d17 : e95fd0ef;   % 573: 	jal ClearObjects %
00000d18 : 01c00293;   % 575: 	li t0,28 %
00000d19 : 0fc0d317;   % 576: 	sw t0,BossHP,t1 %
00000d1a : e0532023;   % 576:  %
00000d1b : 0fc0d317;   % 577: 	sw zero,BossTimer,t1 %
00000d1c : de032e23;   % 577:  %
00000d1d : 0fc0d317;   % 578: 	sw zero,BossAnimState,t1 %
00000d1e : de032c23;   % 578:  %
00000d1f : 0fc0d317;   % 579: 	sw zero,BossAnimCount,t1 %
00000d20 : de032e23;   % 579:  %
00000d21 : 0fc0d317;   % 580: 	sw zero,BossIFrames,t1 %
00000d22 : e0032223;   % 580:  %
00000d23 : 02000293;   % 582: 	li t0,32 %
00000d24 : 0fc0d317;   % 583: 	sh t0,FadeTimer,t1 %
00000d25 : d0531523;   % 583:  %
00000d26 : 0fc0d317;   % 584: 	sw zero,FadeColor,t1 %
00000d27 : d0032223;   % 584:  %
00000d28 : 0e00006f;   % 586: 	j Main %
00000d29 : 00700293;   % 590: 	li t0,7 %
00000d2a : 0fc0d317;   % 591: 	sh t0,StageID,t1 %
00000d2b : ce531623;   % 591:  %
00000d2c : 0d00006f;   % 593: 	j Main %
00000d2d : 00800293;   % 597: 	li t0,8 %
00000d2e : 0fc0d317;   % 598: 	sh t0,StageID,t1	 %
00000d2f : cc531e23;   % 598:  %
00000d30 : 28000293;   % 601: 	li t0,640  %
00000d31 : 1e000313;   % 602: 	li t1,480 %
00000d32 : 0fc0d397;   % 603: 	sh t0,GridSizeX,t2 %
00000d33 : ce539223;   % 603:  %
00000d34 : 0fc0d397;   % 604: 	sh t1,GridSizeY,t2 %
00000d35 : cc639f23;   % 604:  %
00000d36 : 00200293;   % 607: 	li t0,2 %
00000d37 : 00400313;   % 608: 	li t1,4 %
00000d38 : 00429293;   % 609: 	slli t0,t0,4 %
00000d39 : 00431313;   % 610: 	slli t1,t1,4 %
00000d3a : 0fc0d397;   % 611: 	sh t0,PlayerPosX,t2 %
00000d3b : ce539223;   % 611:  %
00000d3c : 0fc0d397;   % 612: 	sh t1,PlayerPosY,t2 %
00000d3d : cc639f23;   % 612:  %
00000d3e : 0fc2c297;   % 614: 	la t0,NotasHub			# define o endereco inicial das notas %
00000d3f : b6828293;   % 614:  %
00000d40 : 0fc0d317;   % 615: 	sw t0,MusicStartAdd,t1 %
00000d41 : d2532e23;   % 615:  %
00000d42 : 0fc0d317;   % 616: 	sw t0,MusicAtual,t1 %
00000d43 : d2532c23;   % 616:  %
00000d44 : 0fc2c297;   % 618: 	lw t0,DuracaoHub %
00000d45 : b4c2a283;   % 618:  %
00000d46 : 0fc0d317;   % 619: 	sw t0,LenMusAtual,t1 %
00000d47 : d2532623;   % 619:  %
00000d48 : 0fc0e297;   % 621: 	la t0,mapa40x30 		# endereco do grid de tiles atual %
00000d49 : 80028293;   % 621:  %
00000d4a : 0fc0d317;   % 622: 	sw t0,MapGridAtual,t1 %
00000d4b : c8532023;   % 622:  %
00000d4c : 0fc0d297;   % 624: 	la t0,vazioTeste			# endereco inicial dos sprites de tile %
00000d4d : 09c28293;   % 624:  %
00000d4e : 0fc0d317;   % 625: 	sw t0,TileSprtStartAdd,t1 %
00000d4f : c6532c23;   % 625:  %
00000d50 : 0fc0e297;   % 627: 	la t0,mapa40x30col 		# endereco do grid de colisao atual %
00000d51 : c9c28293;   % 627:  %
00000d52 : 0fc0d317;   % 628: 	sw t0,ColGridAtual,t1 %
00000d53 : c6532623;   % 628:  %
00000d54 : 0fc0e297;   % 630: 	la t0,blocoExempCol 		# endereco inicial dos sprites de tile de colisao %
00000d55 : 14828293;   % 630:  %
00000d56 : 0fc0d317;   % 631: 	sw t0,ColSprtStartAdd,t1 %
00000d57 : c6532023;   % 631:  %
00000d58 : 380000ef;   % 633: 	jal StartEnemiesTest %
00000d59 : 02000293;   % 635: 	li t0,32 %
00000d5a : 0fc0d317;   % 636: 	sh t0,FadeTimer,t1 %
00000d5b : c2531923;   % 636:  %
00000d5c : 0ff00293;   % 637: 	li t0,255 %
00000d5d : 0fc0d317;   % 638: 	sw t0,FadeColor,t1 %
00000d5e : c2532423;   % 638:  %
00000d5f : 0040006f;   % 640: 	j Main	 %
00000d60 : 0ac000ef;   % 644: 	jal FadeScreen %
00000d61 : 1ec000ef;   % 646: 	jal Clock # MusicLoop acontece aqui %
00000d62 : 694000ef;   % 648: 	jal ChangeFrame # mostra o BitmapFrame atual e o atualiza, para o proximo ser desenhado %
00000d63 : 01000293;   % 650: 	li t0,16 %
00000d64 : 0fc0d317;   % 651: 	lhu t1,FadeTimer %
00000d65 : c0a35303;   % 651:  %
00000d66 : fe62c4e3;   % 652: 	bgt t1,t0,Main # enquanto a primeira parte da transicao acontece mantem a tela do estagio passado %
00000d67 : 815fe0ef;   % 654: 	jal KeyPress		# confere teclas apertadas, atualizando posicao do jogador e offset %
00000d68 : 6b0000ef;   % 656: 	jal PlayerControls	# com base na ultima tecla apertada, salva em s10 pelo KeyPress, realiza as acoes de movimento do jogador %
00000d69 : 719000ef;   % 658: 	jal PlayerAnimation %
00000d6a : 090020ef;   % 662: 	jal PrintMapa		# imprime o mapa usando o offset %
00000d6b : 130000ef;   % 664: 	jal DrawPlayer %
00000d6c : 0fc0d297;   % 666: 	lh t0,StageID %
00000d6d : be429283;   % 666:  %
00000d6e : 00600313;   % 667: 	li t1,6 %
00000d6f : 00629463;   % 668: 	bne t0,t1,NotBoss %
00000d70 : f29fd0ef;   % 669: 	jal CheckBoss %
00000d71 : d7dfc0ef;   % 672: 	jal DrawObjects %
00000d72 : e91fe0ef;   % 674: 	jal DrawMenu %
00000d73 : 174000ef;   % 676: 	jal ShowCollision %
00000d74 : fb1ff06f;   % 678: 	j Main %
00000d75 : 058000ef;   % 682: 	jal FadeScreen %
00000d76 : 198000ef;   % 684: 	jal Clock %
00000d77 : 640000ef;   % 686: 	jal ChangeFrame # mostra o BitmapFrame atual e o atualiza, para o proximo frame ser desenhado %
00000d78 : 01000293;   % 688: 	li t0,16 %
00000d79 : 0fc0d317;   % 689: 	lhu t1,FadeTimer %
00000d7a : bb635303;   % 689:  %
00000d7b : fe62c4e3;   % 690: 	bgt t1,t0,TitleMain # enquanto a primeira parte da transicao acontece mantem a tela do estagio passado %
00000d7c : f50fe0ef;   % 692: 	jal TitleKeyPress %
00000d7d : b85fe0ef;   % 694: 	jal DrawTitle %
00000d7e : 0fc0d297;   % 697: 	lw t0,TitleControls %
00000d7f : ba82a283;   % 697:  %
00000d80 : 02800313;   % 698: 	li t1,40 %
00000d81 : 026282b3;   % 699: 	mul t0,t0,t1 %
00000d82 : 08400313;   % 701: 	li t1,132 %
00000d83 : 0b400393;   % 702: 	li t2,180 %
00000d84 : 00530333;   % 703: 	add t1,t1,t0 %
00000d85 : 01039593;   % 705: 	slli a1,t2,16 %
00000d86 : 006585b3;   % 706: 	add a1,a1,t1 %
00000d87 : 0fc28517;   % 708: 	la a0,star0 %
00000d88 : 45c50513;   % 708:  %
00000d89 : 248020ef;   % 709: 	jal SimplePrint %
00000d8a : fadff06f;   % 712: 	j TitleMain %
00000d8b : ffc10113;   % 717: 	addi sp,sp,-4 %
00000d8c : 00112023;   % 718: 	sw ra,0(sp) %
00000d8d : 0fc0d417;   % 720: 	lhu s0,FadeTimer %
00000d8e : b6645403;   % 720:  %
00000d8f : 08040a63;   % 721: 	beqz s0,FimFadeScreen %
00000d90 : 02000293;   % 723: 	li t0,32 %
00000d91 : 00829863;   % 724: 	bne t0,s0,DontStartFade %
00000d92 : 10000493;   % 725: 	li s1,256 %
00000d93 : 0fc0d297;   % 726: 	sh s1,FadeLines,t0 %
00000d94 : b4929623;   % 726:  %
00000d95 : 0fc0d497;   % 728: 	lh s1,FadeLines %
00000d96 : b4449483;   % 728:  %
00000d97 : 00147293;   % 730: 	andi t0,s0,1 %
00000d98 : 02029263;   % 731: 	bne t0,zero,DoneGetLines %
00000d99 : 01000293;   % 733: 	li t0,16 %
00000d9a : 0082c863;   % 734: 	bgt s0,t0,DivLines # caso especifico para comecar a trocar a transicao %
00000d9b : 00e00293;   % 736: 	li t0,14 %
00000d9c : 0082d863;   % 737: 	ble s0,t0,MultLines %
00000d9d : 0100006f;   % 739: 	j DoneGetLines %
00000d9e : 0014d493;   % 742: 	srli s1,s1,1 # divide as linhas por 2 %
00000d9f : 0080006f;   % 743: 	j DoneGetLines %
00000da0 : 00149493;   % 745: 	slli s1,s1,1 %
00000da1 : 00000933;   % 749: 	mv s2,zero # contador %
00000da2 : 14000993;   % 750: 	li s3,320 # Y maximo das linhas (nao incluso) %
00000da3 : 0fc0da17;   % 751: 	lw s4,FadeColor %
00000da4 : b10a2a03;   % 751:  %
00000da5 : 01400533;   % 754: 	mv a0,s4 # cor %
00000da6 : 00000593;   % 755: 	li a1,0	# PosX %
00000da7 : 01200633;   % 756: 	mv a2,s2 # PosY %
00000da8 : 14000693;   % 757: 	li a3,320 # tamanho X %
00000da9 : 00100713;   % 758: 	li a4,1 # tamanho Y %
00000daa : 00100793;   % 759: 	li a5,1 # quick print ativado %
00000dab : 22c020ef;   % 760: 	jal FillPrint %
00000dac : 00990933;   % 762: 	add s2,s2,s1 # adiciona certa altura para a Y %
00000dad : 01395463;   % 763: 	bge s2,s3,FimLoopFillLines %
00000dae : fddff06f;   % 765: 	j LoopFillLines %
00000daf : fff40413;   % 769: 	addi s0,s0,-1 %
00000db0 : 0fc0d297;   % 770: 	sh s0,FadeTimer,t0 %
00000db1 : ac829d23;   % 770:  %
00000db2 : 0fc0d297;   % 771: 	sh s1,FadeLines,t0 %
00000db3 : ac929823;   % 771:  %
00000db4 : 00012083;   % 774: 	lw ra,0(sp) %
00000db5 : 00410113;   % 775: 	addi sp,sp,4 %
00000db6 : 00008067;   % 777: 	ret %
00000db7 : ffc10113;   % 781: 	addi sp,sp,-4 %
00000db8 : 00112023;   % 782: 	sw ra,0(sp) %
00000db9 : 0fc0d517;   % 784: 	lw a0,PlayerSprite %
00000dba : b1052503;   % 784:  %
00000dbb : 0fc0d597;   % 785: 	lw a1,PlayerPosX %
00000dbc : ae05a583;   % 785:  %
00000dbd : 0fc0d697;   % 786: 	lw a3,PlayerLastDir %
00000dbe : b346a683;   % 786:  %
00000dbf : 0fc0d717;   % 787: 	lw a4,PlayerPowState %
00000dc0 : ae472703;   % 787:  %
00000dc1 : 0fc0d297;   % 789: 	lw t0,PlayerIFrames	# frames especiais (invencibilidade, ganhar poder(?)) %
00000dc2 : b002a283;   % 789:  %
00000dc3 : 02028263;   % 790: 	beq t0,zero,NoIFrames %
00000dc4 : 04b00313;   % 791: 	li t1,75 %
00000dc5 : 0062de63;   % 792: 	bge t0,t1,NoIFrames %
00000dc6 : 0fc0d397;   % 793: 	sw zero,PlayerLock,t2 %
00000dc7 : ac03aa23;   % 793:  %
00000dc8 : 00f2f293;   % 794: 	andi t0,t0,15 %
00000dc9 : 00800313;   % 795: 	li t1,8 %
00000dca : 0062d463;   % 796: 	bge t0,t1,NoIFrames %
00000dcb : fff00713;   % 797: 	li a4,-1 %
00000dcc : 165010ef;   % 799: 	jal Print		# imprime o jogador em sua nova posicao %
00000dcd : 00012083;   % 801: 	lw ra,0(sp) %
00000dce : 00410113;   % 802: 	addi sp,sp,4 %
00000dcf : 00008067;   % 804: 	ret %
00000dd0 : ffc10113;   % 808: 	addi sp,sp,-4 %
00000dd1 : 00112023;   % 809: 	sw ra,0(sp) %
00000dd2 : 0fc0d517;   % 811: 	la a0,PlayerHP %
00000dd3 : a8050513;   % 811:  %
00000dd4 : 3a1010ef;   % 812: 	jal UpdateCollision %
00000dd5 : 0fc29517;   % 814: 	la a0,collisionRender %
00000dd6 : 5fc50513;   % 814:  %
00000dd7 : 000005b3;   % 815: 	mv a1,zero %
00000dd8 : 10c020ef;   % 816: 	jal SimplePrint # ShowCollisionMap %
00000dd9 : 00012083;   % 818: 	lw ra,0(sp) %
00000dda : 00410113;   % 819: 	addi sp,sp,4 %
00000ddb : 00008067;   % 821: 	ret %
00000ddc : fec10113;   % 825: 	addi sp,sp,-20 %
00000ddd : 00112023;   % 826: 	sw ra,0(sp) %
00000dde : 00812223;   % 827: 	sw s0,4(sp) %
00000ddf : 00912423;   % 828: 	sw s1,8(sp) %
00000de0 : 01212623;   % 829: 	sw s2,12(sp) %
00000de1 : 01312823;   % 830: 	sw s3,16(sp) %
00000de2 : c0102573;   % 835: 	csrr a0,3073 %
00000de3 : 00a00433;   % 836: 	mv s0,a0 %
00000de4 : 0fc0d497;   % 838: 	lw s1,LastGlblTime %
00000de5 : aa44a483;   % 838:  %
00000de6 : 40940933;   % 839: 	sub s2,s0,s1		# subtrai o novo tempo global pelo ultimo valor salvo, para definir quantos milissegundos passaram desde o ultimo frame %
00000de7 : 01200533;   % 841: 	mv a0,s2 %
00000de8 : 00100893;   % 842: 	li a7,1 %
00000de9 : 0fc0d517;   % 845: 	la a0,endl %
00000dea : af050513;   % 845:  %
00000deb : 00400893;   % 846: 	li a7,4 %
00000dec : 01000293;   % 849: 	li t0,16 %
00000ded : 0fc0d317;   % 850: 	lhu t1,FadeTimer %
00000dee : 9e635303;   % 850:  %
00000def : 0062c663;   % 851: 	bgt t1,t0,SkipMusic %
00000df0 : 00800533;   % 853: 	mv a0,s0 # novo valor de tempo global e enviado para a funcao de musica %
00000df1 : 821fe0ef;   % 854: 	jal MusicLoop %
00000df2 : 0fc0d517;   % 863: 	lw a0,SoundEffectAtual %
00000df3 : a8c52503;   % 863:  %
00000df4 : 00050e63;   % 864: 	beqz a0,SkipSound %
00000df5 : 0fc0d597;   % 866: 	lw a1,SoundDuration %
00000df6 : a7c5a583;   % 866:  %
00000df7 : 00058863;   % 867: 	beqz a1,SkipSound %
00000df8 : 0fc0d617;   % 869: 	lw a2,SoundInstrument %
00000df9 : a7862603;   % 869:  %
00000dfa : 89dfe0ef;   % 871: 	jal PlaySoundEffect %
00000dfb : 01400293;   % 874: 	li t0,20		# a cada 20 ms o frame avanca em 1, o que equivale a 50 fps %
00000dfc : f8594ce3;   % 875: 	blt s2,t0,ClockLoop	# enquanto nao avancar o frame o codigo fica nesse loop %
00000dfd : 0fc0d297;   % 876: 	sw s0,LastGlblTime,t0	# atualiza o novo valor de tempo global %
00000dfe : a482a023;   % 876:  %
00000dff : 0fc0d997;   % 878: 	lw s3,FrameCount %
00000e00 : a3c9a983;   % 878:  %
00000e01 : 00198993;   % 879: 	addi s3,s3,1 %
00000e02 : 0fc0d297;   % 880: 	sw s3,FrameCount,t0 	# avanca o contador de frames %
00000e03 : a332a823;   % 880:  %
00000e04 : 0fc0d517;   % 886: 	lhu a0,BossAnimDuration %
00000e05 : a7455503;   % 886:  %
00000e06 : 00100893;   % 887: 	li a7,1 %
00000e07 : 0fc0d517;   % 890: 	la a0,endl %
00000e08 : a7850513;   % 890:  %
00000e09 : 00400893;   % 891: 	li a7,4 %
00000e0a : 0fc0d517;   % 894: 	lhu a0,BossTimer %
00000e0b : a4055503;   % 894:  %
00000e0c : 00100893;   % 895: 	li a7,1 %
00000e0d : 0fc0d517;   % 898: 	la a0,endl %
00000e0e : a6050513;   % 898:  %
00000e0f : 00400893;   % 899: 	li a7,4 %
00000e10 : 0fc0d517;   % 902: 	lhu a0,BossAnimState %
00000e11 : a2c55503;   % 902:  %
00000e12 : 00100893;   % 903: 	li a7,1 %
00000e13 : 0fc0d517;   % 906: 	la a0,endl %
00000e14 : a4850513;   % 906:  %
00000e15 : 00400893;   % 907: 	li a7,4 %
00000e16 : 0fc0d517;   % 910: 	lhu a0,BossSprite %
00000e17 : a1855503;   % 910:  %
00000e18 : 00100893;   % 911: 	li a7,1 %
00000e19 : 0fc0d517;   % 914: 	la a0,endl %
00000e1a : a3050513;   % 914:  %
00000e1b : 00400893;   % 915: 	li a7,4 %
00000e1c : 0fc0d517;   % 918: 	lhu a0,BossOldAnim %
00000e1d : a0455503;   % 918:  %
00000e1e : 00100893;   % 919: 	li a7,1 %
00000e1f : 0fc0d517;   % 922: 	la a0,endl %
00000e20 : a1850513;   % 922:  %
00000e21 : 00400893;   % 923: 	li a7,4 %
00000e22 : 0fc0d517;   % 926: 	lhu a0,BossAnimCount %
00000e23 : 9f055503;   % 926:  %
00000e24 : 00100893;   % 927: 	li a7,1 %
00000e25 : 0fc0d517;   % 930: 	la a0,endl %
00000e26 : a0050513;   % 930:  %
00000e27 : 00400893;   % 931: 	li a7,4 %
00000e28 : 0fc0d517;   % 934: 	lhu a0,BossMaxFrame %
00000e29 : 9e055503;   % 934:  %
00000e2a : 00100893;   % 935: 	li a7,1 %
00000e2b : 0fc0d517;   % 938: 	la a0,endl %
00000e2c : 9e850513;   % 938:  %
00000e2d : 00400893;   % 939: 	li a7,4 %
00000e2e : 0fc0d517;   % 942: 	la a0,endl %
00000e2f : 9dc50513;   % 942:  %
00000e30 : 00400893;   % 943: 	li a7,4 %
00000e31 : 00012083;   % 946: 	lw ra,0(sp) %
00000e32 : 00412403;   % 947: 	lw s0,4(sp) %
00000e33 : 00812483;   % 948: 	lw s1,8(sp) %
00000e34 : 00c12903;   % 949: 	lw s2,12(sp) %
00000e35 : 01012983;   % 950: 	lw s3,16(sp) %
00000e36 : 01410113;   % 951: 	addi sp,sp,20	 %
00000e37 : 00008067;   % 953: 	ret			# depois de avancar o frame segue para o resto do codigo da main, basicamente definindo o framerae do jogo como 50 fps %
00000e38 : ffc10113;   % 957: 	addi sp,sp,-4 %
00000e39 : 00112023;   % 958: 	sw ra,0(sp) %
00000e3a : 00100613;   % 960: 	li a2,1 # PosY %
00000e3b : 01061613;   % 961: 	slli a2,a2,16 %
00000e3c : 00260613;   % 962: 	addi a2,a2,2 # PosX %
00000e3d : 00461613;   % 963: 	slli a2,a2,4 %
00000e3e : 01e00513;   % 964: 	li a0,30 # waddle dee %
00000e3f : 00100593;   % 965: 	li a1,1 %
00000e40 : 000006b3;   % 966: 	mv a3,zero %
00000e41 : 00000733;   % 967: 	mv a4,zero %
00000e42 : efcfc0ef;   % 968: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000e43 : 00700613;   % 970: 	li a2,7 # PosY %
00000e44 : 01061613;   % 971: 	slli a2,a2,16 %
00000e45 : 00860613;   % 972: 	addi a2,a2,8 # PosX %
00000e46 : 00461613;   % 973: 	slli a2,a2,4 %
00000e47 : 01f00513;   % 974: 	li a0,31 # hot head %
00000e48 : 00100593;   % 975: 	li a1,1 %
00000e49 : 000006b3;   % 976: 	mv a3,zero %
00000e4a : 00000733;   % 977: 	mv a4,zero %
00000e4b : ed8fc0ef;   % 978: 	jal BuildObject %
00000e4c : 00a00613;   % 980: 	li a2,10 # PosY %
00000e4d : 01061613;   % 981: 	slli a2,a2,16 %
00000e4e : 00360613;   % 982: 	addi a2,a2,3 # PosX %
00000e4f : 00461613;   % 983: 	slli a2,a2,4 %
00000e50 : 02000513;   % 984: 	li a0,32 # chilly %
00000e51 : 00100593;   % 985: 	li a1,1 %
00000e52 : 000006b3;   % 986: 	mv a3,zero %
00000e53 : 00000733;   % 987: 	mv a4,zero %
00000e54 : eb4fc0ef;   % 988: 	jal BuildObject %
00000e55 : 00012083;   % 990: 	lw ra,0(sp) %
00000e56 : 00410113;   % 991: 	addi sp,sp,4 %
00000e57 : 00008067;   % 993: 	ret %
00000e58 : ffc10113;   % 997: 	addi sp,sp,-4 %
00000e59 : 00112023;   % 998: 	sw ra,0(sp) %
00000e5a : 00600613;   % 1000: 	li a2,6 # PosY %
00000e5b : 01061613;   % 1001: 	slli a2,a2,16 %
00000e5c : 00660613;   % 1002: 	addi a2,a2,6 # PosX %
00000e5d : 00461613;   % 1003: 	slli a2,a2,4 %
00000e5e : 01f00513;   % 1004: 	li a0,31 %
00000e5f : 00100593;   % 1005: 	li a1,1 %
00000e60 : 000006b3;   % 1006: 	mv a3,zero %
00000e61 : 00000733;   % 1007: 	mv a4,zero %
00000e62 : e7cfc0ef;   % 1008: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000e63 : 01300613;   % 1010: 	li a2,19 # PosY %
00000e64 : 01061613;   % 1011: 	slli a2,a2,16 %
00000e65 : 00460613;   % 1012: 	addi a2,a2,4 # PosX %
00000e66 : 00461613;   % 1013: 	slli a2,a2,4 %
00000e67 : 01e00513;   % 1014: 	li a0,30 %
00000e68 : 00100593;   % 1015: 	li a1,1 %
00000e69 : 000006b3;   % 1016: 	mv a3,zero %
00000e6a : 00000733;   % 1017: 	mv a4,zero %
00000e6b : e58fc0ef;   % 1018: 	jal BuildObject %
00000e6c : 01300613;   % 1020: 	li a2,19 # PosY %
00000e6d : 01061613;   % 1021: 	slli a2,a2,16 %
00000e6e : 00e60613;   % 1022: 	addi a2,a2,14 # PosX %
00000e6f : 00461613;   % 1023: 	slli a2,a2,4 %
00000e70 : 01e00513;   % 1024: 	li a0,30 %
00000e71 : 00100593;   % 1025: 	li a1,1 %
00000e72 : 000006b3;   % 1026: 	mv a3,zero %
00000e73 : 00000733;   % 1027: 	mv a4,zero %
00000e74 : e34fc0ef;   % 1028: 	jal BuildObject %
00000e75 : 00012083;   % 1030: 	lw ra,0(sp) %
00000e76 : 00410113;   % 1031: 	addi sp,sp,4 %
00000e77 : 00008067;   % 1033: 	ret %
00000e78 : ffc10113;   % 1038: 	addi sp,sp,-4 %
00000e79 : 00112023;   % 1039: 	sw ra,0(sp) %
00000e7a : 11000613;   % 1041: 	li a2,272 # PosY %
00000e7b : 01061613;   % 1042: 	slli a2,a2,16 %
00000e7c : 0a060613;   % 1043: 	addi a2,a2,160 # PosX %
00000e7d : 01e00513;   % 1044: 	li a0,30  %
00000e7e : 00100593;   % 1045: 	li a1,1 %
00000e7f : 000006b3;   % 1046: 	mv a3,zero %
00000e80 : 00000733;   % 1047: 	mv a4,zero %
00000e81 : e00fc0ef;   % 1048: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000e82 : 09000613;   % 1050: 	li a2,144 # PosY %
00000e83 : 01061613;   % 1051: 	slli a2,a2,16 %
00000e84 : 19060613;   % 1052: 	addi a2,a2,400 # PosX %
00000e85 : 02000513;   % 1053: 	li a0,32 %
00000e86 : 00100593;   % 1054: 	li a1,1 %
00000e87 : 000006b3;   % 1055: 	mv a3,zero %
00000e88 : 00000733;   % 1056: 	mv a4,zero %
00000e89 : de0fc0ef;   % 1057: 	jal BuildObject %
00000e8a : 08000613;   % 1059: 	li a2,128 # PosY %
00000e8b : 01061613;   % 1060: 	slli a2,a2,16 %
00000e8c : 24060613;   % 1061: 	addi a2,a2,576 # PosX %
00000e8d : 01f00513;   % 1062: 	li a0,31  %
00000e8e : 00100593;   % 1063: 	li a1,1 %
00000e8f : 000006b3;   % 1064: 	mv a3,zero %
00000e90 : 00000733;   % 1065: 	mv a4,zero %
00000e91 : dc0fc0ef;   % 1066: 	jal BuildObject %
00000e92 : 09000613;   % 1068: 	li a2,144 # PosY %
00000e93 : 01061613;   % 1069: 	slli a2,a2,16 %
00000e94 : 2d060613;   % 1070: 	addi a2,a2,720 # PosX %
00000e95 : 02000513;   % 1071: 	li a0,32 %
00000e96 : 00100593;   % 1072: 	li a1,1 %
00000e97 : 000006b3;   % 1073: 	mv a3,zero %
00000e98 : 00000733;   % 1074: 	mv a4,zero %
00000e99 : da0fc0ef;   % 1075: 	jal BuildObject %
00000e9a : 06000613;   % 1077: 	li a2,96 # PosY %
00000e9b : 01061613;   % 1078: 	slli a2,a2,16 %
00000e9c : 3a060613;   % 1079: 	addi a2,a2,928 # PosX %
00000e9d : 01e00513;   % 1080: 	li a0,30 %
00000e9e : 00100593;   % 1081: 	li a1,1 %
00000e9f : 000006b3;   % 1082: 	mv a3,zero %
00000ea0 : 00000733;   % 1083: 	mv a4,zero %
00000ea1 : d80fc0ef;   % 1084: 	jal BuildObject %
00000ea2 : 00012083;   % 1086: 	lw ra,0(sp) %
00000ea3 : 00410113;   % 1087: 	addi sp,sp,4 %
00000ea4 : 00008067;   % 1089: 	ret %
00000ea5 : ffc10113;   % 1094: 	addi sp,sp,-4 %
00000ea6 : 00112023;   % 1095: 	sw ra,0(sp) %
00000ea7 : 1b000613;   % 1097: 	li a2,432 # PosY %
00000ea8 : 01061613;   % 1098: 	slli a2,a2,16 %
00000ea9 : 07060613;   % 1099: 	addi a2,a2,112 # PosX %
00000eaa : 02000513;   % 1100: 	li a0,32 %
00000eab : 00100593;   % 1101: 	li a1,1 %
00000eac : 000006b3;   % 1102: 	mv a3,zero %
00000ead : 00000733;   % 1103: 	mv a4,zero %
00000eae : d4cfc0ef;   % 1104: 	jal BuildObject %
00000eaf : 1f000613;   % 1106: 	li a2,496 # PosY %
00000eb0 : 01061613;   % 1107: 	slli a2,a2,16 %
00000eb1 : 0a060613;   % 1108: 	addi a2,a2,160 # PosX %
00000eb2 : 01e00513;   % 1109: 	li a0,30 %
00000eb3 : 00100593;   % 1110: 	li a1,1 %
00000eb4 : 000006b3;   % 1111: 	mv a3,zero %
00000eb5 : 00000733;   % 1112: 	mv a4,zero %
00000eb6 : d2cfc0ef;   % 1113: 	jal BuildObject %
00000eb7 : 13000613;   % 1115: 	li a2,304 # PosY %
00000eb8 : 01061613;   % 1116: 	slli a2,a2,16 %
00000eb9 : 06060613;   % 1117: 	addi a2,a2,96 # PosX %
00000eba : 01f00513;   % 1118: 	li a0,31 %
00000ebb : 00100593;   % 1119: 	li a1,1 %
00000ebc : 000006b3;   % 1120: 	mv a3,zero %
00000ebd : 00000733;   % 1121: 	mv a4,zero %
00000ebe : d0cfc0ef;   % 1122: 	jal BuildObject %
00000ebf : 0a000613;   % 1124: 	li a2,160 # PosY %
00000ec0 : 01061613;   % 1125: 	slli a2,a2,16 %
00000ec1 : 09060613;   % 1126: 	addi a2,a2,144 # PosX %
00000ec2 : 01f00513;   % 1127: 	li a0,31 %
00000ec3 : 00100593;   % 1128: 	li a1,1 %
00000ec4 : 000006b3;   % 1129: 	mv a3,zero %
00000ec5 : 00000733;   % 1130: 	mv a4,zero %
00000ec6 : cecfc0ef;   % 1131: 	jal BuildObject %
00000ec7 : 00012083;   % 1133: 	lw ra,0(sp) %
00000ec8 : 00410113;   % 1134: 	addi sp,sp,4 %
00000ec9 : 00008067;   % 1136: 	ret %
00000eca : ffc10113;   % 1141: 	addi sp,sp,-4 %
00000ecb : 00112023;   % 1142: 	sw ra,0(sp) %
00000ecc : 07000613;   % 1144: 	li a2,112 # PosY %
00000ecd : 01061613;   % 1145: 	slli a2,a2,16 %
00000ece : 13860613;   % 1146: 	addi a2,a2,312 # PosX %
00000ecf : 02000513;   % 1147: 	li a0,32 %
00000ed0 : 00100593;   % 1148: 	li a1,1 %
00000ed1 : 000006b3;   % 1149: 	mv a3,zero %
00000ed2 : 00000733;   % 1150: 	mv a4,zero %
00000ed3 : cb8fc0ef;   % 1151: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000ed4 : 07000613;   % 1153: 	li a2,112 # PosY %
00000ed5 : 01061613;   % 1154: 	slli a2,a2,16 %
00000ed6 : 13860613;   % 1155: 	addi a2,a2,312 # PosX %
00000ed7 : 02000513;   % 1156: 	li a0,32 %
00000ed8 : 00100593;   % 1157: 	li a1,1 %
00000ed9 : 000006b3;   % 1158: 	mv a3,zero %
00000eda : 00000733;   % 1159: 	mv a4,zero %
00000edb : c98fc0ef;   % 1160: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000edc : 08000613;   % 1162: 	li a2,128 # PosY %
00000edd : 01061613;   % 1163: 	slli a2,a2,16 %
00000ede : 23060613;   % 1164: 	addi a2,a2,560 # PosX %
00000edf : 01e00513;   % 1165: 	li a0,30 %
00000ee0 : 00100593;   % 1166: 	li a1,1 %
00000ee1 : 000006b3;   % 1167: 	mv a3,zero %
00000ee2 : 00000733;   % 1168: 	mv a4,zero %
00000ee3 : c78fc0ef;   % 1169: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000ee4 : 09000613;   % 1171: 	li a2,144 # PosY %
00000ee5 : 01061613;   % 1172: 	slli a2,a2,16 %
00000ee6 : 38860613;   % 1173: 	addi a2,a2,904 # PosX %
00000ee7 : 02000513;   % 1174: 	li a0,32 %
00000ee8 : 00100593;   % 1175: 	li a1,1 %
00000ee9 : 000006b3;   % 1176: 	mv a3,zero %
00000eea : 00000733;   % 1177: 	mv a4,zero %
00000eeb : c58fc0ef;   % 1178: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000eec : 04000613;   % 1180: 	li a2,64 # PosY %
00000eed : 01061613;   % 1181: 	slli a2,a2,16 %
00000eee : 38860613;   % 1182: 	addi a2,a2,904 # PosX %
00000eef : 02000513;   % 1183: 	li a0,32 %
00000ef0 : 00100593;   % 1184: 	li a1,1 %
00000ef1 : 000006b3;   % 1185: 	mv a3,zero %
00000ef2 : 00000733;   % 1186: 	mv a4,zero %
00000ef3 : c38fc0ef;   % 1187: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000ef4 : 07000613;   % 1189: 	li a2,112 # PosY %
00000ef5 : 01061613;   % 1190: 	slli a2,a2,16 %
00000ef6 : 31060613;   % 1191: 	addi a2,a2,784 # PosX %
00000ef7 : 01f00513;   % 1192: 	li a0,31 %
00000ef8 : 00100593;   % 1193: 	li a1,1 %
00000ef9 : 000006b3;   % 1194: 	mv a3,zero %
00000efa : 00000733;   % 1195: 	mv a4,zero %
00000efb : c18fc0ef;   % 1196: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000efc : 09000613;   % 1198: 	li a2,144 # PosY %
00000efd : 01061613;   % 1199: 	slli a2,a2,16 %
00000efe : 4d060613;   % 1200: 	addi a2,a2,1232 # PosX %
00000eff : 01e00513;   % 1201: 	li a0,30 %
00000f00 : 00100593;   % 1202: 	li a1,1 %
00000f01 : 000006b3;   % 1203: 	mv a3,zero %
00000f02 : 00000733;   % 1204: 	mv a4,zero %
00000f03 : bf8fc0ef;   % 1205: 	jal BuildObject # a0 = id do objeto, a1 = quantidade de objetos a adicionar, a2 = posicao de referencia (0xYYYYXXXX), a3 = direcao do objeto (0 = esq, 1 = dir), a4 = valor de apoio %
00000f04 : 00012083;   % 1207: 	lw ra,0(sp) %
00000f05 : 00410113;   % 1208: 	addi sp,sp,4 %
00000f06 : 00008067;   % 1210: 	ret %
00000f07 : 0fc0c417;   % 1214: 	lw s0,BitmapFrame %
00000f08 : 57442403;   % 1214:  %
00000f09 : 01445493;   % 1215: 	srli s1,s0,20 %
00000f0a : 0014f493;   % 1216: 	andi s1,s1,1 %
00000f0b : ff2002b7;   % 1218: 	li t0,0xff200604	# endereco que define qual frame esta sendo apresentado %
00000f0c : 60428293;   % 1218:  %
00000f0d : 0092a023;   % 1219: 	sw s1,0(t0)		# para visualizar o frame que acabou de ser desenhado %
00000f0e : 001002b7;   % 1221: 	li t0,0x00100000 %
00000f0f : 00028293;   % 1221:  %
00000f10 : 00544433;   % 1222: 	xor s0,s0,t0 %
00000f11 : 0fc0c297;   % 1223: 	sw s0,BitmapFrame,t0 %
00000f12 : 5482a623;   % 1223:  %
00000f13 : 00008067;   % 1225: 	ret %
00000f14 : ffc10113;   % 1229: 	addi sp,sp,-4 %
00000f15 : 00112023;   % 1230: 	sw ra,0(sp)			# pilha armazena apenas valor de retorno %
00000f16 : 0fc0c417;   % 1232: 	lw s0,LastKey			# s0, valor da ultima tecla apertada %
00000f17 : 5cc42403;   % 1232:  %
00000f18 : 0fc0c497;   % 1233: 	lhu s1,PlayerPosX		# s1, posicao X do jogador no mapa %
00000f19 : 56c4d483;   % 1233:  %
00000f1a : 0fc0c917;   % 1234: 	lhu s2,PlayerPosY		# s2, posicao Y do jogador no mapa %
00000f1b : 56695903;   % 1234:  %
00000f1c : 0fc0cb17;   % 1235: 	lhu s6,PlayerAnimState		# s6, valor de estado do jogador %
00000f1d : 56eb5b03;   % 1235:  %
00000f1e : 01600bb3;   % 1236: 	mv s7,s6			# s7, novo valor de estado do jogador %
00000f1f : 0fc0cc17;   % 1237: 	lhu s8,PlayerAnimTransit %
00000f20 : 56ec5c03;   % 1237:  %
00000f21 : 0fc0cc97;   % 1238: 	lw s9,PlayerLock %
00000f22 : 568cac83;   % 1238:  %
00000f23 : 0fc0cd17;   % 1239: 	lw s10,PlayerPowState %
00000f24 : 554d2d03;   % 1239:  %
00000f25 : 012002b3;   % 1241: 	mv t0,s2 %
00000f26 : 01029293;   % 1242: 	slli t0,t0,16 %
00000f27 : 009282b3;   % 1243: 	add t0,t0,s1 %
00000f28 : 0fc0c317;   % 1244: 	sw t0,OldPlayerPos,t1		# atualiza OldPlayerPos %
00000f29 : 52532823;   % 1244:  %
00000f2a : 07200293;   % 1246: 	li t0,'r' %
00000f2b : 06540063;   % 1247: 	beq s0,t0,CheckDropPower %
00000f2c : 00600293;   % 1249: 	li t0,6 %
00000f2d : 0a5b0263;   % 1250: 	beq s6,t0,ContinueStartAttEat %
00000f2e : 00700293;   % 1252: 	li t0,7 %
00000f2f : 0e5b0063;   % 1253: 	beq s6,t0,EndAttackEat %
00000f30 : 00800293;   % 1255: 	li t0,8 %
00000f31 : 145b0263;   % 1256: 	beq s6,t0,DoneAttack # se estiver para baixo ou engolindo um inimigo skipa para as verificacoes de movimentacao, verificado novamente antes de apertar 's' %
00000f32 : 00a00293;   % 1258: 	li t0,10 %
00000f33 : 0e5b0e63;   % 1259: 	beq s6,t0,EndAttackAir %
00000f34 : 00b00293;   % 1261: 	li t0,11 %
00000f35 : 105b0c63;   % 1262: 	beq s6,t0,EndAttackStar %
00000f36 : 100082b7;   % 1264: <2> li t0, 0x10008000	# carrega tp %
00000f37 : 00028293;   % 1264:  %
00000f38 : 00519863;   % 1264: <3> bne gp, t0, DE1CheckAtt	# Na DE1 gp = 0 ! Nao tem segmento .extern %
00000f39 : 06500293;   % 1266: 	li t0,'e' %
00000f3a : 02540463;   % 1267: 	beq s0,t0,AttackCheck		# se velocidade for positiva e 'd' esta apertado nao ha porque desacelerar %
00000f3b : 0140006f;   % 1268: 	j EndDE1CheckAtt %
00000f3c : 0fc0c297;   % 1271: 	la t0,OtherKeys %
00000f3d : 54028293;   % 1271:  %
00000f3e : 0002cf83;   % 1272: 	lbu t6,0(t0) %
00000f3f : 000f9a63;   % 1273: 	bnez t6,AttackCheck %
00000f40 : 00100293;   % 1276: 	li t0,1 %
00000f41 : 065b0a63;   % 1277: 	beq s6,t0,KeepAttackEat %
00000f42 : 1000006f;   % 1279: 	j HorizontalMove %
00000f43 : 0fc0006f;   % 1282: 	j HorizontalMove %
00000f44 : 000c9663;   % 1285: 	bne s9,zero,LockedStar # confere o locked, principalmente para evitar que o jogador solte o item da boca sem querer %
00000f45 : 00300293;   % 1286: 	li t0,3 # como o item na boca por si so nao muda o AnimState, comparacao precisa ser feita com o PowState %
00000f46 : 0c5d5063;   % 1287: 	bge s10,t0,AttackStar %
00000f47 : 00000293;   % 1290: 	li t0,0 %
00000f48 : 005b0c63;   % 1291: 	beq s6,t0,StartAttackEat %
00000f49 : 00100293;   % 1293: 	li t0,1 %
00000f4a : 025b0e63;   % 1294: 	beq s6,t0,AttackEat %
00000f4b : 00d00293;   % 1296: 	li t0,13 %
00000f4c : 085b5263;   % 1297: 	bge s6,t0,AttackAir %
00000f4d : 0d40006f;   % 1299: 	j DoneAttack %
00000f4e : 00100293;   % 1302: 	li t0,1 %
00000f4f : 0fc0c317;   % 1303: 	sw t0,PlayerLock,t1 %
00000f50 : 4a532823;   % 1303:  %
00000f51 : 00100293;   % 1305: 	li t0,1 %
00000f52 : 005d0e63;   % 1306: 	beq s10,t0,AttackEat # se estiver com a habilidade de fogo nao precisa da animacao de StartAttack %
00000f53 : 00a00c13;   % 1308: 	li s8,10 %
00000f54 : 0fc0c317;   % 1309: 	sh s8,PlayerAnimTransit,t1 ### caso estranho, acho que nem em todos eles pode mudar o registrador s, mas aqui precisa %
00000f55 : 49831d23;   % 1309:  %
00000f56 : 000c0663;   % 1312: 	beq s8,zero,AttackEat %
00000f57 : 00600b93;   % 1314: 	li s7,6 %
00000f58 : 0a80006f;   % 1315: 	j DoneAttack %
00000f59 : 01e00293;   % 1318: 	li t0,30 %
00000f5a : 0fc0c317;   % 1319: 	sh t0,PlayerAnimTransit,t1 %
00000f5b : 48531123;   % 1319:  %
00000f5c : 00100b93;   % 1321: 	li s7,1 %
00000f5d : 0940006f;   % 1322: 	j DoneAttack %
00000f5e : 00100b93;   % 1325: 	li s7,1 %
00000f5f : 09804663;   % 1326: 	bgt s8,zero,DoneAttack %
00000f60 : 00100293;   % 1328: 	li t0,1 %
00000f61 : 025d0063;   % 1329: 	beq s10,t0,EndAttFire # se estiver com a habilidade de fogo nao precisa da animacao de EndAttack %
00000f62 : 00700b93;   % 1331: 	li s7,7 %
00000f63 : 00a00293;   % 1332: 	li t0,10 %
00000f64 : 0fc0c317;   % 1333: 	sh t0,PlayerAnimTransit,t1 %
00000f65 : 44531d23;   % 1333:  %
00000f66 : 0700006f;   % 1334: 	j DoneAttack %
00000f67 : 00700b93;   % 1337: 	li s7,7 %
00000f68 : 07804463;   % 1338: 	bgt s8,zero,DoneAttack %
00000f69 : 0fc0c317;   % 1340: 	sw zero,PlayerLock,t1 %
00000f6a : 44032423;   % 1340:  %
00000f6b : 00000b93;   % 1342: 	li s7,0 %
00000f6c : 0580006f;   % 1343: 	j DoneAttack %
00000f6d : 01e00293;   % 1346: 	li t0,30 %
00000f6e : 0fc0c317;   % 1347: 	sh t0,PlayerAnimTransit,t1 %
00000f6f : 42531923;   % 1347:  %
00000f70 : 00a00b93;   % 1349: 	li s7,10 %
00000f71 : 0440006f;   % 1350: 	j DoneAttack %
00000f72 : 00a00b93;   % 1353: 	li s7,10 %
00000f73 : 03804e63;   % 1354: 	bgt s8,zero,DoneAttack %
00000f74 : 00000b93;   % 1356: 	li s7,0 %
00000f75 : 0340006f;   % 1357: 	j DoneAttack %
00000f76 : 01e00293;   % 1360: 	li t0,30 %
00000f77 : 0fc0c317;   % 1361: 	sh t0,PlayerAnimTransit,t1 %
00000f78 : 40531723;   % 1361:  %
00000f79 : 00b00b93;   % 1363: 	li s7,11 %
00000f7a : 0200006f;   % 1364: 	j DoneAttack %
00000f7b : 00b00b93;   % 1367: 	li s7,11 %
00000f7c : 01804c63;   % 1368: 	bgt s8,zero,DoneAttack %
00000f7d : 00000b93;   % 1370: 	li s7,0 %
00000f7e : 00000293;   % 1372: 	li t0,0 %
00000f7f : 0fc0c317;   % 1373: 	sw zero,PlayerPowState,t1 %
00000f80 : 3e032223;   % 1373:  %
00000f81 : 0040006f;   % 1374: 	j DoneAttack %
00000f82 : 0fc0ca17;   % 1380: 	lh s4,PlayerSpeedX		# s4, velocidade X do jogador em seu valor completo %
00000f83 : 3d0a1a03;   % 1380:  %
00000f84 : 0fc0c297;   % 1382: 	lhu t0,PlayerGndState	 %
00000f85 : 3cc2d283;   % 1382:  %
00000f86 : 0fc0c317;   % 1383: 	lw t1,playerSlowDeaccX %
00000f87 : 3fc32303;   % 1383:  %
00000f88 : 00028663;   % 1384: 	beq t0,zero,SetSlowDeaccX %
00000f89 : 0fc0c317;   % 1385: 	lw t1,playerDeaccX		# t1, velocidade de desaceleracao do jogador no eixo X  %
00000f8a : 3ec32303;   % 1385:  %
00000f8b : 0fc0c397;   % 1387: 	lw t2,playerAccX		# t2, velocidade de aceleracao do jogador no eixo X %
00000f8c : 3e03a383;   % 1387:  %
00000f8d : 0fa00e13;   % 1388: 	li t3,250		# t3, velocidade maxima do jogador no eixo X %
00000f8e : 05404263;   % 1391: 	bgt s4,zero,SlowRightToLeft	# se velocidade for positiva ou 0 vai para o proximo slow %
00000f8f : 020c9863;   % 1392: 	bne s9,zero,LockedL %
00000f90 : 100082b7;   % 1394: <2> li t0, 0x10008000	# carrega tp %
00000f91 : 00028293;   % 1394:  %
00000f92 : 00519863;   % 1394: <3> bne gp, t0, DE1CheckLeft	# Na DE1 gp = 0 ! Nao tem segmento .extern %
00000f93 : 06100293;   % 1396: 	li t0,'a' %
00000f94 : 06540663;   % 1397: 	beq s0,t0,MoveLeft		# se velocidade for negativa e 'a' esta apertado nao ha porque desacelerar %
00000f95 : 0140006f;   % 1398: 	j EndDE1CheckL %
00000f96 : 0fc0c297;   % 1401: 	la t0,MoveKeys %
00000f97 : 3d428293;   % 1401:  %
00000f98 : 0012cf83;   % 1402: 	lbu t6,1(t0) # a %
00000f99 : 040f9c63;   % 1403: 	bnez t6,MoveLeft %
00000f9a : 000a0a63;   % 1406: 	beq s4,zero,SlowRightToLeft	# se velocidade for zero ainda precisa conferir se 'd' esta sendo apertado %
00000f9b : 006a0a33;   % 1409: 	add s4,s4,t1 %
00000f9c : 07405863;   % 1410: 	ble s4,zero,DoneHorizontalMv %
00000f9d : 00000a33;   % 1411: 	mv s4,zero			# se a velocidade ficou positiva ao desacelerar precisa voltar para zero %
00000f9e : 0680006f;   % 1412: 	j DoneHorizontalMv %
00000f9f : 020c9863;   % 1415: 	bne s9,zero,LockedR %
00000fa0 : 100082b7;   % 1417: <2> li t0, 0x10008000	# carrega tp %
00000fa1 : 00028293;   % 1417:  %
00000fa2 : 00519863;   % 1417: <3> bne gp, t0, DE1CheckRight	# Na DE1 gp = 0 ! Nao tem segmento .extern %
00000fa3 : 06400293;   % 1419: 	li t0,'d' %
00000fa4 : 04540063;   % 1420: 	beq s0,t0,MoveRight		# se velocidade for positiva e 'd' esta apertado nao ha porque desacelerar %
00000fa5 : 0140006f;   % 1421: 	j EndDE1CheckR %
00000fa6 : 0fc0c297;   % 1424: 	la t0,MoveKeys %
00000fa7 : 39428293;   % 1424:  %
00000fa8 : 0032cf83;   % 1425: 	lbu t6,3(t0) %
00000fa9 : 020f9663;   % 1426: 	bnez t6,MoveRight %
00000faa : 020a0c63;   % 1430: 	beq s4,zero,DoneHorizontalMv	# se a velocidade for zero nesse ponto nao ha porque desacelerar o jogador %
00000fab : 406a0a33;   % 1433: 	sub s4,s4,t1 %
00000fac : 03404863;   % 1434: 	bgt s4,zero,DoneHorizontalMv %
00000fad : 00000a33;   % 1435: 	mv s4,zero			# se a velocidade ficou negativa ao desacelerar precisa voltar para zero %
00000fae : 0280006f;   % 1436: 	j DoneHorizontalMv		 %
00000faf : 407a0a33;   % 1439: 	sub s4,s4,t2			# aumenta velocidade para a esquerda %
00000fb0 : 414002b3;   % 1441: 	sub t0,zero,s4 %
00000fb1 : 005e5e63;   % 1442: 	ble t0,t3,DoneHorizontalMv %
00000fb2 : 41c00a33;   % 1443: 	sub s4,zero,t3			# velocidade se torna a velocidade maxima caso tenha a ultrapassado %
00000fb3 : 0140006f;   % 1444: 	j DoneHorizontalMv %
00000fb4 : 007a0a33;   % 1448: 	add s4,s4,t2			# aumenta velocidade para a direita %
00000fb5 : 014e5663;   % 1450: 	ble s4,t3,DoneHorizontalMv %
00000fb6 : 01c00a33;   % 1451: 	mv s4,t3			# velocidade se torna a velocidade maxima caso tenha a ultrapassado %
00000fb7 : 0040006f;   % 1452: 	j DoneHorizontalMv %
00000fb8 : 0fc0c297;   % 1455: 	sh s4,PlayerSpeedX,t0		# armazena a velocidade X completa do jogador (em centenas) %
00000fb9 : 2f429c23;   % 1455:  %
00000fba : 06400293;   % 1456: 	li t0,100 %
00000fbb : 025a4333;   % 1457: 	div t1,s4,t0			# divide a velocidade por 100 para obter o numero de pixels a se mover %
00000fbc : 006484b3;   % 1459: 	add s1,s1,t1			# adiciona a velocidade horizontal em pixels para a posicao do jogador %
00000fbd : 0fc0ca97;   % 1462: 	lh s5,PlayerSpeedY		# s5, velocidade X do jogador em seu valor completo %
00000fbe : 2e6a9a83;   % 1462:  %
00000fbf : 0fc0c317;   % 1463: 	lhu t1,PlayerGndState		# t1, variavel de estado do jogador %
00000fc0 : 2e035303;   % 1463:  %
00000fc1 : 01900393;   % 1464: 	li t2,25		# t2, velocidade de aceleracao da gravidade %
00000fc2 : 0c800e13;   % 1465: 	li t3,200	# t3, velocidade maxima de queda do jogador %
00000fc3 : 00d00293;   % 1469: 	li t0,13 %
00000fc4 : 005b4463;   % 1470: 	blt s6,t0,NotFlying %
00000fc5 : 06400e13;   % 1471: 	li t3,100 %
00000fc6 : 05901263;   % 1474: 	bne zero,s9,LockedJump  %
00000fc7 : 00900293;   % 1476: 	li t0,9 %
00000fc8 : 105b0663;   % 1477: 	beq s6,t0,CheckStartFly %
00000fc9 : 100082b7;   % 1480: <2> li t0, 0x10008000	# carrega tp %
00000fca : 00028293;   % 1480:  %
00000fcb : 00519c63;   % 1480: <3> bne gp, t0, DE1CheckUp	# Na DE1 gp = 0 ! Nao tem segmento .extern %
00000fcc : 07700293;   % 1482: 	li t0,'w' %
00000fcd : 10540463;   % 1483: 	beq s0,t0,MoveFly %
00000fce : 02000293;   % 1485: 	li t0,' '			 %
00000fcf : 14540263;   % 1486: 	beq s0,t0,MoveJump		# pulo unico %
00000fd0 : 01c0006f;   % 1488: 	j EndDE1CheckUp %
00000fd1 : 0fc0c297;   % 1491: 	la t0,MoveKeys %
00000fd2 : 2e828293;   % 1491:  %
00000fd3 : 0002cf83;   % 1492: 	lbu t6,0(t0) # w %
00000fd4 : 0e0f9663;   % 1493: 	bnez t6,MoveFly %
00000fd5 : 0052cf83;   % 1495: 	lbu t6,5(t0) # espaco %
00000fd6 : 120f9463;   % 1496: 	bnez t6,MoveJump %
00000fd7 : 12030c63;   % 1500: 	beq t1,zero,MoveFall		# se estado do jogador for 0 ele esta caindo %
00000fd8 : 00800293;   % 1502: 	li t0,8 %
00000fd9 : 045b0263;   % 1503: 	beq s6,t0,EndEatingDown %
00000fda : 00d00293;   % 1506: 	li t0,13 %
00000fdb : 025b0863;   % 1507: 	beq s6,t0,LockedD # se estiver com ar skipa para baixo %
00000fdc : 020c9663;   % 1509: 	bne s9,zero,LockedD %
00000fdd : 100082b7;   % 1511: <2> li t0, 0x10008000	# carrega tp %
00000fde : 00028293;   % 1511:  %
00000fdf : 00519863;   % 1511: <3> bne gp, t0, DE1CheckDown	# Na DE1 gp = 0 ! Nao tem segmento .extern %
00000fe0 : 07300293;   % 1513: 	li t0,'s' %
00000fe1 : 06540c63;   % 1514: 	beq s0,t0,MoveDown %
00000fe2 : 0140006f;   % 1516: 	j EndDE1CheckDown %
00000fe3 : 0fc0c297;   % 1519: 	la t0,MoveKeys %
00000fe4 : 2a028293;   % 1519:  %
00000fe5 : 0022cf83;   % 1520: 	lbu t6,2(t0) # s %
00000fe6 : 060f9263;   % 1521: 	bnez t6,MoveDown %
00000fe7 : 100ac463;   % 1525: 	blt s5,zero,DoneVerticalMv	# se o jogador estiver indo para cima o chao nao para ele (impede um snap que estava acontecendo) %
00000fe8 : 00000ab3;   % 1526: 	mv s5,zero 		 	# se o jogador nao estiver no ar ou tiver pulado, entao esta no chao e sua velocidade Y se torna zero %
00000fe9 : 1000006f;   % 1527: 	j DoneVerticalMv %
00000fea : fd8040e3;   % 1530: 	bgt s8,zero,BackEatingDown %
00000feb : 00000b93;   % 1532: 	li s7,0  %
00000fec : 0fc0c297;   % 1534: 	sw zero,PlayerLock,t0 # destrava o jogador %
00000fed : 2202ae23;   % 1534:  %
00000fee : 00300293;   % 1536: 	li t0,3 %
00000fef : 0e5d4463;   % 1537: 	blt s10,t0,DoneVerticalMv # se nao tiver com nenhum item na boca nao muda o PowState %
00000ff0 : ffdd0d13;   % 1539: 	addi s10,s10,-3 # basta subtrair 3 do PowState de item na boca para definir o novo PowState  %
00000ff1 : 0fc0c317;   % 1540: 	sw s10,PlayerPowState,t1 %
00000ff2 : 21a32e23;   % 1540:  %
00000ff3 : 0c0d0c63;   % 1542: 	beq s10,zero,DoneVerticalMv  %
00000ff4 : 00100b93;   % 1544: 	li s7,1 # para o caso de ganhar o poder de fogo %
00000ff5 : 01e00293;   % 1545: 	li t0,30 %
00000ff6 : 0fc0c317;   % 1546: 	sh t0,PlayerAnimTransit,t1 %
00000ff7 : 20531923;   % 1546:  %
00000ff8 : 00100293;   % 1547: 	li t0,1 %
00000ff9 : 0c5d0063;   % 1548: 	beq s10,t0,DoneVerticalMv # se estiver com a habilidade de fogo nao precisa da animacao de EndAttack %
00000ffa : 00600b93;   % 1550: 	li s7,6 # para o caso de ganhar o poder de gelo %
00000ffb : 00a00293;   % 1551: 	li t0,10 %
00000ffc : 0fc0c317;   % 1552: 	sh t0,PlayerAnimTransit,t1 %
00000ffd : 1e531d23;   % 1552:  %
00000ffe : 0ac0006f;   % 1554: 	j DoneVerticalMv %
00000fff : 00800b93;   % 1557: 	li s7,8  %
00001000 : 00100293;   % 1559: 	li t0,1 %
00001001 : 0fc0c397;   % 1560: 	sw t0,PlayerLock,t2 # trava a movimentacao do jogador enquanto estiver comendo, liberado ao final da animacao no PlayerAnimation %
00001002 : 1e53a423;   % 1560:  %
00001003 : 01c00313;   % 1562: 	li t1,28 # tempo para segurar a tecla de abaixar %
00001004 : 00300293;   % 1563: 	li t0,3 %
00001005 : 005d4663;   % 1564: 	blt s10,t0,CrouchHoldDelay %
00001006 : 02800313;   % 1565: 	li t1,40	# tempo da animacao normal de comer %
00001007 : 09804463;   % 1566: 	bgt s8,zero,DoneVerticalMv # se ja estiver em uma animacao de comer nao atualiza o delay %
00001008 : 0fc0c397;   % 1569: 	sh t1,PlayerAnimTransit,t2 %
00001009 : 1c639523;   % 1569:  %
0000100a : 07c0006f;   % 1571: 	j DoneVerticalMv %
0000100b : 00d00b93;   % 1575: 	li s7,13  %
0000100c : ee0c0ae3;   % 1576: 	beq s8,zero,ReturnCheckStFly  # se a animacao inflando ja acabou o sprite deve ser o de voo comum %
0000100d : 00900b93;   % 1578: 	li s7,9 %
0000100e : eedff06f;   % 1579: 	j ReturnCheckStFly %
0000100f : 0fc0c297;   % 1582: 	lw t0,PlayerDoor %
00001010 : 1cc2a283;   % 1582:  %
00001011 : 00028463;   % 1583: 	beqz t0,DontSetNextLevel %
00001012 : e35fe06f;   % 1584: 	j SetNextLevel %
00001013 : 00d00293;   % 1587: 	li t0,13 %
00001014 : 025b5463;   % 1588: 	bge s6,t0,BoostFly # se ja estiver voando continua com a animacao de voo (salva no CheckStartFly) %
00001015 : 00300293;   % 1590: 	li t0,3 %
00001016 : 025d5463;   % 1591: 	bge s10,t0,MoveJump # se estiver com item na boca nao ha o pulo infinito %
00001017 : 00900293;   % 1593: 	li t0,9 %
00001018 : 005b1463;   % 1594: 	bne s6,t0,StartMoveFly %
00001019 : 0140006f;   % 1597: 	j BoostFly %
0000101a : 00900b93;   % 1600: 	li s7,9 # transicao inflar %
0000101b : 01400293;   % 1602: 	li t0,20 %
0000101c : 0fc0c317;   % 1603: 	sh t0,PlayerAnimTransit,t1 %
0000101d : 16531d23;   % 1603:  %
0000101e : e3e00a93;   % 1606: 	li s5,-450 %
0000101f : 0280006f;   % 1607: 	j DoneVerticalMv %
00001020 : 00d00293;   % 1610: 	li t0,13 %
00001021 : fa5b5ce3;   % 1611: 	bge s6,t0,MoveFly %
00001022 : 00030663;   % 1613: 	beq t1,zero,MoveFall		# se estado do jogador for 0 ele esta caindo, impede que o jogador pule no ar apos usaro pulo unico %
00001023 : da800a93;   % 1615: 	li s5,-600 %
00001024 : 0140006f;   % 1616: 	j DoneVerticalMv %
00001025 : 007a8ab3;   % 1619: 	add s5,s5,t2			# adiciona a gravidade a velocidade do jogador %
00001026 : 015e5663;   % 1620: 	ble s5,t3,DoneVerticalMv %
00001027 : 01c00ab3;   % 1621: 	mv s5,t3			# velocidade se torna a velocidade maxima caso tenha a ultrapassado %
00001028 : 0040006f;   % 1622: 	j DoneVerticalMv %
00001029 : 0fc0c297;   % 1625: 	sh s5,PlayerSpeedY,t0		# armazena a velocidade Y completa do jogador (em centenas) %
0000102a : 13529b23;   % 1625:  %
0000102b : 0fc0c297;   % 1626: 	sh s7,PlayerAnimState,t0  	# # # # # # # armazena novo estado de animacao do jogador %
0000102c : 13729923;   % 1626:  %
0000102d : 06400293;   % 1627: 	li t0,100 %
0000102e : 025ac333;   % 1628: 	div t1,s5,t0			# divide a velocidade por 100 para obter o numero de pixels a se mover %
0000102f : ffc00293;   % 1630: 	li t0,-4 %
00001030 : 00535463;   % 1632: 	bge t1,t0,DontLimitJump		# como o jogador nao pode se mover mais de 4 pixels por frame para as colisoes funcionarem, a vel do pulo fica limitada a -4 %
00001031 : 00500333;   % 1633: 	mv t1,t0 %
00001032 : 00690933;   % 1636: 	add s2,s2,t1			# adiciona a velocidade vertical em pixels para a posicao do jogador %
00001033 : 0fc0c297;   % 1640: 	lh t0,GridSizeX %
00001034 : 0e029283;   % 1640:  %
00001035 : ff028293;   % 1641: 	addi t0,t0,-16			# t0, tamanho da linha de pixels - 48 - 16 # old: -16 %
00001036 : 3204c463;   % 1644: 	blt s1,zero,FimPlayerControls %
00001037 : 3292c263;   % 1645: 	bgt s1,t0,FimPlayerControls		# analisa se passou das bordas dos lados %
00001038 : 0fc0c297;   % 1647: 	lh t0,GridSizeY	 %
00001039 : 0ce29283;   % 1647:  %
0000103a : ff028293;   % 1648: 	addi t0,t0,-16			# t0, tamanho da coluna de pixels -16 %
0000103b : 30094a63;   % 1651: 	blt s2,zero,FimPlayerControls %
0000103c : 3122c863;   % 1652: 	bgt s2,t0,FimPlayerControls		# analisa se passou das bordas de cima e de baixo %
0000103d : 01091293;   % 1654: 	slli t0,s2,16 %
0000103e : 009282b3;   % 1655: 	add t0,t0,s1 %
0000103f : 0fc0c317;   % 1656: 	sw t0,TempPlayerPos,t1 %
00001040 : 0c532c23;   % 1656:  %
00001041 : 0040006f;   % 1658: 	j PlayerColCheck %
00001042 : 0fc0c297;   % 1662: 	sh s1,PlayerPosX,t0 %
00001043 : 0c929223;   % 1662:  %
00001044 : 0fc0c297;   % 1663: 	sh s2,PlayerPosY,t0		# armazena temporariamente a nova posicao do jogador, pois o mapa de colisao e feito com base nela, se alguma colisao afeta-la ela sera atualizada ao final %
00001045 : 0b229f23;   % 1663:  %
00001046 : 0fc0c517;   % 1665: 	la a0,PlayerHP # endereco que serve como "ID" do jogador %
00001047 : 0b050513;   % 1665:  %
00001048 : 1d0010ef;   % 1666: 	jal UpdateCollision %
00001049 : 0fc29997;   % 1668: 	la s3,collisionRender %
0000104a : c2c98993;   % 1668:  %
0000104b : 00c98993;   % 1669: 	addi s3,s3,12 %
0000104c : 009002b3;   % 1671: 	mv t0,s1 %
0000104d : 00f2f293;   % 1672: 	andi t0,t0,0xf %
0000104e : 005989b3;   % 1673: 	add s3,s3,t0			# adiciona o resto do offset X por 16 %
0000104f : 012002b3;   % 1675: 	mv t0,s2 %
00001050 : 00f2f293;   % 1676: 	andi t0,t0,0xf %
00001051 : 02000313;   % 1677: 	li t1,32 %
00001052 : 026282b3;   % 1678: 	mul t0,t0,t1			# adiciona as linhas com base no resto do offset Y por 16 %
00001053 : 005989b3;   % 1680: 	add s3,s3,t0			# s3, inicialmente como o endereco para o primeiro pixel do jogador no mapa de colisoes renderizado %
00001054 : 00000fb3;   % 1683: 	mv t6,zero # contador de objetos que podem atingir o jogador %
00001055 : 00500313;   % 1685: 	li t1,5 %
00001056 : 026b1063;   % 1686: 	bne s6,t1,SetupPlayerEnemies # s6 = PlayerAnimState passado, se estiver em qualquer animacao que nao seja de hit esta ok para verificar a colisao %
00001057 : 15804c63;   % 1688: 	bgt s8,zero,DonePlayerEnemyColCheck # s8 = PlayerAnimTransit, se estiver com AnimState 5 e Transit > 0 ainda esta na animacao de knockback %
00001058 : 0fc0cf17;   % 1691: 	sh zero,PlayerAnimState,t5  %
00001059 : 060f1f23;   % 1691:  %
0000105a : 14c0006f;   % 1693: 	j DonePlayerEnemyColCheck # pode skipar para evitar outros hits, alem de que vai estar invencivel %
0000105b : 001f8f93;   % 1695: 	addi t6,t6,1 %
0000105c : 00500313;   % 1696: 	li t1,5 %
0000105d : 15f30063;   % 1697: 	beq t1,t6,DonePlayerEnemyColCheck %
0000105e : 0fc0c317;   % 1700: 	lw t1,PlayerIFrames %
0000105f : 08c32303;   % 1700:  %
00001060 : 12604a63;   % 1701: 	bgt t1,zero,DonePlayerEnemyColCheck # se ainda estiver com frames de invencibilidade skipa a colisao com os inimigos %
00001061 : 013002b3;   % 1703: 	mv t0,s3 %
00001062 : 04200f13;   % 1704: 	li t5,66 # pixel 2,2 (iniciando em 0,0) %
00001063 : 00000e33;   % 1706: 	mv t3,zero %
00001064 : 00400e93;   % 1707: 	li t4,4				# contador de pixels a analisar %
00001065 : 05500393;   % 1709: 	li t2,85 %
00001066 : 020f8463;   % 1710: 	beq t6,zero,PlayerEnemies %
00001067 : 00100313;   % 1711: 	li t1,1 %
00001068 : 00400393;   % 1712: 	li t2,4 %
00001069 : 006f8e63;   % 1713: 	beq t6,t1,PlayerEnemies %
0000106a : 00200313;   % 1714: 	li t1,2 %
0000106b : 04800393;   % 1715: 	li t2,72 %
0000106c : 006f8863;   % 1716: 	beq t6,t1,PlayerEnemies %
0000106d : 00300313;   % 1717: 	li t1,3 %
0000106e : 0ac00393;   % 1718: 	li t2,172 %
0000106f : 006f8263;   % 1719: 	beq t6,t1,PlayerEnemies %
00001070 : 01e282b3;   % 1723: 	add t0,t0,t5 %
00001071 : 0002c303;   % 1724: 	lbu t1,0(t0) %
00001072 : 02730863;   % 1726: 	beq t1,t2,PlayerHit %
00001073 : 001e0e13;   % 1728: 	addi t3,t3,1 %
00001074 : f9de0ee3;   % 1729: 	beq t3,t4,NextDangerCheck %
00001075 : 00b00f13;   % 1731: 	li t5,11 # pixel 13,2 %
00001076 : 00100313;   % 1732: 	li t1,1 %
00001077 : ffc302e3;   % 1733: 	beq t1,t3,PlayerEnemies %
00001078 : 15500f13;   % 1734: 	li t5,341 # pixel 2,13 %
00001079 : 00200313;   % 1735: 	li t1,2 %
0000107a : fdc30ce3;   % 1736: 	beq t1,t3,PlayerEnemies %
0000107b : 00b00f13;   % 1737: 	li t5,11 # pixel 13,13 %
0000107c : 00300313;   % 1738: 	li t1,3 %
0000107d : fdc306e3;   % 1739: 	beq t1,t3,PlayerEnemies %
0000107e : 001e7313;   % 1742: 	andi t1,t3,1 # se o contador de pixels for impar = hit pela direita = jogador vira a direita %
0000107f : 0fc0cf17;   % 1743: 	sw t1,PlayerLastDir,t5 %
00001080 : 026f2623;   % 1743:  %
00001081 : 0fc0c317;   % 1745: 	lw t1,playerKnockbackX  %
00001082 : 01432303;   % 1745:  %
00001083 : 0fc0cf17;   % 1746: 	lw t5,PlayerLastDir %
00001084 : 01cf2f03;   % 1746:  %
00001085 : 000f0463;   % 1747: 	beq t5,zero,GotKnockback %
00001086 : 40600333;   % 1748: 	sub t1,zero,t1 %
00001087 : 0fc0c297;   % 1750: 	sh t1,PlayerSpeedX,t0 # define manualmente a velocidade do jogador como alem da maxima na direcao oposta que ele esta olhando para efeito de knockback %
00001088 : fa629e23;   % 1750:  %
00001089 : 0fc0c317;   % 1752: 	lw t1,playerKnockbackY %
0000108a : ff832303;   % 1752:  %
0000108b : 0fc0c297;   % 1753: 	sh t1,PlayerSpeedY,t0 %
0000108c : fa629723;   % 1753:  %
0000108d : 01900313;   % 1755: 	li t1,25 # tempo da animacao de hit %
0000108e : 0fc0cf17;   % 1756: 	sh t1,PlayerAnimTransit,t5 %
0000108f : fa6f1923;   % 1756:  %
00001090 : 06400313;   % 1758: 	li t1,100 # tempo do jogador invencivel %
00001091 : 0fc0cf17;   % 1759: 	sw t1,PlayerIFrames,t5 %
00001092 : fc6f2023;   % 1759:  %
00001093 : 00100313;   % 1761: 	li t1,1 %
00001094 : 0fc0cf17;   % 1762: 	sw t1,PlayerLock,t5 %
00001095 : f86f2e23;   % 1762:  %
00001096 : 00400313;   % 1764: 	li t1,4 # animacao de hit voando %
00001097 : 00d00f13;   % 1765: 	li t5,13 %
00001098 : 01eb0463;   % 1766: 	beq s6,t5,DefPlayerFlyHit  %
00001099 : 00500313;   % 1767: 	li t1,5 # animacao de hit comum %
0000109a : 0fc0cf17;   % 1769: 	sh t1,PlayerAnimState,t5 # caso bem especifico em que a animacao do jogador e setada apos as verificacoes de movimento e de ataque %
0000109b : f66f1b23;   % 1769:  %
0000109c : 0fc0c317;   % 1771: 	lh t1,PlayerHP %
0000109d : f5831303;   % 1771:  %
0000109e : fff30313;   % 1772: 	addi t1,t1,-1 %
0000109f : 0fc0c297;   % 1773: 	sh t1,PlayerHP,t0 %
000010a0 : f4629623;   % 1773:  %
000010a1 : 00030863;   % 1775: 	beqz t1,PlayerDeath %
000010a2 : 00100313;   % 1777: 	li t1,1 %
000010a3 : 00200313;   % 1779: 	li t1,2 %
000010a4 : 0240006f;   % 1782: 	j DonePlayerEnemyColCheck %
000010a5 : 0fc0c297;   % 1785: 	lh t0,PlayerLives %
000010a6 : f3629283;   % 1785:  %
000010a7 : fff28293;   % 1786: 	addi t0,t0,-1 %
000010a8 : 0fc0c317;   % 1787: 	sh t0,PlayerLives,t1 %
000010a9 : f2531523;   % 1787:  %
000010aa : 00029463;   % 1789: 	bnez t0,SimpleDeath %
000010ab : c29fe06f;   % 1790: 	j LoadTitle %
000010ac : c8dfe06f;   % 1792: 	j LoadHub # ao morrer simplesmente volta para o hub %
000010ad : 013002b3;   % 1798: 	mv t0,s3 %
000010ae : 00700393;   % 1799: 	li t2,7 # vermelho %
000010af : 00000e33;   % 1800: 	mv t3,zero %
000010b0 : 00400e93;   % 1801: 	li t4,4				# contador de pixels a analisar %
000010b1 : 0002c303;   % 1803: 	lbu t1,0(t0) %
000010b2 : 00731663;   % 1804: 	bne t1,t2,PlayerDontSnapDown	 %
000010b3 : 1c0000ef;   % 1806: 	jal SnapDown			 %
000010b4 : ff5ff06f;   % 1807: 	j PlayerCeiling			# repete enquanto colisao acontece %
000010b5 : 00528293;   % 1809: 	addi t0,t0,5			# avanca 5 pixels na linha %
000010b6 : 001e0e13;   % 1810: 	addi t3,t3,1 %
000010b7 : ffde44e3;   % 1811: 	blt t3,t4,PlayerCeiling %
000010b8 : 013002b3;   % 1815: 	mv t0,s3 %
000010b9 : 0c000393;   % 1816: 	li t2,192 # azul %
000010ba : 00000e33;   % 1817: 	mv t3,zero %
000010bb : 00400e93;   % 1818: 	li t4,4				# contador de pixels a analisar %
000010bc : 0002c303;   % 1820: 	lbu t1,0(t0) %
000010bd : 00731663;   % 1821: 	bne t1,t2,PlayerDontSnapRight	 %
000010be : 1b4000ef;   % 1822: 	jal SnapRight %
000010bf : ff5ff06f;   % 1823: 	j PlayerLeftWall		# repete enquanto colisao acontece %
000010c0 : 0a028293;   % 1825: 	addi t0,t0,160			# avanca 5 linhas no mapa de colisao %
000010c1 : 001e0e13;   % 1826: 	addi t3,t3,1 %
000010c2 : ffde44e3;   % 1827: 	blt t3,t4,PlayerLeftWall %
000010c3 : 013002b3;   % 1831: 	mv t0,s3 %
000010c4 : 0c000393;   % 1832: 	li t2,192 # azul %
000010c5 : 05800f13;   % 1833: 	li t5,88 # whispy %
000010c6 : 00000e33;   % 1834: 	mv t3,zero %
000010c7 : 00400e93;   % 1835: 	li t4,4				# contador de pixels a analisar %
000010c8 : 00f2c303;   % 1837: 	lbu t1,15(t0) %
000010c9 : 00731663;   % 1838: 	bne t1,t2,PlayerDontSnapLeft	 %
000010ca : 174000ef;   % 1839: 	jal SnapLeft %
000010cb : ff5ff06f;   % 1840: 	j PlayerRightWall		# repete enquanto colisao acontece %
000010cc : 01e31663;   % 1842: 	bne t1,t5,PlayerDontSnapLeft2	 %
000010cd : 168000ef;   % 1843: 	jal SnapLeft %
000010ce : fe9ff06f;   % 1844: 	j PlayerRightWall		# repete enquanto colisao acontece %
000010cf : 0a028293;   % 1846: 	addi t0,t0,160			# avanca 5 linhas no mapa de colisao %
000010d0 : 001e0e13;   % 1847: 	addi t3,t3,1 %
000010d1 : fdde4ee3;   % 1848: 	blt t3,t4,PlayerRightWall %
000010d2 : 0fc0cf17;   % 1852: 	sh zero,PlayerGndState,t5	# determina que jogador esta no ar %
000010d3 : e80f1a23;   % 1852:  %
000010d4 : 0fc0cf17;   % 1853: 	sw zero,PlayerDoor,t5		# determina que jogador nao esta na porta %
000010d5 : ea0f2c23;   % 1853:  %
000010d6 : 013002b3;   % 1855: 	mv t0,s3 %
000010d7 : 1e000313;   % 1856: 	li t1,480 # 15 linhas do sprite x 32 pixels da renderizacao da colisao %
000010d8 : 006282b3;   % 1857: 	add t0,t0,t1  %
000010d9 : 03800393;   % 1858: 	li t2,56 # verde %
000010da : 00000e33;   % 1859: 	mv t3,zero %
000010db : 00400e93;   % 1860: 	li t4,4				# contador de pixels a analisar %
000010dc : 0002c303;   % 1862: 	lbu t1,0(t0) %
000010dd : 0202cf03;   % 1863: 	lbu t5,32(t0) %
000010de : 007f1a63;   % 1864: 	bne t5,t2,DontSetGroundSt	# analisa pixels 1, 6, 11 e 16 da primeira linha abaixo do jogador %
000010df : 00100f93;   % 1865: 	li t6,1 %
000010e0 : 0fc0cf17;   % 1866: 	sh t6,PlayerGndState,t5		# se algum dos pixels logo abaixo do jogador forem de chao ele passa a estar no estado "no chao" %
000010e1 : e5ff1e23;   % 1866:  %
000010e2 : 0180006f;   % 1867: 	j DontSetDoorSt %
000010e3 : 06800f93;   % 1869: 	li t6,104 %
000010e4 : 01ff1863;   % 1870: 	bne t5,t6,DontSetDoorSt		# analisa pixels 1, 6, 11 e 16 da primeira linha abaixo do jogador %
000010e5 : 00100f93;   % 1871: 	li t6,1 %
000010e6 : 0fc0cf17;   % 1872: 	sw t6,PlayerDoor,t5 %
000010e7 : e7ff2823;   % 1872:  %
000010e8 : 00731663;   % 1874: 	bne t1,t2,PlayerDontSnapUp		# analisa pixels 1, 6, 11 e 16 da ultima linha do jogador %
000010e9 : 0d8000ef;   % 1875: 	jal SnapUp %
000010ea : fc9ff06f;   % 1876: 	j PlayerFloor			# repete enquanto colisao acontece %
000010eb : 00528293;   % 1878: 	addi t0,t0,5			# avanca 5 pixels na linha %
000010ec : 001e0e13;   % 1879: 	addi t3,t3,1 %
000010ed : fbde4ee3;   % 1880: 	blt t3,t4,PlayerFloor %
000010ee : 0fc0c297;   % 1883: 	sh s1,PlayerPosX,t0		# armazena novo X do jogador %
000010ef : e0929a23;   % 1883:  %
000010f0 : 0fc0c297;   % 1884: 	sh s2,PlayerPosY,t0		# armazena novo Y do jogador %
000010f1 : e1229723;   % 1884:  %
000010f2 : 0fc0c317;   % 1888: 	lw t1,OffsetX	 %
000010f3 : df432303;   % 1888:  %
000010f4 : 0fc0c297;   % 1889: 	sw t1,OldOffset,t0		# atualiza OldOffset %
000010f5 : de62a823;   % 1889:  %
000010f6 : 07c00293;   % 1891: 	li t0,124 #old: 152		# precisa parar sprite no pixel 128 (contando de 0) [(272/2)-8] # old: 152 do bitmap (contando de 0) [(320/2)-8] %
000010f7 : 0254d863;   % 1892: 	bge s1,t0,ChangeOffsetX		# se e necessario mover a tela atualiza o offset %
000010f8 : 00000333;   % 1893: 	mv t1,zero %
000010f9 : 0fc0c397;   % 1894: 	sh t1,OffsetX,t2		# armazena novo offset X %
000010fa : dc639c23;   % 1894:  %
000010fb : 07000293;   % 1897: 	li t0,112			# precisa parar sprite no pixel 108 do bitmap (contando de 0) %
000010fc : 04595a63;   % 1898: 	bge s2,t0,ChangeOffsetY		# se e necessario mover a tela atualiza o offset %
000010fd : 00000333;   % 1899: 	mv t1,zero %
000010fe : 0fc0c397;   % 1900: 	sh t1,OffsetY,t2		# armazena novo offset X %
000010ff : dc639323;   % 1900:  %
00001100 : 00012083;   % 1904: 	lw ra,0(sp) %
00001101 : 00410113;   % 1905: 	addi sp,sp,4			# recupera endereco de retorno da pilha %
00001102 : 00008067;   % 1907:   	ret %
00001103 : 0fc0c297;   % 1911: 	lh t0,GridSizeX			# tamanho X do mapa %
00001104 : da029283;   % 1911:  %
00001105 : f7428293;   % 1913: 	addi t0,t0,-140 #old: -168	# pixel mais a direita do mapa que muda o offset %
00001106 : 0092cc63;   % 1914: 	bgt s1,t0,MaxOffsetX		# se o jogador estiver no fim da tela, o offset sempre sera o maior possivel %
00001107 : 07c00313;   % 1916: 	li t1,124 #old: 152				 %
00001108 : 40648333;   % 1917: 	sub t1,s1,t1			# offsetX = posicao real do jogador - 128 #old: 152 %
00001109 : 0fc0c397;   % 1919: 	sh t1,OffsetX,t2		# armazena novo offset X %
0000110a : d8639c23;   % 1919:  %
0000110b : fc1ff06f;   % 1921: 	j FimChangeOffsetX %
0000110c : 07c00313;   % 1924: 	li t1,124 #old: 152 %
0000110d : 406282b3;   % 1925: 	sub t0,t0,t1			# em t0 esta o valor maximo de X que altera o offset, entao e s� subtrair metade da tela e 8 pixels do sprite %
0000110e : 0fc0c397;   % 1927: 	sh t0,OffsetX,t2		# armazena novo offset X como o maior valor possivel  %
0000110f : d8539223;   % 1927:  %
00001110 : fadff06f;   % 1929: 	j FimChangeOffsetX %
00001111 : 0fc0c297;   % 1932: 	lh t0,GridSizeY			# tamanho Y do mapa %
00001112 : d6a29283;   % 1932:  %
00001113 : f8028293;   % 1934: 	addi t0,t0,-128			# pixel mais baixo do mapa que muda o offset %
00001114 : 0122cc63;   % 1935: 	bgt s2,t0,MaxOffsetY %
00001115 : 07000313;   % 1937: 	li t1,112 %
00001116 : 40690333;   % 1938: 	sub t1,s2,t1			# offsetY = posicao real do jogador - 112 %
00001117 : 0fc0c397;   % 1940: 	sh t1,OffsetY,t2		# armazena novo offset Y %
00001118 : d6639123;   % 1940:  %
00001119 : f9dff06f;   % 1942: 	j FimChangeOffsetY %
0000111a : 07000313;   % 1945: 	li t1,112 %
0000111b : 406282b3;   % 1946: 	sub t0,t0,t1			# em t0 esta o valor maximo de Y que altera o offset, entao e so subtrair metade da tela e 8 pixels do sprite %
0000111c : 0fc0c397;   % 1948: 	sh t0,OffsetY,t2		# armazena novo offset Y como o maior valor possivel  %
0000111d : d4539723;   % 1948:  %
0000111e : f89ff06f;   % 1950: 	j FimChangeOffsetY %
0000111f : fff90913;   % 1954: 	addi s2,s2,-1 %
00001120 : fe098993;   % 1955: 	addi s3,s3,-32 %
00001121 : fe028293;   % 1956: 	addi t0,t0,-32 %
00001122 : 00008067;   % 1957: 	ret			 %
00001123 : 00190913;   % 1959: 	addi s2,s2,1	 %
00001124 : 02098993;   % 1960: 	addi s3,s3,32 %
00001125 : 02028293;   % 1961: 	addi t0,t0,32 %
00001126 : 00008067;   % 1962: 	ret		 %
00001127 : fff48493;   % 1964: 	addi s1,s1,-1 %
00001128 : fff98993;   % 1965: 	addi s3,s3,-1 %
00001129 : fff28293;   % 1966: 	addi t0,t0,-1 %
0000112a : 00008067;   % 1967: 	ret		 %
0000112b : 00148493;   % 1969: 	addi s1,s1,1 %
0000112c : 00198993;   % 1970: 	addi s3,s3,1 %
0000112d : 00128293;   % 1971: 	addi t0,t0,1 %
0000112e : 00008067;   % 1972: 	ret %
0000112f : ffc10113;   % 1976: 	addi sp,sp,-4 %
00001130 : 00112023;   % 1978: 	sw ra,0(sp)			# pilha armazena apenas valor de retorno %
00001131 : 0fc0c417;   % 1980: 	lw s0,PlayerLastDir		# se estiver virado para a esquerda s0 = 0, para a direita s0 = 1 %
00001132 : d6442403;   % 1980:  %
00001133 : 0fc0ce17;   % 1982: 	lhu t3,PlayerAnimTransit %
00001134 : d1ee5e03;   % 1982:  %
00001135 : 01c002b3;   % 1984: 	mv t0,t3 %
00001136 : 00028863;   % 1985: 	beq t0,zero,SkipSubTransit %
00001137 : fff28293;   % 1986: 	addi t0,t0,-1 %
00001138 : 0fc0c317;   % 1987: 	sh t0,PlayerAnimTransit,t1 %
00001139 : d0531523;   % 1987:  %
0000113a : 0fc0c297;   % 1990: 	lw t0,PlayerObjDelay  %
0000113b : d182a283;   % 1990:  %
0000113c : 00028863;   % 1991: 	beq t0,zero,SkipSubDelay %
0000113d : fff28293;   % 1992: 	addi t0,t0,-1 %
0000113e : 0fc0c317;   % 1993: 	sw t0,PlayerObjDelay,t1 %
0000113f : d0532423;   % 1993:  %
00001140 : 0fc0c297;   % 1996: 	lw t0,PlayerIFrames  %
00001141 : d042a283;   % 1996:  %
00001142 : 00028863;   % 1997: 	beq t0,zero,SkipSubIFrames %
00001143 : fff28293;   % 1998: 	addi t0,t0,-1 %
00001144 : 0fc0c317;   % 1999: 	sw t0,PlayerIFrames,t1 %
00001145 : ce532a23;   % 1999:  %
00001146 : 0fc0cc17;   % 2002: 	lhu s8,PlayerAnimState %
00001147 : cc6c5c03;   % 2002:  %
00001148 : 0fc0cc97;   % 2003: 	lhu s9,PlayerPowState %
00001149 : cc0cdc83;   % 2003:  %
0000114a : 05c04663;   % 2005: 	bgt t3,zero,DefTransition %
0000114b : 00400293;   % 2007: 	li t0,4 # se acabar o tempo de transicao (hit voando), volta o jogador ao estado de voando %
0000114c : 005c1863;   % 2008: 	bne s8,t0,NotFlyingHitToFly %
0000114d : 00d00c13;   % 2009: 	li s8,13 %
0000114e : 0fc0c297;   % 2010: 	sh s8,PlayerAnimState,t0 %
0000114f : cb829323;   % 2010:  %
00001150 : 00c00293;   % 2013: 	li t0,12 %
00001151 : 005c1e63;   % 2014: 	bne s8,t0,DontEndEaten %
00001152 : 0fc0c297;   % 2015: 	sw zero,PlayerLock,t0 # zera o Lock quando termina a animacao %
00001153 : ca02a223;   % 2015:  %
00001154 : 00000c33;   % 2016: 	mv s8,zero %
00001155 : 0fc0c297;   % 2017: 	sh s8,PlayerAnimState,t0  # define animacao como BigIdle, pois como PowState esta maior que 3, o jogador ficara com item na boca %
00001156 : c9829523;   % 2017:  %
00001157 : 0ec0006f;   % 2019: 	j EndDefFireIce  %
00001158 : 0fc0c297;   % 2022: 	lhu t0,PlayerGndState		# analisa se o jogador esta no chao ou no ar %
00001159 : c7c2d283;   % 2022:  %
0000115a : 16028263;   % 2023: 	beq t0,zero,DefineAnimVert %
0000115b : 00100313;   % 2024: 	li t1,1 %
0000115c : 0e628863;   % 2025: 	beq t0,t1,DefineAnimHorz %
0000115d : 00c00293;   % 2029: 	li t0,12 %
0000115e : 01700493;   % 2030: 	li s1,23 %
0000115f : 185c0863;   % 2031: 	beq s8,t0,DefinedAnim # define animacao de terminar de engolir %
00001160 : 00400293;   % 2033: 	li t0,4 %
00001161 : 01600493;   % 2034: 	li s1,22 %
00001162 : 185c0263;   % 2035: 	beq s8,t0,DefinedAnim # verifica se esta sendo atingido com ar %
00001163 : 00500293;   % 2037: 	li t0,5 %
00001164 : 045c0663;   % 2038: 	beq s8,t0,DefHitState # verifica se esta sendo atingido vazio %
00001165 : 00800293;   % 2040: 	li t0,8 %
00001166 : 045c0c63;   % 2041: 	beq s8,t0,DefDownAnims # animacoes de agachar %
00001167 : 00100293;   % 2043: 	li t0,1 %
00001168 : 065c8263;   % 2044: 	beq s9,t0,DefFireAnim %
00001169 : 00200293;   % 2045: 	li t0,2 %
0000116a : 065c8663;   % 2046: 	beq s9,t0,DefIceAnim %
0000116b : 00300293;   % 2047: 	li t0,3 %
0000116c : 085cd663;   % 2048: 	bge s9,t0,DefStarAnim %
0000116d : 00100293;   % 2050: 	li t0,1 %
0000116e : 00b00493;   % 2051: 	li s1,11 %
0000116f : 145c0863;   % 2052: 	beq s8,t0,DefinedAnim %
00001170 : 00600293;   % 2054: 	li t0,6 %
00001171 : 00a00493;   % 2055: 	li s1,10 %
00001172 : 145c0263;   % 2056: 	beq s8,t0,DefinedAnim %
00001173 : 00700293;   % 2058: 	li t0,7 %
00001174 : 00c00493;   % 2059: 	li s1,12 %
00001175 : 125c0c63;   % 2060: 	beq s8,t0,DefinedAnim %
00001176 : 0700006f;   % 2062: 	j EndDefFireIce %
00001177 : 01600493;   % 2066: 	li s1,22 %
00001178 : 00300293;   % 2067: 	li t0,3 %
00001179 : 125cd463;   % 2068: 	bge s9,t0,DefinedAnim %
0000117a : 01500493;   % 2070: 	li s1,21 %
0000117b : 1200006f;   % 2071: 	j DefinedAnim %
0000117c : 00300293;   % 2074: 	li t0,3 %
0000117d : 01300493;   % 2075: 	li s1,19 %
0000117e : 105cca63;   % 2076: 	blt s9,t0,DefinedAnim %
0000117f : 01400493;   % 2078: 	li s1,20 %
00001180 : 10c0006f;   % 2079: 	j DefinedAnim %
00001181 : 00100293;   % 2082: 	li t0,1 %
00001182 : 00e00493;   % 2083: 	li s1,14 %
00001183 : 105c0063;   % 2084: 	beq s8,t0,DefinedAnim %
00001184 : 0380006f;   % 2086: 	j EndDefFireIce %
00001185 : 00600293;   % 2089: 	li t0,6 %
00001186 : 00f00493;   % 2090: 	li s1,15 %
00001187 : 0e5c0863;   % 2091: 	beq s8,t0,DefinedAnim %
00001188 : 00100293;   % 2093: 	li t0,1 %
00001189 : 01000493;   % 2094: 	li s1,16 %
0000118a : 0e5c0263;   % 2095: 	beq s8,t0,DefinedAnim %
0000118b : 00700293;   % 2097: 	li t0,7 %
0000118c : 01100493;   % 2098: 	li s1,17 %
0000118d : 0c5c0c63;   % 2099: 	beq s8,t0,DefinedAnim %
0000118e : 0100006f;   % 2101: 	j EndDefFireIce %
0000118f : 00b00293;   % 2104: 	li t0,11 %
00001190 : 01200493;   % 2105: 	li s1,18 ### TODO %
00001191 : 0c80006f;   % 2106: 	j DefinedAnim %
00001192 : 00900293;   % 2110: 	li t0,9 %
00001193 : 00900493;   % 2111: 	li s1,9 # DefStartFly %
00001194 : 0a5c0e63;   % 2112: 	beq s8,t0,DefinedAnim %
00001195 : 00a00293;   % 2114: 	li t0,10 %
00001196 : 00d00493;   % 2115: 	li s1,13 # DefAttackAir %
00001197 : 0a5c0863;   % 2116: 	beq s8,t0,DefinedAnim %
00001198 : 0fc0c297;   % 2124: 	lh t0,PlayerSpeedX %
00001199 : b7829283;   % 2124:  %
0000119a : 0fc0c317;   % 2125: 	lh t1,PlayerAnimState %
0000119b : b7631303;   % 2125:  %
0000119c : 00400393;   % 2127: 	li t2,4 %
0000119d : 00735e63;   % 2128: 	bge t1,t2,DefFlyKirbyHorz %
0000119e : 00300393;   % 2130: 	li t2,3 %
0000119f : 007cde63;   % 2131: 	bge s9,t2,DefBigAnimHorz %
000011a0 : 0202c663;   % 2133: 	blt t0,zero,DefNegSpeedX %
000011a1 : 02504c63;   % 2134: 	bgt t0,zero,DefPosSpeedX %
000011a2 : 000004b3;   % 2136: 	mv s1,zero %
000011a3 : 0800006f;   % 2137: 	j DefinedAnim %
000011a4 : 00600493;   % 2140: 	li s1,6 %
000011a5 : 0780006f;   % 2141: 	j DefinedAnim %
000011a6 : 00029663;   % 2144: 	bne t0,zero,DefBigWalk %
000011a7 : 00700493;   % 2146: 	li s1,7 %
000011a8 : 06c0006f;   % 2147: 	j DefinedAnim %
000011a9 : 00800493;   % 2149: 	li s1,8 %
000011aa : 0640006f;   % 2150: 	j DefinedAnim %
000011ab : 00100493;   % 2153: 	li s1,1 %
000011ac : 04040e63;   % 2154: 	beq s0,zero,DefinedAnim %
000011ad : 00200493;   % 2155: 	li s1,2		# break left to right se estiver apertando 'd' mas com velocidade para a esquerda %
000011ae : 0540006f;   % 2156: 	j DefinedAnim %
000011af : 00200493;   % 2159: 	li s1,2		# break right to left se estiver apertando 'a' mas com velocidade para a direita %
000011b0 : 04040663;   % 2160: 	beq s0,zero,DefinedAnim %
000011b1 : 00100493;   % 2161: 	li s1,1		 %
000011b2 : 0440006f;   % 2162: 	j DefinedAnim %
000011b3 : 0fc0c297;   % 2166: 	lh t0,PlayerSpeedY %
000011b4 : b0e29283;   % 2166:  %
000011b5 : 0fc0c317;   % 2167: 	lh t1,PlayerAnimState %
000011b6 : b0a31303;   % 2167:  %
000011b7 : 00400393;   % 2169: 	li t2,4 %
000011b8 : 00735e63;   % 2170: 	bge t1,t2,DefAnimFly %
000011b9 : 00300393;   % 2172: 	li t2,3 %
000011ba : fa7cdee3;   % 2173: 	bge s9,t2,DefBigWalk # animacao de pulo com item na boca e a mesma de andar %
000011bb : 00300493;   % 2175: 	li s1,3 %
000011bc : 0002ce63;   % 2176: 	blt t0,zero,DefinedAnim  # quick jump %
000011bd : 00400493;   % 2177: 	li s1,4 %
000011be : 0140006f;   % 2178: 	j DefinedAnim  # quick fall %
000011bf : 00500493;   % 2181: 	li s1,5 %
000011c0 : 00505663;   % 2182: 	ble t0,zero,DefinedAnim  # slow jump %
000011c1 : 00600493;   % 2183: 	li s1,6 %
000011c2 : 0040006f;   % 2184: 	j DefinedAnim  # slow fall %
000011c3 : 0fc0c297;   % 2187: 	sh s1,PlayerAnim,t0 %
000011c4 : ac929c23;   % 2187:  %
000011c5 : 0fc0ca97;   % 2190: 	lw s5,FrameCount %
000011c6 : b24aaa83;   % 2190:  %
000011c7 : 0fc0c297;   % 2192: 	lw t0,PlayerSprite %
000011c8 : ad82a283;   % 2192:  %
000011c9 : 0fc0c497;   % 2193: 	lhu s1,PlayerAnimCount %
000011ca : ac44d483;   % 2193:  %
000011cb : 0fc0c917;   % 2194: 	lhu s2,PlayerMaxFrame	# duracao do sprite atual em frames, se for 0 sera um sprite sem animacao %
000011cc : ac495903;   % 2194:  %
000011cd : 0fc0c997;   % 2196: 	lhu s3,PlayerAnim # # # # atualiza s3 com o valor anterior de s1 %
000011ce : ab09d983;   % 2196:  %
000011cf : 0fc0c297;   % 2197: 	lhu t0,PlayerOldAnim %
000011d0 : aaa2d283;   % 2197:  %
000011d1 : 02598663;   % 2198: 	beq s3,t0,ContinueAnim  # continua uma animacao se o valor dela nao trocou %
000011d2 : 0fc0c317;   % 2201: 	sw s5,PlayerLastFrame,t1 %
000011d3 : ab532a23;   % 2201:  %
000011d4 : 000004b3;   % 2202: 	mv s1,zero	# define que o proximo sprite sera o sprite 0 (da animacao definida abaixo) %
000011d5 : 00400313;   % 2204: 	li t1,4 %
000011d6 : 01331863;   % 2205: 	bne t1,s3,MostAnimCases %
000011d7 : 00300313;   % 2207: 	li t1,3 %
000011d8 : 00530463;   % 2208: 	beq t1,t0,MostAnimCases %
000011d9 : 00300493;   % 2209: 	li s1,3  # se a animacao de queda rapida nao estiver vindo de um pulo unico, o kirby nao faz a cambalhota %
000011da : 0fc0c317;   % 2212: 	sh s1,PlayerAnimCount,t1 %
000011db : a8931023;   % 2212:  %
000011dc : 0fc0c317;   % 2215: 	sh s3,PlayerOldAnim,t1 %
000011dd : a7331b23;   % 2215:  %
000011de : 00000b33;   % 2217: 	mv s6,zero  # inicia definindo a duracao da nova animacao como zero, para o caso das que tem apenas 1 frame %
000011df : 01300533;   % 2219: 	mv a0,s3 %
000011e0 : 00100893;   % 2220: 	li a7,1 %
000011e1 : 0fc0c517;   % 2223: 	la a0,endl %
000011e2 : b1050513;   % 2223:  %
000011e3 : 00400893;   % 2224: 	li a7,4 %
000011e4 : 2a098c63;   % 2228: 	beq s3,zero,PlayerIdle %
000011e5 : 00100293;   % 2229: 	li t0,1 %
000011e6 : 30598263;   % 2230: 	beq s3,t0,PlayerWalk %
000011e7 : 00200293;   % 2231: 	li t0,2 %
000011e8 : 0fc23a17;   % 2232: 	la s4,kirbyBreak		# animacoes que tem apenas 1 frame nao precisam checar mudanca de frame %
000011e9 : b60a0a13;   % 2232:  %
000011ea : 34598463;   % 2233: 	beq s3,t0,PlayerBreak		# no caso do break ha a animacao de poeira %
000011eb : 00300293;   % 2234: 	li t0,3 %
000011ec : 0fc23a17;   % 2235: 	la s4,kirbyJump %
000011ed : 3b0a0a13;   % 2235:  %
000011ee : 08598ae3;   % 2236: 	beq s3,t0,GotPlayerSprite %
000011ef : 00400293;   % 2237: 	li t0,4 %
000011f0 : 36598663;   % 2238: 	beq s3,t0,PlayerQuickFall %
000011f1 : 00500293;   % 2239: 	li t0,5 %
000011f2 : 3c598a63;   % 2240: 	beq s3,t0,PlayerFly %
000011f3 : 00600293;   % 2241: 	li t0,6 %
000011f4 : 3e598c63;   % 2242: 	beq s3,t0,PlayerSlowFall %
000011f5 : 00700293;   % 2243: 	li t0,7 %
000011f6 : 0fc24a17;   % 2244: 	la s4,kirbyBigIdle %
000011f7 : fa8a0a13;   % 2244:  %
000011f8 : 065986e3;   % 2245: 	beq s3,t0,GotPlayerSprite %
000011f9 : 00800293;   % 2246: 	li t0,8 %
000011fa : 40598663;   % 2247: 	beq s3,t0,PlayerBigWalk %
000011fb : 00900293;   % 2248: 	li t0,9 %
000011fc : 5c598c63;   % 2249: 	beq s3,t0,PlayerStartFly %
000011fd : 00a00293;   % 2250: 	li t0,10 %
000011fe : 44598e63;   % 2251: 	beq s3,t0,PlayerStartEat %
000011ff : 00b00293;   % 2252: 	li t0,11 %
00001200 : 48598863;   % 2253: 	beq s3,t0,PlayerEat %
00001201 : 00c00293;   % 2254: 	li t0,12 %
00001202 : 58598a63;   % 2255: 	beq s3,t0,PlayerEndEat %
00001203 : 00d00293;   % 2256: 	li t0,13 %
00001204 : 60598663;   % 2257: 	beq s3,t0,PlayerAirAttack %
00001205 : 00e00293;   % 2258: 	li t0,14 %
00001206 : 7a598a63;   % 2259: 	beq s3,t0,PlayerFireAttack %
00001207 : 00f00293;   % 2260: 	li t0,15 %
00001208 : 0fc26a17;   % 2261: 	la s4,kirbyIceAtt0 %
00001209 : 0e8a0a13;   % 2261:  %
0000120a : 025982e3;   % 2262: 	beq s3,t0,GotPlayerSprite %
0000120b : 01000293;   % 2263: 	li t0,16 %
0000120c : 66598c63;   % 2264: 	beq s3,t0,PlayerIceAttack %
0000120d : 01100293;   % 2265: 	li t0,17 %
0000120e : 0fc26a17;   % 2266: 	la s4,kirbyIceAtt0 %
0000120f : 0d0a0a13;   % 2266:  %
00001210 : 005986e3;   % 2267: 	beq s3,t0,GotPlayerSprite %
00001211 : 01200293;   % 2268: 	li t0,18 %
00001212 : 16598a63;   % 2269: 	beq s3,t0,PlayerStarAttack %
00001213 : 01300293;   % 2270: 	li t0,19 %
00001214 : 0fc25a17;   % 2271: 	la s4,kirbyDown %
00001215 : 860a0a13;   % 2271:  %
00001216 : 7e598a63;   % 2272: 	beq s3,t0,GotPlayerSprite %
00001217 : 01400293;   % 2273: 	li t0,20 %
00001218 : 10598463;   % 2274: 	beq s3,t0,PlayerDownEating %
00001219 : 01500293;   % 2275: 	li t0,21 %
0000121a : 06598e63;   % 2276: 	beq s3,t0,PlayerHitAnim %
0000121b : 01600293;   % 2277: 	li t0,22 %
0000121c : 0fc24a17;   % 2278: 	la s4,kirbyBigHit %
0000121d : cc4a0a13;   % 2278:  %
0000121e : 7c598a63;   % 2279: 	beq s3,t0,GotPlayerSprite %
0000121f : 01700293;   % 2280: 	li t0,23 %
00001220 : 02598c63;   % 2281: 	beq s3,t0,PlayerEaten %
00001221 : 01800293;   % 2282: 	li t0,24 # Unused %
00001222 : 00598263;   % 2283: 	beq s3,t0,PlayerEnter %
00001223 : 7e4000ef;   % 2286: 	jal CheckNextSprAnim %
00001224 : 0014f493;   % 2287: 	andi s1,s1,1 %
00001225 : 0fc26a17;   % 2289: 	la s4,kirbyEnter0 %
00001226 : a2ca0a13;   % 2289:  %
00001227 : 00400b13;   % 2290: 	li s6,4 %
00001228 : 7a048663;   % 2291: 	beq s1,zero,GotPlayerSprite %
00001229 : 00100293;   % 2292: 	li t0,1 %
0000122a : 0fc26a17;   % 2293: 	la s4,kirbyEnter1 %
0000122b : b24a0a13;   % 2293:  %
0000122c : 00c00b13;   % 2294: 	li s6,12 %
0000122d : 78548c63;   % 2295: 	beq s1,t0,GotPlayerSprite %
0000122e : 7b8000ef;   % 2298: 	jal CheckNextSprAnim %
0000122f : 0014f493;   % 2299: 	andi s1,s1,1 %
00001230 : 0fc23a17;   % 2301: 	la s4,kirbyBigDiag %
00001231 : 7dca0a13;   % 2301:  %
00001232 : 00c00b13;   % 2302: 	li s6,12 %
00001233 : 78048063;   % 2303: 	beq s1,zero,GotPlayerSprite %
00001234 : 00100293;   % 2304: 	li t0,1 %
00001235 : 0fc24a17;   % 2305: 	la s4,kirbyBigEaten %
00001236 : a14a0a13;   % 2305:  %
00001237 : 00e00b13;   % 2306: 	li s6,14 %
00001238 : 76548663;   % 2307: 	beq s1,t0,GotPlayerSprite %
00001239 : 78c000ef;   % 2310: 	jal CheckNextSprAnim %
0000123a : 00600293;   % 2311: 	li t0,6 %
0000123b : 0054a333;   % 2312: 	slt t1,s1,t0 %
0000123c : 026484b3;   % 2313: 	mul s1,s1,t1		# um mod 5 manual %
0000123d : 0fc26a17;   % 2315: 	la s4,kirbyHit ### TODO terminar animacao de tomar dano %
0000123e : 8c0a0a13;   % 2315:  %
0000123f : 00900b13;   % 2316: 	li s6,9 %
00001240 : 74048663;   % 2317: 	beq s1,zero,GotPlayerSprite %
00001241 : 00100293;   % 2318: 	li t0,1 %
00001242 : 0fc23a17;   % 2319: 	la s4,kirbyFall1 %
00001243 : c10a0a13;   % 2319:  %
00001244 : 00300b13;   % 2320: 	li s6,3 %
00001245 : 72548c63;   % 2321: 	beq s1,t0,GotPlayerSprite %
00001246 : 00200293;   % 2322: 	li t0,2 %
00001247 : 0fc23a17;   % 2323: 	la s4,kirbyFall0 %
00001248 : af0a0a13;   % 2323:  %
00001249 : 00300b13;   % 2324: 	li s6,3 %
0000124a : 72548263;   % 2325: 	beq s1,t0,GotPlayerSprite %
0000124b : 00300293;   % 2326: 	li t0,3 %
0000124c : 0fc23a17;   % 2327: 	la s4,kirbyFall2 %
0000124d : cf4a0a13;   % 2327:  %
0000124e : 00300b13;   % 2328: 	li s6,3 %
0000124f : 70548863;   % 2329: 	beq s1,t0,GotPlayerSprite %
00001250 : 00400293;   % 2330: 	li t0,4 %
00001251 : 0fc23a17;   % 2331: 	la s4,kirbyFall1 %
00001252 : bd4a0a13;   % 2331:  %
00001253 : 00300b13;   % 2332: 	li s6,3 %
00001254 : 6e548e63;   % 2333: 	beq s1,t0,GotPlayerSprite %
00001255 : 00500293;   % 2334: 	li t0,5 %
00001256 : 0fc23a17;   % 2335: 	la s4,kirbyFall0 %
00001257 : ab4a0a13;   % 2335:  %
00001258 : 00300b13;   % 2336: 	li s6,3 %
00001259 : 6e548463;   % 2337: 	beq s1,t0,GotPlayerSprite %
0000125a : 708000ef;   % 2340: 	jal CheckNextSprAnim %
0000125b : 0074f493;   % 2341: 	andi s1,s1,7 %
0000125c : 0fc23a17;   % 2343: 	la s4,kirbyBigDiag # tempo de comer normal = 40 %
0000125d : 72ca0a13;   % 2343:  %
0000125e : 00c00b13;   % 2344: 	li s6,12 %
0000125f : 6c048863;   % 2345: 	beq s1,zero,GotPlayerSprite %
00001260 : 00100293;   % 2346: 	li t0,1 %
00001261 : 0fc25a17;   % 2347: 	la s4,kirbyMunch %
00001262 : 724a0a13;   % 2347:  %
00001263 : 00e00b13;   % 2348: 	li s6,14 %
00001264 : 6a548e63;   % 2349: 	beq s1,t0,GotPlayerSprite %
00001265 : 00200293;   % 2350: 	li t0,2 %
00001266 : 0fc24a17;   % 2351: 	la s4,kirbyDown %
00001267 : 718a0a13;   % 2351:  %
00001268 : 00a00b13;   % 2352: 	li s6,10 %
00001269 : 6a548463;   % 2353: 	beq s1,t0,GotPlayerSprite %
0000126a : 00300293;   % 2354: 	li t0,3 %
0000126b : 0fc23a17;   % 2355: 	la s4,kirbyIdle0 %
0000126c : f9ca0a13;   % 2355:  %
0000126d : 00400b13;   % 2356: 	li s6,4 %
0000126e : 68548a63;   % 2357: 	beq s1,t0,GotPlayerSprite %
0000126f : 0fc0c297;   % 2363: 	lw t0,PlayerObjDelay %
00001270 : 8442a283;   % 2363:  %
00001271 : 02504863;   % 2364: 	bgt t0,zero,DoneStarObj %
00001272 : 01e00293;   % 2366: 	li t0,30 %
00001273 : 0fc0c317;   % 2367: 	sw t0,PlayerObjDelay,t1 %
00001274 : 82532a23;   % 2367:  %
00001275 : 00700513;   % 2369: 	li a0,7 # id do objeto (estrela) ### %
00001276 : 00100593;   % 2370: 	li a1,1 # quantidade do objeto %
00001277 : 0fc0b617;   % 2371: 	lw a2,PlayerPosX %
00001278 : 7f062603;   % 2371:  %
00001279 : 0fc0c697;   % 2372: 	lw a3,PlayerLastDir %
0000127a : 8446a683;   % 2372:  %
0000127b : 00000733;   % 2373: 	mv a4,zero %
0000127c : e14fb0ef;   % 2374: 	jal BuildObject %
0000127d : 67c000ef;   % 2377: 	jal CheckNextSprAnim %
0000127e : 0034f493;   % 2378: 	andi s1,s1,3 %
0000127f : 0fc25a17;   % 2380: 	la s4,kirbyEat3Gnd %
00001280 : db0a0a13;   % 2380:  %
00001281 : 00f00b13;   % 2381: 	li s6,15 %
00001282 : 64048263;   % 2382: 	beq s1,zero,GotPlayerSprite %
00001283 : 00100293;   % 2383: 	li t0,1 %
00001284 : 0fc25a17;   % 2384: 	la s4,kirbyEat2 %
00001285 : 9c4a0a13;   % 2384:  %
00001286 : 00500b13;   % 2385: 	li s6,5 %
00001287 : 62548863;   % 2386: 	beq s1,t0,GotPlayerSprite %
00001288 : 00200293;   % 2387: 	li t0,2 %
00001289 : 0fc25a17;   % 2388: 	la s4,kirbyEat1 %
0000128a : 8a4a0a13;   % 2388:  %
0000128b : 00500b13;   % 2389: 	li s6,5 %
0000128c : 60548e63;   % 2390: 	beq s1,t0,GotPlayerSprite %
0000128d : 00300293;   % 2391: 	li t0,3 %
0000128e : 0fc24a17;   % 2392: 	la s4,kirbyEat0 %
0000128f : 784a0a13;   % 2392:  %
00001290 : 00500b13;   % 2393: 	li s6,5 %
00001291 : 60548463;   % 2394: 	beq s1,t0,GotPlayerSprite %
00001292 : 628000ef;   % 2397: 	jal CheckNextSprAnim %
00001293 : 0034f493;   % 2398: 	andi s1,s1,3 %
00001294 : 0fc23a17;   % 2400: 	la s4,kirbyIdle0 %
00001295 : ef8a0a13;   % 2400:  %
00001296 : 09600b13;   % 2401: 	li s6,150 %
00001297 : 5e048863;   % 2402: 	beq s1,zero,GotPlayerSprite %
00001298 : 00100293;   % 2403: 	li t0,1 %
00001299 : 0fc23a17;   % 2404: 	la s4,kirbyIdle1 %
0000129a : ff0a0a13;   % 2404:  %
0000129b : 00a00b13;   % 2405: 	li s6,10 %
0000129c : 5c548e63;   % 2406: 	beq s1,t0,GotPlayerSprite %
0000129d : 00200293;   % 2407: 	li t0,2 %
0000129e : 0fc23a17;   % 2408: 	la s4,kirbyIdle0 %
0000129f : ed0a0a13;   % 2408:  %
000012a0 : 00a00b13;   % 2409: 	li s6,10 %
000012a1 : 5c548463;   % 2410: 	beq s1,t0,GotPlayerSprite %
000012a2 : 00300293;   % 2411: 	li t0,3 %
000012a3 : 0fc23a17;   % 2412: 	la s4,kirbyIdle1 %
000012a4 : fc8a0a13;   % 2412:  %
000012a5 : 00a00b13;   % 2413: 	li s6,10 %
000012a6 : 5a548a63;   % 2414: 	beq s1,t0,GotPlayerSprite %
000012a7 : 5d4000ef;   % 2417: 	jal CheckNextSprAnim %
000012a8 : 0034f493;   % 2418: 	andi s1,s1,3 %
000012a9 : 0fc23a17;   % 2420: 	la s4,kirbyWalk0 %
000012aa : 1c8a0a13;   % 2420:  %
000012ab : 00a00b13;   % 2421: 	li s6,10 %
000012ac : 58048e63;   % 2422: 	beq s1,zero,GotPlayerSprite %
000012ad : 00100293;   % 2423: 	li t0,1 %
000012ae : 0fc23a17;   % 2424: 	la s4,kirbyWalk1 %
000012af : 2c0a0a13;   % 2424:  %
000012b0 : 00a00b13;   % 2425: 	li s6,10 %
000012b1 : 58548463;   % 2426: 	beq s1,t0,GotPlayerSprite %
000012b2 : 00200293;   % 2427: 	li t0,2 %
000012b3 : 0fc23a17;   % 2428: 	la s4,kirbyWalk2 %
000012b4 : 3b8a0a13;   % 2428:  %
000012b5 : 00a00b13;   % 2429: 	li s6,10 %
000012b6 : 56548a63;   % 2430: 	beq s1,t0,GotPlayerSprite %
000012b7 : 00300293;   % 2431: 	li t0,3 %
000012b8 : 0fc23a17;   % 2432: 	la s4,kirbyWalk3 %
000012b9 : 4b0a0a13;   % 2432:  %
000012ba : 00a00b13;   % 2433: 	li s6,10 %
000012bb : 56548063;   % 2434: 	beq s1,t0,GotPlayerSprite %
000012bc : 0fc0b297;   % 2437: 	lw t0,PlayerObjDelay %
000012bd : 7102a283;   % 2437:  %
000012be : 54504a63;   % 2438: 	bgt t0,zero,GotPlayerSprite # trocar essa label se copiar essa linha %
000012bf : 00400293;   % 2440: 	li t0,4 %
000012c0 : 0fc0b317;   % 2441: 	sw t0,PlayerObjDelay,t1 %
000012c1 : 70532023;   % 2441:  %
000012c2 : 00100513;   % 2443: 	li a0,1 # id do objeto (poeira) %
000012c3 : 00100593;   % 2444: 	li a1,1 # quantidade do objeto %
000012c4 : 0fc0b617;   % 2445: 	lw a2,PlayerPosX %
000012c5 : 6bc62603;   % 2445:  %
000012c6 : 0fc0b697;   % 2446: 	lw a3,PlayerLastDir %
000012c7 : 7106a683;   % 2446:  %
000012c8 : 00000733;   % 2447: 	mv a4,zero %
000012c9 : ce0fb0ef;   % 2449: 	jal BuildObject %
000012ca : 5240006f;   % 2451: 	j GotPlayerSprite %
000012cb : 544000ef;   % 2454: 	jal CheckNextSprAnim %
000012cc : 00500293;   % 2455: 	li t0,5 %
000012cd : 0054a333;   % 2456: 	slt t1,s1,t0 %
000012ce : 026484b3;   % 2457: 	mul s1,s1,t1		# um mod 5 manual %
000012cf : 0fc23a17;   % 2459: 	la s4,kirbyFall0 %
000012d0 : 8d0a0a13;   % 2459:  %
000012d1 : 00500b13;   % 2460: 	li s6,5 %
000012d2 : 50048263;   % 2461: 	beq s1,zero,GotPlayerSprite %
000012d3 : 00100293;   % 2462: 	li t0,1 %
000012d4 : 0fc23a17;   % 2463: 	la s4,kirbyFall1 %
000012d5 : 9c8a0a13;   % 2463:  %
000012d6 : 00500b13;   % 2464: 	li s6,5 %
000012d7 : 4e548863;   % 2465: 	beq s1,t0,GotPlayerSprite %
000012d8 : 00200293;   % 2466: 	li t0,2 %
000012d9 : 0fc23a17;   % 2467: 	la s4,kirbyFall2 %
000012da : ac0a0a13;   % 2467:  %
000012db : 00500b13;   % 2468: 	li s6,5 %
000012dc : 4c548e63;   % 2469: 	beq s1,t0,GotPlayerSprite %
000012dd : 00300293;   % 2470: 	li t0,3 %
000012de : 0fc23a17;   % 2471: 	la s4,kirbyFall3 %
000012df : bb8a0a13;   % 2471:  %
000012e0 : 01e00b13;   % 2472: 	li s6,30 %
000012e1 : 4c548463;   % 2473: 	beq s1,t0,GotPlayerSprite %
000012e2 : 00400293;   % 2474: 	li t0,4 %
000012e3 : 0fc23a17;   % 2475: 	la s4,kirbyFall4 %
000012e4 : cb0a0a13;   % 2475:  %
000012e5 : 1f400b13;   % 2476: 	li s6,500 %
000012e6 : 4a548a63;   % 2477: 	beq s1,t0,GotPlayerSprite %
000012e7 : 4d4000ef;   % 2480: 	jal CheckNextSprAnim %
000012e8 : 0014f493;   % 2481: 	andi s1,s1,1 %
000012e9 : 0fc25a17;   % 2483: 	la s4,kirbyFly0 %
000012ea : e54a0a13;   % 2483:  %
000012eb : 00a00b13;   % 2484: 	li s6,10 %
000012ec : 48048e63;   % 2485: 	beq s1,zero,GotPlayerSprite %
000012ed : 00100293;   % 2486: 	li t0,1 %
000012ee : 0fc25a17;   % 2487: 	la s4,kirbyFly1 %
000012ef : 08ca0a13;   % 2487:  %
000012f0 : 00a00b13;   % 2488: 	li s6,10 %
000012f1 : 48548463;   % 2489: 	beq s1,t0,GotPlayerSprite %
000012f2 : 4a8000ef;   % 2492: 	jal CheckNextSprAnim %
000012f3 : 0014f493;   % 2493: 	andi s1,s1,1 %
000012f4 : 0fc25a17;   % 2495: 	la s4,kirbyFly0 %
000012f5 : e28a0a13;   % 2495:  %
000012f6 : 01900b13;   % 2496: 	li s6,25 %
000012f7 : 46048863;   % 2497: 	beq s1,zero,GotPlayerSprite %
000012f8 : 00100293;   % 2498: 	li t0,1 %
000012f9 : 0fc25a17;   % 2499: 	la s4,kirbyFly1 %
000012fa : 060a0a13;   % 2499:  %
000012fb : 01900b13;   % 2500: 	li s6,25 %
000012fc : 44548e63;   % 2501: 	beq s1,t0,GotPlayerSprite %
000012fd : 47c000ef;   % 2505: 	jal CheckNextSprAnim %
000012fe : 0034f493;   % 2506: 	andi s1,s1,3 %
000012ff : 0fc24a17;   % 2508: 	la s4,kirbyBigWalk0 %
00001300 : dd0a0a13;   % 2508:  %
00001301 : 00a00b13;   % 2509: 	li s6,10 %
00001302 : 44048263;   % 2510: 	beq s1,zero,GotPlayerSprite %
00001303 : 0fc0b317;   % 2512: 	lh t1,PlayerSpeedY # se o jogador estiver caindo trava nessa animacao %
00001304 : 5ce31303;   % 2512:  %
00001305 : 42604c63;   % 2513: 	bgt t1,zero,GotPlayerSprite %
00001306 : 00100293;   % 2515: 	li t0,1 %
00001307 : 0fc24a17;   % 2516: 	la s4,kirbyBigWalk1 %
00001308 : ffca0a13;   % 2516:  %
00001309 : 00a00b13;   % 2517: 	li s6,10 %
0000130a : 42548263;   % 2518: 	beq s1,t0,GotPlayerSprite %
0000130b : 00200293;   % 2519: 	li t0,2 %
0000130c : 0fc24a17;   % 2520: 	la s4,kirbyBigWalk2 %
0000130d : 234a0a13;   % 2520:  %
0000130e : 00a00b13;   % 2521: 	li s6,10 %
0000130f : 40548863;   % 2522: 	beq s1,t0,GotPlayerSprite %
00001310 : 00300293;   % 2523: 	li t0,3 %
00001311 : 0fc24a17;   % 2524: 	la s4,kirbyBigWalk1 %
00001312 : fd4a0a13;   % 2524:  %
00001313 : 00a00b13;   % 2525: 	li s6,10 %
00001314 : 3e548e63;   % 2526: 	beq s1,t0,GotPlayerSprite %
00001315 : 06400513;   % 2529: 	li a0,100 # duracao em ms %
00001316 : 05000593;   % 2530: 	li a1,80 # nota %
00001317 : 00000633;   % 2531: 	mv a2,zero # instrumento %
00001318 : b4cfd0ef;   % 2532: 	jal SetSound %
00001319 : 40c000ef;   % 2534: 	jal CheckNextSprAnim %
0000131a : 0014f493;   % 2535: 	andi s1,s1,1 %
0000131b : 0fc24a17;   % 2537: 	la s4,kirbyEat1 %
0000131c : 65ca0a13;   % 2537:  %
0000131d : 00500b13;   % 2538: 	li s6,5 %
0000131e : 3c048a63;   % 2539: 	beq s1,zero,GotPlayerSprite %
0000131f : 00100293;   % 2540: 	li t0,1 %
00001320 : 0fc24a17;   % 2541: 	la s4,kirbyEat2 %
00001321 : 754a0a13;   % 2541:  %
00001322 : 00500b13;   % 2542: 	li s6,5 %
00001323 : 3c548063;   % 2543: 	beq s1,t0,GotPlayerSprite %
00001324 : 06400513;   % 2546: 	li a0,100 # duracao em ms %
00001325 : 05000593;   % 2547: 	li a1,80 # nota %
00001326 : 00000633;   % 2548: 	mv a2,zero # instrumento %
00001327 : b10fd0ef;   % 2549: 	jal SetSound %
00001328 : 0fc0b297;   % 2551: 	lw t0,PlayerObjDelay %
00001329 : 5602a283;   % 2551:  %
0000132a : 00a00313;   % 2552: 	li t1,10 %
0000132b : 06628063;   % 2553: 	beq t0,t1,TinyDustObj2 %
0000132c : 00500313;   % 2554: 	li t1,5 %
0000132d : 08628e63;   % 2555: 	beq t0,t1,TinyDustObj3 %
0000132e : 0c504c63;   % 2556: 	bgt t0,zero,DoneTinyDustObjs %
0000132f : 00f00293;   % 2558: 	li t0,15 %
00001330 : 0fc0b317;   % 2559: 	sw t0,PlayerObjDelay,t1 %
00001331 : 54532023;   % 2559:  %
00001332 : 00200513;   % 2561: 	li a0,2 # id do objeto (poeira pequena) %
00001333 : 00100593;   % 2562: 	li a1,1 # quantidade do objeto %
00001334 : 0fc0b617;   % 2563: 	lw a2,PlayerPosX %
00001335 : 4fc62603;   % 2563:  %
00001336 : 0fc0b697;   % 2564: 	lw a3,PlayerLastDir %
00001337 : 5506a683;   % 2564:  %
00001338 : 00100713;   % 2565: 	li a4,1 %
00001339 : b20fb0ef;   % 2566: 	jal BuildObject %
0000133a : 00200513;   % 2568: 	li a0,2 # id do objeto (poeira pequena) %
0000133b : 00100593;   % 2569: 	li a1,1 # quantidade do objeto %
0000133c : 0fc0b617;   % 2570: 	lw a2,PlayerPosX %
0000133d : 4dc62603;   % 2570:  %
0000133e : 0fc0b697;   % 2571: 	lw a3,PlayerLastDir %
0000133f : 5306a683;   % 2571:  %
00001340 : 00300713;   % 2572: 	li a4,3 %
00001341 : b00fb0ef;   % 2573: 	jal BuildObject %
00001342 : 0880006f;   % 2575: 	j DoneTinyDustObjs %
00001343 : 00200513;   % 2579: 	li a0,2 # id do objeto (poeira pequena) %
00001344 : 00100593;   % 2580: 	li a1,1 # quantidade do objeto %
00001345 : 0fc0b617;   % 2581: 	lw a2,PlayerPosX %
00001346 : 4b862603;   % 2581:  %
00001347 : 0fc0b697;   % 2582: 	lw a3,PlayerLastDir %
00001348 : 50c6a683;   % 2582:  %
00001349 : 00000733;   % 2583: 	mv a4,zero %
0000134a : adcfb0ef;   % 2584: 	jal BuildObject %
0000134b : 00200513;   % 2586: 	li a0,2 # id do objeto (poeira pequena) %
0000134c : 00100593;   % 2587: 	li a1,1 # quantidade do objeto %
0000134d : 0fc0b617;   % 2588: 	lw a2,PlayerPosX %
0000134e : 49862603;   % 2588:  %
0000134f : 0fc0b697;   % 2589: 	lw a3,PlayerLastDir %
00001350 : 4ec6a683;   % 2589:  %
00001351 : 00500713;   % 2590: 	li a4,5 %
00001352 : abcfb0ef;   % 2591: 	jal BuildObject %
00001353 : 0440006f;   % 2593: 	j DoneTinyDustObjs %
00001354 : 00200513;   % 2597: 	li a0,2 # id do objeto (poeira pequena) %
00001355 : 00100593;   % 2598: 	li a1,1 # quantidade do objeto %
00001356 : 0fc0b617;   % 2599: 	lw a2,PlayerPosX %
00001357 : 47462603;   % 2599:  %
00001358 : 0fc0b697;   % 2600: 	lw a3,PlayerLastDir %
00001359 : 4c86a683;   % 2600:  %
0000135a : 00200713;   % 2601: 	li a4,2 %
0000135b : a98fb0ef;   % 2602: 	jal BuildObject %
0000135c : 00200513;   % 2604: 	li a0,2 # id do objeto (poeira pequena) %
0000135d : 00100593;   % 2605: 	li a1,1 # quantidade do objeto %
0000135e : 0fc0b617;   % 2606: 	lw a2,PlayerPosX %
0000135f : 45462603;   % 2606:  %
00001360 : 0fc0b697;   % 2607: 	lw a3,PlayerLastDir %
00001361 : 4a86a683;   % 2607:  %
00001362 : 00400713;   % 2608: 	li a4,4 %
00001363 : a78fb0ef;   % 2609: 	jal BuildObject %
00001364 : 0fc24a17;   % 2613: 	la s4,kirbyEat2 %
00001365 : 644a0a13;   % 2613:  %
00001366 : 2b40006f;   % 2615: 	j GotPlayerSprite %
00001367 : 2d4000ef;   % 2618: 	jal CheckNextSprAnim %
00001368 : 0014f493;   % 2619: 	andi s1,s1,1 %
00001369 : 0fc24a17;   % 2621: 	la s4,kirbyEat2 %
0000136a : 630a0a13;   % 2621:  %
0000136b : 00500b13;   % 2622: 	li s6,5 %
0000136c : 28048e63;   % 2623: 	beq s1,zero,GotPlayerSprite %
0000136d : 00100293;   % 2624: 	li t0,1 %
0000136e : 0fc24a17;   % 2625: 	la s4,kirbyEat1 %
0000136f : 510a0a13;   % 2625:  %
00001370 : 00500b13;   % 2626: 	li s6,5 %
00001371 : 28548463;   % 2627: 	beq s1,t0,GotPlayerSprite %
00001372 : 2a8000ef;   % 2630: 	jal CheckNextSprAnim %
00001373 : 0034f493;   % 2631: 	andi s1,s1,3 %
00001374 : 0fc24a17;   % 2633: 	la s4,kirbyEat0 %
00001375 : 3eca0a13;   % 2633:  %
00001376 : 00500b13;   % 2634: 	li s6,5 %
00001377 : 26048863;   % 2635: 	beq s1,zero,GotPlayerSprite %
00001378 : 00100293;   % 2636: 	li t0,1 %
00001379 : 0fc24a17;   % 2637: 	la s4,kirbyEat1 %
0000137a : 4e4a0a13;   % 2637:  %
0000137b : 00500b13;   % 2638: 	li s6,5 %
0000137c : 24548e63;   % 2639: 	beq s1,t0,GotPlayerSprite %
0000137d : 00200293;   % 2640: 	li t0,2 %
0000137e : 0fc24a17;   % 2641: 	la s4,kirbyEat2 %
0000137f : 5dca0a13;   % 2641:  %
00001380 : 00500b13;   % 2642: 	li s6,5 %
00001381 : 24548463;   % 2643: 	beq s1,t0,GotPlayerSprite %
00001382 : 00300293;   % 2644: 	li t0,3 %
00001383 : 0fc24a17;   % 2645: 	la s4,kirbyEat3 %
00001384 : 754a0a13;   % 2645:  %
00001385 : 00500b13;   % 2646: 	li s6,5 %
00001386 : 22548a63;   % 2647: 	beq s1,t0,GotPlayerSprite %
00001387 : 0fc0b297;   % 2650: 	lw t0,PlayerObjDelay %
00001388 : 3e42a283;   % 2650:  %
00001389 : 02504863;   % 2651: 	bgt t0,zero,DoneAirObj %
0000138a : 01e00293;   % 2653: 	li t0,30 %
0000138b : 0fc0b317;   % 2654: 	sw t0,PlayerObjDelay,t1 %
0000138c : 3c532a23;   % 2654:  %
0000138d : 00600513;   % 2656: 	li a0,6 # id do objeto (ar) %
0000138e : 00100593;   % 2657: 	li a1,1 # quantidade do objeto %
0000138f : 0fc0b617;   % 2658: 	lw a2,PlayerPosX %
00001390 : 39062603;   % 2658:  %
00001391 : 0fc0b697;   % 2659: 	lw a3,PlayerLastDir %
00001392 : 3e46a683;   % 2659:  %
00001393 : 00000733;   % 2660: 	mv a4,zero %
00001394 : 9b4fb0ef;   % 2661: 	jal BuildObject %
00001395 : 21c000ef;   % 2664: 	jal CheckNextSprAnim %
00001396 : 0034f493;   % 2665: 	andi s1,s1,3 %
00001397 : 0fc24a17;   % 2667: 	la s4,kirbyEat3 %
00001398 : 704a0a13;   % 2667:  %
00001399 : 00f00b13;   % 2668: 	li s6,15 %
0000139a : 1e048263;   % 2669: 	beq s1,zero,GotPlayerSprite %
0000139b : 00100293;   % 2670: 	li t0,1 %
0000139c : 0fc24a17;   % 2671: 	la s4,kirbyEat2 %
0000139d : 564a0a13;   % 2671:  %
0000139e : 00500b13;   % 2672: 	li s6,5 %
0000139f : 1c548863;   % 2673: 	beq s1,t0,GotPlayerSprite %
000013a0 : 00200293;   % 2674: 	li t0,2 %
000013a1 : 0fc24a17;   % 2675: 	la s4,kirbyEat1 %
000013a2 : 444a0a13;   % 2675:  %
000013a3 : 00500b13;   % 2676: 	li s6,5 %
000013a4 : 1a548e63;   % 2677: 	beq s1,t0,GotPlayerSprite %
000013a5 : 00300293;   % 2678: 	li t0,3 %
000013a6 : 0fc24a17;   % 2679: 	la s4,kirbyEat0 %
000013a7 : 324a0a13;   % 2679:  %
000013a8 : 00500b13;   % 2680: 	li s6,5 %
000013a9 : 1a548463;   % 2681: 	beq s1,t0,GotPlayerSprite %
000013aa : 06400513;   % 2684: 	li a0,100 # duracao em ms %
000013ab : 05000593;   % 2685: 	li a1,80 # nota %
000013ac : 00000633;   % 2686: 	mv a2,zero # instrumento %
000013ad : 8f8fd0ef;   % 2687: 	jal SetSound %
000013ae : 0fc0b297;   % 2689: 	lw t0,PlayerObjDelay %
000013af : 3482a283;   % 2689:  %
000013b0 : 00a00313;   % 2690: 	li t1,10 %
000013b1 : 06628c63;   % 2691: 	beq t0,t1,IceObjects2 %
000013b2 : 0c504c63;   % 2692: 	bgt t0,zero,DoneIceObjs %
000013b3 : 01400293;   % 2694: 	li t0,20 %
000013b4 : 0fc0b317;   % 2695: 	sw t0,PlayerObjDelay,t1 %
000013b5 : 32532823;   % 2695:  %
000013b6 : 00400513;   % 2697: 	li a0,4 # id do objeto (gelo) %
000013b7 : 00100593;   % 2698: 	li a1,1 # quantidade do objeto %
000013b8 : 0fc0b617;   % 2699: 	lw a2,PlayerPosX %
000013b9 : 2ec62603;   % 2699:  %
000013ba : 0fc0b697;   % 2700: 	lw a3,PlayerLastDir %
000013bb : 3406a683;   % 2700:  %
000013bc : 00000713;   % 2701: 	li a4,0 %
000013bd : 910fb0ef;   % 2702: 	jal BuildObject %
000013be : 00400513;   % 2704: 	li a0,4 # id do objeto (gelo) %
000013bf : 00100593;   % 2705: 	li a1,1 # quantidade do objeto %
000013c0 : 0fc0b617;   % 2706: 	lw a2,PlayerPosX %
000013c1 : 2cc62603;   % 2706:  %
000013c2 : 0fc0b697;   % 2707: 	lw a3,PlayerLastDir	 %
000013c3 : 3206a683;   % 2707:  %
000013c4 : 00200713;   % 2708: 	li a4,2 %
000013c5 : 8f0fb0ef;   % 2709: 	jal BuildObject %
000013c6 : 00400513;   % 2711: 	li a0,4 # id do objeto (gelo) %
000013c7 : 00100593;   % 2712: 	li a1,1 # quantidade do objeto %
000013c8 : 0fc0b617;   % 2713: 	lw a2,PlayerPosX %
000013c9 : 2ac62603;   % 2713:  %
000013ca : 0fc0b697;   % 2714: 	lw a3,PlayerLastDir %
000013cb : 3006a683;   % 2714:  %
000013cc : 00400713;   % 2715: 	li a4,4 %
000013cd : 8d0fb0ef;   % 2716: 	jal BuildObject %
000013ce : 0680006f;   % 2718: 	j DoneIceObjs %
000013cf : 00400513;   % 2722: 	li a0,4 # id do objeto (gelo) %
000013d0 : 00100593;   % 2723: 	li a1,1 # quantidade do objeto %
000013d1 : 0fc0b617;   % 2724: 	lw a2,PlayerPosX %
000013d2 : 28862603;   % 2724:  %
000013d3 : 0fc0b697;   % 2725: 	lw a3,PlayerLastDir %
000013d4 : 2dc6a683;   % 2725:  %
000013d5 : 00100713;   % 2726: 	li a4,1 %
000013d6 : 8acfb0ef;   % 2727: 	jal BuildObject %
000013d7 : 00400513;   % 2729: 	li a0,4 # id do objeto (gelo) %
000013d8 : 00100593;   % 2730: 	li a1,1 # quantidade do objeto %
000013d9 : 0fc0b617;   % 2731: 	lw a2,PlayerPosX %
000013da : 26862603;   % 2731:  %
000013db : 0fc0b697;   % 2732: 	lw a3,PlayerLastDir %
000013dc : 2bc6a683;   % 2732:  %
000013dd : 00300713;   % 2733: 	li a4,3 %
000013de : 88cfb0ef;   % 2734: 	jal BuildObject %
000013df : 00400513;   % 2736: 	li a0,4 # id do objeto (gelo) %
000013e0 : 00100593;   % 2737: 	li a1,1 # quantidade do objeto %
000013e1 : 0fc0b617;   % 2738: 	lw a2,PlayerPosX %
000013e2 : 24862603;   % 2738:  %
000013e3 : 0fc0b697;   % 2739: 	lw a3,PlayerLastDir %
000013e4 : 29c6a683;   % 2739:  %
000013e5 : 00500713;   % 2740: 	li a4,5 %
000013e6 : 86cfb0ef;   % 2741: 	jal BuildObject %
000013e7 : 0040006f;   % 2743: 	j DoneIceObjs %
000013e8 : 0d0000ef;   % 2747: 	jal CheckNextSprAnim %
000013e9 : 0014f493;   % 2748: 	andi s1,s1,1 %
000013ea : 0fc26a17;   % 2750: 	la s4,kirbyIceAtt1 %
000013eb : a6ca0a13;   % 2750:  %
000013ec : 00300b13;   % 2751: 	li s6,3 %
000013ed : 08048c63;   % 2752: 	beq s1,zero,GotPlayerSprite %
000013ee : 00100293;   % 2753: 	li t0,1 %
000013ef : 0fc26a17;   % 2754: 	la s4,kirbyIceAtt2 %
000013f0 : b64a0a13;   % 2754:  %
000013f1 : 00300b13;   % 2755: 	li s6,3 %
000013f2 : 08548263;   % 2756: 	beq s1,t0,GotPlayerSprite %
000013f3 : 06400513;   % 2759: 	li a0,100 # duracao em ms %
000013f4 : 01400593;   % 2760: 	li a1,20 # nota %
000013f5 : 00000633;   % 2761: 	mv a2,zero # instrumento %
000013f6 : fd5fc0ef;   % 2762: 	jal SetSound %
000013f7 : 0fc0b297;   % 2764: 	lw t0,PlayerObjDelay %
000013f8 : 2242a283;   % 2764:  %
000013f9 : 00600313;   % 2765: 	li t1,6 %
000013fa : 0062a733;   % 2766: 	slt a4,t0,t1 # a4, define se o fogo vai para cima (0) ou para baixo (1) %
000013fb : 00628a63;   % 2767: 	beq t0,t1,FireObject2 %
000013fc : 02504863;   % 2768: 	bgt t0,zero,DoneFireObjs %
000013fd : 00c00293;   % 2770: 	li t0,12 %
000013fe : 0fc0b317;   % 2771: 	sw t0,PlayerObjDelay,t1 %
000013ff : 20532423;   % 2771:  %
00001400 : 00300513;   % 2774: 	li a0,3 # id do objeto (fogo) %
00001401 : 00100593;   % 2776: 	li a1,1 # quantidade do objeto %
00001402 : 0fc0b617;   % 2777: 	lw a2,PlayerPosX %
00001403 : 1c462603;   % 2777:  %
00001404 : 0fc0b697;   % 2778: 	lw a3,PlayerLastDir %
00001405 : 2186a683;   % 2778:  %
00001406 : fedfa0ef;   % 2779: 	jal BuildObject %
00001407 : 0040006f;   % 2781: 	j DoneFireObjs %
00001408 : 050000ef;   % 2784: 	jal CheckNextSprAnim %
00001409 : 0014f493;   % 2785: 	andi s1,s1,1 %
0000140a : 0fc25a17;   % 2787: 	la s4,kirbyFireAtt0 %
0000140b : 6c8a0a13;   % 2787:  %
0000140c : 00300b13;   % 2788: 	li s6,3 %
0000140d : 00048c63;   % 2789: 	beq s1,zero,GotPlayerSprite %
0000140e : 00100293;   % 2790: 	li t0,1 %
0000140f : 0fc25a17;   % 2791: 	la s4,kirbyFireAtt1 %
00001410 : 7c0a0a13;   % 2791:  %
00001411 : 00300b13;   % 2792: 	li s6,3 %
00001412 : 00548263;   % 2793: 	beq s1,t0,GotPlayerSprite %
00001413 : 0fc0b297;   % 2796: 	sh s1,PlayerAnimCount,t0 %
00001414 : 18929e23;   % 2796:  %
00001415 : 0fc0b297;   % 2797: 	sw s4,PlayerSprite,t0	# armazena o endereco do novo sprite no PlayerSprite %
00001416 : 1b42a023;   % 2797:  %
00001417 : 0fc0b297;   % 2798: 	sh s6,PlayerMaxFrame,t0  # armazena a duracao da animacao atual %
00001418 : 19629a23;   % 2798:  %
00001419 : 00012083;   % 2801: 	lw ra,0(sp) %
0000141a : 00410113;   % 2802: 	addi sp,sp,4			# recupera endereco de retorno da pilha %
0000141b : 00008067;   % 2804: 	ret %
0000141c : 0fc0b317;   % 2810: 	lw t1,PlayerLastFrame %
0000141d : 18c32303;   % 2810:  %
0000141e : 406a83b3;   % 2812: 	sub t2,s5,t1	 %
0000141f : 0123ca63;   % 2813: 	blt t2,s2,KeepSprAnim %
00001420 : 00090863;   % 2814: 	beq s2,zero,KeepSprAnim		# se estiver chegando de um sprite fixo %
00001421 : 0fc0b297;   % 2816: 	sw s5,PlayerLastFrame,t0 %
00001422 : 1752ac23;   % 2816:  %
00001423 : 00148493;   % 2817: 	addi s1,s1,1 		# avanca o contador de sprites da animacao se a duracao do sprite passou %
00001424 : 00008067;   % 2820: 	ret %
00001425 : fd810113;   % 2827: 	addi sp,sp,-40 %
00001426 : 00112023;   % 2828: 	sw ra,0(sp) %
00001427 : 00812223;   % 2829: 	sw s0,4(sp) %
00001428 : 00912423;   % 2830: 	sw s1,8(sp) %
00001429 : 01212623;   % 2831: 	sw s2,12(sp) %
0000142a : 01312823;   % 2832: 	sw s3,16(sp) %
0000142b : 01412a23;   % 2833: 	sw s4,20(sp) %
0000142c : 01512c23;   % 2834: 	sw s5,24(sp) %
0000142d : 01612e23;   % 2835: 	sw s6,28(sp) %
0000142e : 03712023;   % 2836: 	sw s7,32(sp) %
0000142f : 03812223;   % 2837: 	sw s8,36(sp) %
00001430 : 00d00a33;   % 2839: 	mv s4,a3 %
00001431 : 0fc0b297;   % 2841: 	la t0,tempPos %
00001432 : 1cc28293;   % 2841:  %
00001433 : 00b2a023;   % 2842: 	sw a1,0(t0) %
00001434 : 00029403;   % 2843: 	lh s0,0(t0) %
00001435 : 00229483;   % 2844: 	lh s1,2(t0)			# salva posicao inicial do sprite %
00001436 : 00851903;   % 2846: 	lh s2,8(a0)			# salva a distancia X para iniciar a desenhar o sprite %
00001437 : 00a51983;   % 2847: 	lh s3,10(a0)			# salva a distancia Y para iniciar a desenhar o sprite %
00001438 : 0fc0b297;   % 2849: 	lhu t0,OffsetX %
00001439 : 0dc2d283;   % 2849:  %
0000143a : 40540e33;   % 2850: 	sub t3,s0,t0			# subtrai o X do sprite pelo offset X %
0000143b : 412e0e33;   % 2851: 	sub t3,t3,s2			# subtrai a distancia X para iniciar o sprite %
0000143c : 0fc0b297;   % 2852: 	lhu t0,OffsetY			 %
0000143d : 0ce2d283;   % 2852:  %
0000143e : 40548eb3;   % 2853: 	sub t4,s1,t0			# subtrai o Y do sprite pelo offset Y %
0000143f : 413e8eb3;   % 2854: 	sub t4,t4,s3			# subtrai a distancia Y para iniciar o sprite %
00001440 : 14000313;   % 2856: 	li t1,320 %
00001441 : 0f000393;   % 2857: 	li t2,240 %
00001442 : 0fc0b697;   % 2861: 	lw a3,BitmapFrame %
00001443 : 0886a683;   % 2861:  %
00001444 : 03d30333;   % 2863: 	mul t1,t1,t4 %
00001445 : 00668bb3;   % 2864: 	add s7,a3,t1 			# adiciona y ao endereco do bitmap e armazena esse valor em s7 para evitar o underflow de sprites no bitmap %
00001446 : 104b8c13;   % 2865: 	addi s8,s7,260 # old: 316	# s8, valor maximo da linha, para evitar o overflow de sprites %
00001447 : 01cb82b3;   % 2867: 	add t0,s7,t3 			# adiciona x ao endereco do bitmap %
00001448 : 00c50313;   % 2869: 	addi t1,a0,12		# endereco do sprite mais spriteHeader %
00001449 : 000003b3;   % 2871: 	mv t2,zero %
0000144a : 00000e33;   % 2872: 	mv t3,zero %
0000144b : 00052e83;   % 2874: 	lw t4,0(a0) 			# guarda a largura do sprite %
0000144c : 00452f03;   % 2875: 	lw t5,4(a0) 			# guarda a altura do sprite %
0000144d : 060a0863;   % 2877: 	beq s4,zero,PreLinhaRev %
0000144e : 02d2ce63;   % 2880: 	blt t0,a3,SkipOOBLinha %
0000144f : 0372cc63;   % 2881: 	blt t0,s7,SkipOOBLinha %
00001450 : 025c4a63;   % 2882: 	bgt t0,s8,SkipOOBLinha %
00001451 : 00034f83;   % 2884: 	lbu t6,0(t1) 			# guarda um pixel do sprite (nao pode ser word por nao estar sempre alinhado com o endereco) %
00001452 : 0d0000ef;   % 2885: 	jal CheckColors %
00001453 : 01f28023;   % 2886: 	sb t6,0(t0) 			# desenha no bitmap display (4 pixels separadamente) %
00001454 : 00134f83;   % 2887: 	lbu t6,1(t1) 			 %
00001455 : 0c4000ef;   % 2888: 	jal CheckColors %
00001456 : 01f280a3;   % 2889: 	sb t6,1(t0) 			 %
00001457 : 00234f83;   % 2890: 	lbu t6,2(t1) 			 %
00001458 : 0b8000ef;   % 2891: 	jal CheckColors %
00001459 : 01f28123;   % 2892: 	sb t6,2(t0) 			 %
0000145a : 00334f83;   % 2893: 	lbu t6,3(t1) 			 %
0000145b : 0ac000ef;   % 2894: 	jal CheckColors %
0000145c : 01f281a3;   % 2895: 	sb t6,3(t0) 			 %
0000145d : 00428293;   % 2897: 	addi t0,t0,4 			# avanca o endereco do bitmap display em 4 %
0000145e : 00430313;   % 2898: 	addi t1,t1,4 			# avanca o endereco da imagem em 4 %
0000145f : 004e0e13;   % 2900: 	addi t3,t3,4 			# avanca o contador de colunas em 4 %
00001460 : fbde4ce3;   % 2901: 	blt t3,t4,Linha 		# enquanto a linha nao estiver completa, continua desenhando ela %
00001461 : 140b8b93;   % 2903: 	addi s7,s7,320 %
00001462 : 140c0c13;   % 2904: 	addi s8,s8,320 %
00001463 : 14028293;   % 2906: 	addi t0,t0,320 			# avanca para a proxima linha %
00001464 : 41d282b3;   % 2907: 	sub t0,t0,t4 			# subtrai a largura do sprite %
00001465 : 00000e33;   % 2909: 	mv t3,zero 			# reseta o contador de colunas %
00001466 : 00138393;   % 2910: 	addi t2,t2,1 			# avanca o contador de linhas em 1 %
00001467 : f9e3cee3;   % 2911: 	blt t2,t5,Linha 		# enquanto o contador de linhas for menor que a altura repete a funcao %
00001468 : 1200006f;   % 2912: 	j FimPrint %
00001469 : 01d282b3;   % 2915: 	add t0,t0,t4 %
0000146a : ffc28293;   % 2916: 	addi t0,t0,-4 %
0000146b : 02d2ce63;   % 2919: 	blt t0,a3,SkipOOBLinhaRev %
0000146c : 0372cc63;   % 2920: 	blt t0,s7,SkipOOBLinhaRev %
0000146d : 025c4a63;   % 2921: 	bgt t0,s8,SkipOOBLinhaRev %
0000146e : 00334f83;   % 2923: 	lbu t6,3(t1) 			# guarda um pixel do sprite (nao pode ser word por nao estar sempre alinhado com o endereco) %
0000146f : 05c000ef;   % 2924: 	jal CheckColors %
00001470 : 01f28023;   % 2925: 	sb t6,0(t0) 			# desenha no bitmap display (4 pixels separadamente) %
00001471 : 00234f83;   % 2926: 	lbu t6,2(t1) 			 %
00001472 : 050000ef;   % 2927: 	jal CheckColors %
00001473 : 01f280a3;   % 2928: 	sb t6,1(t0) 			 %
00001474 : 00134f83;   % 2929: 	lbu t6,1(t1) 			 %
00001475 : 044000ef;   % 2930: 	jal CheckColors %
00001476 : 01f28123;   % 2931: 	sb t6,2(t0) 			 %
00001477 : 00034f83;   % 2932: 	lbu t6,0(t1) 			 %
00001478 : 038000ef;   % 2933: 	jal CheckColors %
00001479 : 01f281a3;   % 2934: 	sb t6,3(t0)  %
0000147a : ffc28293;   % 2937: 	addi t0,t0,-4 			# recua o endereco do bitmap display em 4 %
0000147b : 00430313;   % 2938: 	addi t1,t1,4 			# avanca o endereco da imagem em 4 %
0000147c : 004e0e13;   % 2940: 	addi t3,t3,4 			# avanca o contador de colunas em 4 %
0000147d : fbde4ce3;   % 2941: 	blt t3,t4,LinhaReverse 		# enquanto a linha nao estiver completa, continua desenhando ela %
0000147e : 140b8b93;   % 2943: 	addi s7,s7,320 %
0000147f : 140c0c13;   % 2944: 	addi s8,s8,320 %
00001480 : 14028293;   % 2946: 	addi t0,t0,320 			# avanca para a proxima linha %
00001481 : 01d282b3;   % 2947: 	add t0,t0,t4 %
00001482 : 00000e33;   % 2949: 	mv t3,zero 			# reseta o contador de colunas %
00001483 : 00138393;   % 2950: 	addi t2,t2,1 			# avanca o contador de linhas em 1 %
00001484 : f9e3cee3;   % 2951: 	blt t2,t5,LinhaReverse 		# enquanto o contador de linhas for menor que a altura repete a funcao %
00001485 : 0ac0006f;   % 2952: 	j FimPrint %
00001486 : 0a070263;   % 2956: 	beq a4,zero,EndCheckColors %
00001487 : 00100b13;   % 2957: 	li s6,1 %
00001488 : 01670c63;   % 2958: 	beq a4,s6,FireColors %
00001489 : 00200b13;   % 2959: 	li s6,2 %
0000148a : 03670a63;   % 2960: 	beq a4,s6,IceColors %
0000148b : fff00b13;   % 2961: 	li s6,-1 %
0000148c : 05670e63;   % 2962: 	beq a4,s6,SpecialColors %
0000148d : 0880006f;   % 2963: 	j EndCheckColors %
0000148e : 09f00b13;   % 2966: 	li s6,159 %
0000148f : 016f8863;   % 2967: 	beq t6,s6,DarkFire %
00001490 : 0ef00b13;   % 2968: 	li s6,239 %
00001491 : 016f8863;   % 2969: 	beq t6,s6,LightFire %
00001492 : 0740006f;   % 2970: 	j EndCheckColors %
00001493 : 06700f93;   % 2971: DarkFire: li t6,103 %
00001494 : 06c0006f;   % 2972: 	j EndCheckColors %
00001495 : 0b700f93;   % 2973: LightFire: li t6,183 %
00001496 : 0640006f;   % 2974: 	j EndCheckColors %
00001497 : 000f8c63;   % 2977: 	beq t6,zero,BorderIce %
00001498 : 09f00b13;   % 2978: 	li s6,159 %
00001499 : 016f8c63;   % 2979: 	beq t6,s6,DarkIce %
0000149a : 0ef00b13;   % 2980: 	li s6,239 %
0000149b : 016f8c63;   % 2981: 	beq t6,s6,LightIce %
0000149c : 04c0006f;   % 2982: 	j EndCheckColors %
0000149d : 08100f93;   % 2983: BorderIce: li t6,129 %
0000149e : 0440006f;   % 2984: 	j EndCheckColors %
0000149f : 0eb00f93;   % 2985: DarkIce: li t6,235 %
000014a0 : 03c0006f;   % 2986: 	j EndCheckColors %
000014a1 : 0ff00f93;   % 2987: LightIce: li t6,255 %
000014a2 : 0340006f;   % 2988: 	j EndCheckColors %
000014a3 : 000f8c63;   % 2991: 	beq t6,zero,BorderSp %
000014a4 : 09f00b13;   % 2992: 	li s6,159 %
000014a5 : 016f8c63;   % 2993: 	beq t6,s6,DarkSp %
000014a6 : 0ef00b13;   % 2994: 	li s6,239 %
000014a7 : 016f8c63;   % 2995: 	beq t6,s6,LightSp %
000014a8 : 01c0006f;   % 2996: 	j EndCheckColors %
000014a9 : 01400f93;   % 2997: BorderSp: li t6,20 %
000014aa : 0140006f;   % 2998: 	j EndCheckColors %
000014ab : 0b700f93;   % 2999: DarkSp: li t6,183 %
000014ac : 00c0006f;   % 3000: 	j EndCheckColors %
000014ad : 0ff00f93;   % 3001: LightSp: li t6,255 %
000014ae : 0040006f;   % 3002: 	j EndCheckColors	 %
000014af : 00008067;   % 3005: 	ret %
000014b0 : 00012083;   % 3008: 	lw ra,0(sp) %
000014b1 : 00412403;   % 3009: 	lw s0,4(sp) %
000014b2 : 00812483;   % 3010: 	lw s1,8(sp) %
000014b3 : 00c12903;   % 3011: 	lw s2,12(sp) %
000014b4 : 01012983;   % 3012: 	lw s3,16(sp) %
000014b5 : 01412a03;   % 3013: 	lw s4,20(sp) %
000014b6 : 01812a83;   % 3014: 	lw s5,24(sp) %
000014b7 : 01c12b03;   % 3015: 	lw s6,28(sp) %
000014b8 : 02012b83;   % 3016: 	lw s7,32(sp) %
000014b9 : 02412c03;   % 3017: 	lw s8,36(sp) %
000014ba : 02810113;   % 3018: 	addi sp,sp,40 %
000014bb : 00008067;   % 3020: 	ret  %
000014bc : fdc10113;   % 3025: 	addi sp,sp,-36 %
000014bd : 00112023;   % 3026: 	sw ra,0(sp) %
000014be : 00812223;   % 3027: 	sw s0,4(sp) %
000014bf : 00912423;   % 3028: 	sw s1,8(sp) %
000014c0 : 01212623;   % 3029: 	sw s2,12(sp) %
000014c1 : 01312823;   % 3030: 	sw s3,16(sp) %
000014c2 : 01412a23;   % 3031: 	sw s4,20(sp) %
000014c3 : 01512c23;   % 3032: 	sw s5,24(sp) %
000014c4 : 01612e23;   % 3033: 	sw s6,28(sp) %
000014c5 : 03712023;   % 3034: 	sw s7,32(sp) %
000014c6 : 00455583;   % 3036: 	lhu a1,4(a0)			# a1, posicao X original do sprite %
000014c7 : 00655603;   % 3037: 	lhu a2,6(a0)			# a2, posicao Y original do sprite %
000014c8 : 0045d413;   % 3039: 	srli s0,a1,4			# s0, divisao da posicao X por 16 %
000014c9 : 00465493;   % 3041: 	srli s1,a2,4			# s1, divisao da posicao Y por 16 %
000014ca : 0fc0b297;   % 3043: 	lw t0,ColGridAtual	 %
000014cb : e8c2a283;   % 3043:  %
000014cc : 0002a303;   % 3044: 	lw t1,0(t0)			# t1, tamanho do mapa de tiles %
000014cd : 026483b3;   % 3045: 	mul t2,s1,t1			 %
000014ce : 00c28293;   % 3047: 	addi t0,t0,12 %
000014cf : 008282b3;   % 3048: 	add t0,t0,s0			# adiciona o numero de colunas de tiles %
000014d0 : 007282b3;   % 3049: 	add t0,t0,t2			# adiciona o numero de linhas de tiles %
000014d1 : 0002ce83;   % 3051: 	lbu t4,0(t0)			# valor do primeiro tile -> t4 = 0x00000011 %
000014d2 : 0012ce03;   % 3053: 	lbu t3,1(t0)			# valor do segundo tile %
000014d3 : 008e1e13;   % 3054: 	slli t3,t3,8 %
000014d4 : 01ce8eb3;   % 3055: 	add t4,t4,t3			# t4 = 0x00002211 %
000014d5 : 006282b3;   % 3057: 	add t0,t0,t1			 %
000014d6 : 0002ce03;   % 3058: 	lbu t3,0(t0)			# valor do terceiro tile %
000014d7 : 010e1e13;   % 3059: 	slli t3,t3,16 %
000014d8 : 01ce8eb3;   % 3060: 	add t4,t4,t3			# t4 = 0x00332211 %
000014d9 : 0012ce03;   % 3062: 	lbu t3,1(t0)			# valor do quarto tile %
000014da : 018e1e13;   % 3063: 	slli t3,t3,24 %
000014db : 01ce8eb3;   % 3064: 	add t4,t4,t3			# t4 = 0x44332211 %
000014dc : 0fc0b917;   % 3066: 	la s2,BGTileCodes		# s2, endereco com todos os codigos de tile %
000014dd : eb090913;   % 3066:  %
000014de : 01d92023;   % 3067: 	sw t4,0(s2)			 %
000014df : 000009b3;   % 3068: 	mv s3,zero			# s3, contador de tiles %
000014e0 : 00094a03;   % 3071: 	lbu s4,0(s2) 			# s4, codigo do tile atual %
000014e1 : 0fc0b797;   % 3072: 	lw a5,ColSprtStartAdd 		# a5, endereco inicial dos sprites de colisao %
000014e2 : e347a783;   % 3072:  %
000014e3 : 10c00293;   % 3074: 	li t0,268 %
000014e4 : 025a0333;   % 3075: 	mul t1,s4,t0 %
000014e5 : 006787b3;   % 3076: 	add a5,a5,t1			# tamanho total dos tiles (268) e multiplicado pelo ID e somado ao endereco inicial dos tiles de colisao para encontrar o tile atual %
000014e6 : 0fc28297;   % 3078: 	la t0,collisionRender %
000014e7 : 9b828293;   % 3078:  %
000014e8 : 00c28293;   % 3079: 	addi t0,t0,12 %
000014e9 : 00200313;   % 3080: 	li t1,2 %
000014ea : 00098663;   % 3082: 	beq s3,zero,LeftColTile %
000014eb : 00698463;   % 3083: 	beq s3,t1,LeftColTile %
000014ec : 01028293;   % 3085: 	addi t0,t0,16 %
000014ed : 0069c463;   % 3087: 	blt s3,t1,UpperColTile %
000014ee : 20028293;   % 3089: 	addi t0,t0,512 %
000014ef : 000003b3;   % 3092: 	mv t2,zero			# t2, contador de colunas %
000014f0 : 00000e33;   % 3093: 	mv t3,zero			# t3, contador de linhas %
000014f1 : 01000e93;   % 3094: 	li t4,16 %
000014f2 : 01000f13;   % 3095: 	li t5,16 %
000014f3 : 00f00333;   % 3097: 	mv t1,a5			# se a5 for um sprite de colisao ele e salvo normalmente %
000014f4 : 00c30313;   % 3098: 	addi t1,t1,12  %
000014f5 : 0040006f;   % 3099: 	j SaveTileRenderCol %
000014f6 : 00032f83;   % 3103: 	lw t6,0(t1) 			# guarda uma word do tile %
000014f7 : 01f2a023;   % 3104: 	sw t6,0(t0) 			# salva no mapa de colisao %
000014f8 : 00428293;   % 3106: 	addi t0,t0,4			# avanca o endereco do bitmap em 4 %
000014f9 : 00430313;   % 3107: 	addi t1,t1,4 			# avanca o endereco da imagem em 4		 %
000014fa : 00438393;   % 3109: 	addi t2,t2,4 			# avanca o contador de colunas em 4 %
000014fb : ffd3c6e3;   % 3110: 	blt t2,t4,SaveTileRenderCol 	# enquanto a linha nao estiver completa, continua desenhando ela %
000014fc : 01028293;   % 3112: 	addi t0,t0,16 			# avanca para a proxima linha do mapa de colisao %
000014fd : 000003b3;   % 3114: 	mv t2,zero 			# reseta o contador de colunas %
000014fe : 001e0e13;   % 3115: 	addi t3,t3,1 			# avanca o contador de linhas em 1 %
000014ff : fdee4ee3;   % 3116: 	blt t3,t5,SaveTileRenderCol 	# enquanto o contador de linhas for menor que a altura repete a funcao %
00001500 : 00190913;   % 3119: 	addi s2,s2,1			# avanca para o proximo codigo de tile %
00001501 : 00198993;   % 3120: 	addi s3,s3,1			# avanca o contador de tiles %
00001502 : 00400393;   % 3122: 	li t2,4 %
00001503 : 00798463;   % 3123: 	beq s3,t2,FimTileRenderCol	# se ja foram todos os 4 tiles segue com o UpdateCollision %
00001504 : f71ff06f;   % 3124: 	j LoopTileRenderCol %
00001505 : 0fc0ba97;   % 3129: 	la s5,Obj0ID %
00001506 : beca8a93;   % 3129:  %
00001507 : 01400293;   % 3130: 	li t0,20 %
00001508 : 405a8ab3;   % 3131: 	sub s5,s5,t0 %
00001509 : fff00b13;   % 3132: 	li s6,-1 			# s6, contador de objetos a desenhar, inicia em -1 para analisar o jogador %
0000150a : fff00b93;   % 3134: 	li s7,-1			# ID do jogador tratado como -1 %
0000150b : 0fc0b297;   % 3135: 	la t0,PlayerHP %
0000150c : d9c28293;   % 3135:  %
0000150d : 00550a63;   % 3136: 	beq a0,t0,RenderNextObj 	# skipa o jogador se estiver atualizando a colisao para ele %
0000150e : 0240006f;   % 3137: 	j RenderObjAtual %
0000150f : 01550663;   % 3140: 	beq a0,s5,RenderNextObj %
00001510 : 000aab83;   % 3142: 	lw s7,0(s5) # ID %
00001511 : 000b9c63;   % 3144: 	bne s7,zero,RenderObjAtual %
00001512 : 001b0b13;   % 3147: 	addi s6,s6,1 %
00001513 : 01400293;   % 3148: 	li t0,20 %
00001514 : 1a5b0e63;   % 3149: 	beq s6,t0,FimUpdateCollision %
00001515 : 014a8a93;   % 3151: 	addi s5,s5,20 %
00001516 : fe5ff06f;   % 3152: 	j IterateRenderObjCols %
00001517 : 01e00293;   % 3155: 	li t0,30 %
00001518 : 005bca63;   % 3156: 	blt s7,t0,RenderNotEnemy %
00001519 : 00aa9283;   % 3157: 	lh t0,10(s5) # Status, se for um inimigo e o status dele for 0 significa que esta inativo %
0000151a : fe5050e3;   % 3158: 	ble t0,zero,RenderNextObj %
0000151b : 00300313;   % 3160: 	li t1,3 %
0000151c : fc628ce3;   % 3161: 	beq t0,t1,RenderNextObj # se objeto estiver sendo puxado ele nao precisa aparecer no mapa de colisao, pois na vez dele que e verificado se ele atingiu o jogador  %
0000151d : fff00293;   % 3166: 	li t0,-1 %
0000151e : 09f00793;   % 3167: 	li a5,159 %
0000151f : 0a5b8263;   % 3168: 	beq s7,t0,GotCollision %
00001520 : 00200293;   % 3170: 	li t0,2 %
00001521 : 08400793;   % 3171: 	li a5,132 %
00001522 : 085b8c63;   % 3172: 	beq s7,t0,GotCollision %
00001523 : 00300293;   % 3174: 	li t0,3 %
00001524 : 01700793;   % 3175: 	li a5,23 %
00001525 : 085b8663;   % 3176: 	beq s7,t0,GotCollision %
00001526 : 00400293;   % 3178: 	li t0,4 %
00001527 : 0f800793;   % 3179: 	li a5,248 %
00001528 : 085b8063;   % 3180: 	beq s7,t0,GotCollision %
00001529 : 00600293;   % 3182: 	li t0,6 %
0000152a : 03f00793;   % 3183: 	li a5,63 %
0000152b : 065b8a63;   % 3184: 	beq s7,t0,GotCollision %
0000152c : 00700293;   % 3186: 	li t0,7 %
0000152d : 03f00793;   % 3187: 	li a5,63 %
0000152e : 065b8463;   % 3188: 	beq s7,t0,GotCollision %
0000152f : 01e00293;   % 3190: 	li t0,30 %
00001530 : 05500793;   % 3191: 	li a5,85 %
00001531 : 045b8e63;   % 3192: 	beq s7,t0,GotCollision %
00001532 : 01f00293;   % 3194: 	li t0,31 %
00001533 : 05500793;   % 3195: 	li a5,85 %
00001534 : 045b8863;   % 3196: 	beq s7,t0,GotCollision %
00001535 : 02000293;   % 3198: 	li t0,32 %
00001536 : 05500793;   % 3199: 	li a5,85 %
00001537 : 045b8263;   % 3200: 	beq s7,t0,GotCollision %
00001538 : 00900293;   % 3202: 	li t0,9 %
00001539 : 00400793;   % 3203: 	li a5,4 %
0000153a : 025b8c63;   % 3204: 	beq s7,t0,GotCollision %
0000153b : 00a00293;   % 3206: 	li t0,10 %
0000153c : 04800793;   % 3207: 	li a5,72 %
0000153d : 025b8663;   % 3208: 	beq s7,t0,GotCollision %
0000153e : 00800293;   % 3210: 	li t0,8 %
0000153f : 05500793;   % 3211: 	li a5,85 %
00001540 : 025b8063;   % 3212: 	beq s7,t0,GotCollision %
00001541 : 02100293;   % 3214: 	li t0,33 %
00001542 : 05500793;   % 3215: 	li a5,85 %
00001543 : 005b8a63;   % 3216: 	beq s7,t0,GotCollision %
00001544 : 00b00293;   % 3218: 	li t0,11 %
00001545 : 03f00793;   % 3219: 	li a5,63 # por precaucao, para evitar que inimigos nao sejam atingidos quando deveriam %
00001546 : 005b8463;   % 3220: 	beq s7,t0,GotCollision %
00001547 : f2dff06f;   % 3223: 	j RenderNextObj %
00001548 : 000bc863;   % 3229: 	blt s7,zero,GetPlayerPosColUpdate %
00001549 : 004a9583;   % 3230: 	lh a1,4(s5) # PosX %
0000154a : 006a9603;   % 3231: 	lh a2,6(s5) # PosY %
0000154b : 0140006f;   % 3232: 	j NotPlayerCol %
0000154c : 0fc0b297;   % 3234: 	la t0,PlayerHP %
0000154d : c9828293;   % 3234:  %
0000154e : 00429583;   % 3235: 	lh a1,4(t0) %
0000154f : 00629603;   % 3236: 	lh a2,6(t0) %
00001550 : 00441693;   % 3239: 	slli a3,s0,4 %
00001551 : 00449713;   % 3240: 	slli a4,s1,4		# posicoes do mapa de colisao sao multiplicadas por 16 para encontrar a posicao dele nas coordenadas base %
00001552 : 01000f93;   % 3261: 	li t6,16 %
00001553 : 01f68293;   % 3263: 	addi t0,a3,31 %
00001554 : 40b28333;   % 3264: 	sub t1,t0,a1 %
00001555 : 00f58293;   % 3266: 	addi t0,a1,15 %
00001556 : 40d283b3;   % 3267: 	sub t2,t0,a3 %
00001557 : 00600eb3;   % 3269: 	mv t4,t1 %
00001558 : 01feca63;   % 3270: 	blt t4,t6,GotSizeXObjRender %
00001559 : 00700eb3;   % 3271: 	mv t4,t2 %
0000155a : 01fec663;   % 3272: 	blt t4,t6,GotSizeXObjRender # impossivel de mais de um dos valores ser menor que 16 %
0000155b : 01f00eb3;   % 3273: 	mv t4,t6 %
0000155c : fffe8e93;   % 3274: 	addi t4,t4,-1 %
0000155d : 01f70293;   % 3277: 	addi t0,a4,31 %
0000155e : 40c28333;   % 3278: 	sub t1,t0,a2 %
0000155f : 00f60293;   % 3280: 	addi t0,a2,15 %
00001560 : 40e283b3;   % 3281: 	sub t2,t0,a4 %
00001561 : 00600f33;   % 3283: 	mv t5,t1 %
00001562 : 01ff4a63;   % 3284: 	blt t5,t6,GotSizeYObjRender %
00001563 : 00700f33;   % 3285: 	mv t5,t2 %
00001564 : 01ff4663;   % 3286: 	blt t5,t6,GotSizeYObjRender # impossivel de mais de um dos valores ser menor que 16 %
00001565 : 01f00f33;   % 3287: 	mv t5,t6 %
00001566 : ffff0f13;   % 3288: 	addi t5,t5,-1 %
00001567 : 001e8e93;   % 3291: 	addi t4,t4,1 %
00001568 : 001f0f13;   % 3292: 	addi t5,t5,1 # para serem tratados como valores de tamanho e necessario adicionar 1 para cada um deles %
00001569 : ebd052e3;   % 3294: 	ble t4,zero,RenderNextObj # # # # # # # %
0000156a : ebe050e3;   % 3295: 	ble t5,zero,RenderNextObj # se qualquer um dos tamanhos for negativo ou 0 quer dizer que o sprite esta fora do mapa de colisao %
0000156b : 40d583b3;   % 3297: 	sub t2,a1,a3 %
0000156c : 00704463;   % 3298: 	bgt t2,zero,GotPosXObjRender %
0000156d : 000003b3;   % 3299: 	mv t2,zero %
0000156e : 40e60e33;   % 3302: 	sub t3,a2,a4 %
0000156f : 01c04463;   % 3303: 	bgt t3,zero,GotPosYObjRender %
00001570 : 00000e33;   % 3304: 	mv t3,zero %
00001571 : 005e1e13;   % 3307: 	slli t3,t3,5 # multiplica a posicao Y por 32, ja que e a largura do mapa de colisao %
00001572 : 0fc27297;   % 3309: 	la t0,collisionRender %
00001573 : 78828293;   % 3309:  %
00001574 : 00c28293;   % 3310: 	addi t0,t0,12 %
00001575 : 007282b3;   % 3311: 	add t0,t0,t2 %
00001576 : 01c282b3;   % 3312: 	add t0,t0,t3 # adiciona posicao do sprite ao endereco do mapa de colisao %
00001577 : 000003b3;   % 3314: 	mv t2,zero # contador de colunas %
00001578 : 00000e33;   % 3315: 	mv t3,zero # contador de linhas %
00001579 : 00f28023;   % 3319: 	sb a5,0(t0) 			# salva a cor da colisao no render de colisao %
0000157a : 00128293;   % 3321: 	addi t0,t0,1			# avanca o endereco do mapa de colisao em 1		 %
0000157b : 00138393;   % 3323: 	addi t2,t2,1 			# avanca o contador de colunas em 1 %
0000157c : ffd3cae3;   % 3324: 	blt t2,t4,SaveObjRenderCol 	# enquanto a linha nao estiver completa, continua desenhando ela %
0000157d : 02028293;   % 3326: 	addi t0,t0,32 			# avanca para a proxima linha do mapa de colisao %
0000157e : 41d282b3;   % 3327: 	sub t0,t0,t4 			# subtrai largura do sprite %
0000157f : 000003b3;   % 3329: 	mv t2,zero 			# reseta o contador de colunas %
00001580 : 001e0e13;   % 3330: 	addi t3,t3,1 			# avanca o contador de linhas em 1 %
00001581 : ffee40e3;   % 3331: 	blt t3,t5,SaveObjRenderCol 	# enquanto o contador de linhas for menor que a altura repete a funcao %
00001582 : e41ff06f;   % 3333: 	j RenderNextObj %
00001583 : 00012083;   % 3337: 	lw ra,0(sp) %
00001584 : 00412403;   % 3338: 	lw s0,4(sp) %
00001585 : 00812483;   % 3339: 	lw s1,8(sp) %
00001586 : 00c12903;   % 3340: 	lw s2,12(sp) %
00001587 : 01012983;   % 3341: 	lw s3,16(sp) %
00001588 : 01412a03;   % 3342: 	lw s4,20(sp) %
00001589 : 01812a83;   % 3343: 	lw s5,24(sp) %
0000158a : 01c12b03;   % 3344: 	lw s6,28(sp) %
0000158b : 02012b83;   % 3345: 	lw s7,32(sp) %
0000158c : 02410113;   % 3346: 	addi sp,sp,36 %
0000158d : 00008067;   % 3348: 	ret  %
0000158e : 0fc0b297;   % 3357: 	lhu t0,OffsetX %
0000158f : b842d283;   % 3357:  %
00001590 : 00f2f413;   % 3358: 	andi s0,t0,0xf		# s0, resto de offset X por 16 %
00001591 : 0042d493;   % 3359: 	srli s1,t0,4		# s1, divisao de offset X por 16 %
00001592 : 0fc0b317;   % 3361: 	lhu t1,OffsetY %
00001593 : b7635303;   % 3361:  %
00001594 : 00f37913;   % 3362: 	andi s2,t1,0xf		# s2, resto de offset Y por 16 %
00001595 : 00435993;   % 3363: 	srli s3,t1,4		# s3, divisao de offset Y por 16 %
00001596 : 00000a33;   % 3365: 	mv s4,zero		# s4, contador de colunas de tiles %
00001597 : 00000ab3;   % 3366: 	mv s5,zero		# s5, contador de linhas de tiles %
00001598 : 00000b33;   % 3367: 	mv s6,zero		# s6, contador total de tiles %
00001599 : 01200b93;   % 3369: 	li s7,18		# s7, numero maximo de tiles na horizontal %
0000159a : 01000c13;   % 3370: 	li s8,16		# s8, numero maximo de tiles na vertical %
0000159b : 12000c93;   % 3371: 	li s9,288		# s9, numero total de tiles que precisam ser analisados (21 na horizontal * 16 na vertical) old: 336 (21x16) %
0000159c : 1f9b0c63;   % 3375: 	beq s6,s9,FimPrintMapa	# continua o codigo quando todos os tiles forem analisados %
0000159d : 0fc0b517;   % 3377: 	lw a0,MapGridAtual %
0000159e : b3452503;   % 3377:  %
0000159f : 00052303;   % 3379: 	lw t1,0(a0) %
000015a0 : 00950533;   % 3381: 	add a0,a0,s1		# adiciona offsetX/16 %
000015a1 : 01450533;   % 3382: 	add a0,a0,s4		# adiciona contador de colunas %
000015a2 : 013002b3;   % 3384: 	mv t0,s3		# adiciona offsetY/16 %
000015a3 : 015282b3;   % 3385: 	add t0,t0,s5		# adiciona contador de linhas %
000015a4 : 026282b3;   % 3386: 	mul t0,t0,t1		# multiplica por 40 (tamanho das linhas do mapa completo) %
000015a5 : 00550533;   % 3387: 	add a0,a0,t0		 %
000015a6 : 00c50513;   % 3390: 	addi a0,a0,12 %
000015a7 : 00054283;   % 3391: 	lbu t0,0(a0)		# armazena o valor do tile a ser salvo %
000015a8 : 0fc0b597;   % 3393: 	lw a1,TileSprtStartAdd 		# a1, endereco inicial dos sprites %
000015a9 : b105a583;   % 3393:  %
000015aa : 10c00313;   % 3395: 	li t1,268 %
000015ab : 02628333;   % 3396: 	mul t1,t0,t1 %
000015ac : 006585b3;   % 3397: 	add a1,a1,t1			# tamanho total dos tiles (268) e multiplicado pelo ID e somado ao endereco inicial dos tiles de colisao para encontrar o tile atual %
000015ad : fff00613;   % 3400: 	addi a2,zero,-1 %
000015ae : 000a0a63;   % 3401: 	beq s4,zero,DoneColOffset	# define a2 como -1 se for a primeira coluna %
000015af : 00100613;   % 3403: 	addi a2,zero,1		 %
000015b0 : fffb8293;   % 3404: 	addi t0,s7,-1 %
000015b1 : 005a0463;   % 3405: 	beq s4,t0,DoneColOffset		# define a2 como 1 se for a ultima coluna %
000015b2 : 00000633;   % 3407: 	mv a2,zero			# define a2 como 0 se for a qualquer uma das outras colunas  %
000015b3 : fff00693;   % 3410: 	addi a3,zero,-1 %
000015b4 : 000a8a63;   % 3411: 	beq s5,zero,DoneLineOffset	# define a2 como -1 se for a primeira linha %
000015b5 : 00100693;   % 3413: 	addi a3,zero,1 %
000015b6 : fffc0293;   % 3414: 	addi t0,s8,-1 %
000015b7 : 005a8463;   % 3415: 	beq s5,t0,DoneLineOffset	# define a2 como 1 se for a ultima linha %
000015b8 : 000006b3;   % 3417: 	mv a3,zero			# define a3 como 0 se for a qualquer uma das outras linhas %
000015b9 : 02061463;   % 3420: 	bne a2,zero,SaveTile		# se for uma coluna inicial ou final vai para SaveTile %
000015ba : 02069263;   % 3421: 	bne a3,zero,SaveTile		# se for uma linha inicial ou final vai para SaveTile %
000015bb : 0ec0006f;   % 3423: 	j SaveCenterTile		# tiles do meio s�o mais simples ent�o podem ser salvos mais rapidamente %
000015bc : 001a0a13;   % 3426: 	addi s4,s4,1			# avanca contador de colunas de tiles %
000015bd : 001b0b13;   % 3427: 	addi s6,s6,1			# avanca contador total de tile %
000015be : 017a5463;   % 3428: 	bge s4,s7,NextLine		# se estiver no fim de uma linha vai para a proxima %
000015bf : f75ff06f;   % 3429: 	j LoopBuild %
000015c0 : 00000a33;   % 3432: 	mv s4,zero		 %
000015c1 : 001a8a93;   % 3433: 	addi s5,s5,1			# avanca contador de linhas %
000015c2 : f69ff06f;   % 3434: 	j LoopBuild %
000015c3 : 01400333;   % 3439: 	mv t1,s4 %
000015c4 : 00431313;   % 3441: 	slli t1,t1,4			# multiplica numero da coluna por 16 (tamanho dos tiles) %
000015c5 : 00064463;   % 3442: 	blt a2,zero,FirstCol %
000015c6 : 40830333;   % 3444: 	sub t1,t1,s0			# resto do offset X subtra�do do bitmap (puxa para a esquerda as colunas, se ocorrer na 1a = erro) %
000015c7 : 015003b3;   % 3447: 	mv t2,s5 %
000015c8 : 14000293;   % 3448: 	li t0,320 %
000015c9 : 025383b3;   % 3449: 	mul t2,t2,t0			# multiplica numero da linha por 320 (tamanho das linhas do bitmap) %
000015ca : 00439393;   % 3450: 	slli t2,t2,4			# multiplica numero da linha por 16 (tamanho dos tiles) %
000015cb : 0006c663;   % 3451: 	blt a3,zero,FirstLine %
000015cc : 025902b3;   % 3453: 	mul t0,s2,t0 %
000015cd : 405383b3;   % 3454: 	sub t2,t2,t0			# resto do offset Y vezes 320 subtra�do do bitmap (sobe as linhas, se ocorrer na 1a = erro) %
000015ce : 0fc0b717;   % 3457: 	lw a4,BitmapFrame %
000015cf : a5872703;   % 3457:  %
000015d0 : 006702b3;   % 3458: 	add t0,a4,t1 %
000015d1 : 007282b3;   % 3459: 	add t0,t0,t2 			# t0 = endereco base para salvar o sprite do tile %
000015d2 : 00c58313;   % 3461: 	addi t1,a1,12		# endereco do sprite mais spriteHeader %
000015d3 : 000003b3;   % 3463: 	mv t2,zero			# contador de colunas do tile %
000015d4 : 00000e33;   % 3464: 	mv t3,zero			# contador de linhas do tile	 %
000015d5 : 408c0eb3;   % 3466: 	sub t4,s8,s0			 %
000015d6 : 00064863;   % 3467: 	blt a2,zero,SetColSize		# na 1a coluna a largura do tile sera 16-OffsetX %
000015d7 : 00800eb3;   % 3468: 	mv t4,s0 %
000015d8 : 00c04463;   % 3469: 	bgt a2,zero,SetColSize		# na ultima coluna a largura do tile sera OffsetX %
000015d9 : 0005ae83;   % 3470: 	lw t4,0(a1)			# nas outras colunas a largura do tile e 16 %
000015da : f80e84e3;   % 3472: 	beq t4,zero,FimSaveTile 	# se a ultima coluna nao estiver aparecendo, t4 = 0 e o tile pode ser skipado %
000015db : 412c0f33;   % 3474: 	sub t5,s8,s2		 %
000015dc : 0006c863;   % 3475: 	blt a3,zero,SetLineSize		# na 1a linha a altura do tile ser� 16-OffsetY %
000015dd : 01200f33;   % 3476: 	mv t5,s2 %
000015de : 00d04463;   % 3477: 	bgt a3,zero,SetLineSize		# na 1a linha a altura do tile ser� OffsetY %
000015df : 0045af03;   % 3478: 	lw t5,4(a1)			# nas outras linhas a altura do tile � 16 %
000015e0 : f60f08e3;   % 3480: 	beq t5,zero,FimSaveTile 	# se a ultima linha nao estiver aparecendo, t5 = 0 e o tile pode ser skipado %
000015e1 : 0006d863;   % 3482: 	bge a3,zero,NotFirstLine %
000015e2 : 01200fb3;   % 3484: 	mv t6,s2 %
000015e3 : 004f9f93;   % 3485: 	slli t6,t6,4 %
000015e4 : 01f30333;   % 3486: 	add t1,t1,t6			# adiciona o tamanho das linhas fora da tela ao endereco do sprite %
000015e5 : 00065463;   % 3491: 	bge a2,zero,NotFirstCol %
000015e6 : 00830333;   % 3493: 	add t1,t1,s0			# adiciona resto do offset X ao endereco do sprite %
000015e7 : 00034f83;   % 3498: 	lbu t6,0(t1) 			# guarda um pixel do sprite %
000015e8 : 01f28023;   % 3499: 	sb t6,0(t0) 			# desenha no bitmap display um pixel do sprite (j� que tamanho das linhas pode variar de 1 a 16) %
000015e9 : 00128293;   % 3501: 	addi t0,t0,1 			# avanca o endereco do bitmap display %
000015ea : 00130313;   % 3502: 	addi t1,t1,1 			# avanca o endereco da imagem %
000015eb : 00138393;   % 3504: 	addi t2,t2,1 			# avanca o contador de colunas %
000015ec : ffd3c6e3;   % 3505: 	blt t2,t4,TileLine 		# enquanto a linha nao estiver completa, continua desenhando ela %
000015ed : 00c05663;   % 3507: 	ble a2,zero,NotLastCol %
000015ee : 01830333;   % 3509: 	add t1,t1,s8			 %
000015ef : 40830333;   % 3510: 	sub t1,t1,s0			# se estiver na ultima coluna, adiciona 16-OffsetX ao endereco do sprite %
000015f0 : 14028293;   % 3513: 	addi t0,t0,320 			# avanca para a proxima linha do bitmap %
000015f1 : 41d282b3;   % 3514: 	sub t0,t0,t4 			# subtrai a largura do sprite %
000015f2 : 000003b3;   % 3516: 	mv t2,zero 			# reseta o contador de colunas %
000015f3 : 001e0e13;   % 3517: 	addi t3,t3,1 			# avanca o contador de linhas %
000015f4 : fdee42e3;   % 3518: 	blt t3,t5,PreTileLine 		# enquanto o contador de linhas for menor que a altura repete a funcao %
000015f5 : f1dff06f;   % 3520: 	j FimSaveTile  %
000015f6 : 01400333;   % 3525: 	mv t1,s4 %
000015f7 : 00431313;   % 3526: 	slli t1,t1,4			# multiplica numero da coluna por 16 (tamanho dos tiles) %
000015f8 : 40830333;   % 3527: 	sub t1,t1,s0			# subtrai endereco do bitmap por OffsetX (ja que nesse caso ele sempre sera no minimo 16)  %
000015f9 : 015003b3;   % 3529: 	mv t2,s5 %
000015fa : 14000293;   % 3530: 	li t0,320 %
000015fb : 025383b3;   % 3531: 	mul t2,t2,t0			# multiplica numero da linha por 320 (tamanho das linhas do bitmap) %
000015fc : 00439393;   % 3532: 	slli t2,t2,4			# multiplica numero da linha por 16 (tamanho dos tiles) %
000015fd : 025902b3;   % 3533: 	mul t0,s2,t0 %
000015fe : 405383b3;   % 3534: 	sub t2,t2,t0			# subtrai endereco do bitmap por 320xOffsetY (ja que nesse caso ele sempre sera no minimo 320x16)  %
000015ff : 0fc0b297;   % 3536: 	lw t0,BitmapFrame %
00001600 : 9942a283;   % 3536:  %
00001601 : 006282b3;   % 3537: 	add t0,t0,t1 %
00001602 : 007282b3;   % 3538: 	add t0,t0,t2 			# t0, endereco base para salvar o sprite do tile %
00001603 : 00c58313;   % 3540: 	addi t1,a1,12		# endereco do sprite mais spriteHeader %
00001604 : 000003b3;   % 3542: 	mv t2,zero			# contador de colunas do tile %
00001605 : 00000e33;   % 3543: 	mv t3,zero			# contador de linhas do tile	 %
00001606 : 0005ae83;   % 3545: 	lw t4,0(a1) 			# guarda a largura do tile %
00001607 : 0045af03;   % 3546: 	lw t5,4(a1)			# guarda a altura do tile %
00001608 : 00034f83;   % 3550: 	lbu t6,0(t1) 			# guarda um pixel do sprite (nao pode ser word por nao estar sempre alinhado com o endereco) %
00001609 : 01f28023;   % 3551: 	sb t6,0(t0) 			# desenha no bitmap display (4 pixels separadamente) %
0000160a : 00134f83;   % 3552: 	lbu t6,1(t1) 			 %
0000160b : 01f280a3;   % 3553: 	sb t6,1(t0) %
0000160c : 00234f83;   % 3554: 	lbu t6,2(t1) 			 %
0000160d : 01f28123;   % 3555: 	sb t6,2(t0) %
0000160e : 00334f83;   % 3556: 	lbu t6,3(t1) 			 %
0000160f : 01f281a3;   % 3557: 	sb t6,3(t0) %
00001610 : 00428293;   % 3559: 	addi t0,t0,4			# avanca o endereco do bitmap display %
00001611 : 00430313;   % 3560: 	addi t1,t1,4 			# avanca o endereco da imagem %
00001612 : 00438393;   % 3562: 	addi t2,t2,4 			# avanca o contador de colunas %
00001613 : fdd3cae3;   % 3563: 	blt t2,t4,CenterTileLine 	# enquanto a linha nao estiver completa, continua desenhando ela %
00001614 : 14028293;   % 3565: 	addi t0,t0,320 			# avanca para a proxima linha do bitmap %
00001615 : 41d282b3;   % 3566: 	sub t0,t0,t4 			# subtrai a largura do sprite %
00001616 : 000003b3;   % 3568: 	mv t2,zero 			# reseta o contador de colunas %
00001617 : 001e0e13;   % 3569: 	addi t3,t3,1 			# avanca o contador de linhas %
00001618 : fdee40e3;   % 3570: 	blt t3,t5,CenterTileLine 	# enquanto o contador de linhas for menor que a altura repete a funcao %
00001619 : e8dff06f;   % 3572: 	j FimSaveTile  %
0000161a : 00008067;   % 3575: 	ret %
0000161b : 000102b7;   % 3580: 	li t0,0xffff %
0000161c : fff28293;   % 3580:  %
0000161d : 0055f333;   % 3581: 	and t1,a1,t0 %
0000161e : 14000293;   % 3583: 	li t0,320 %
0000161f : 0105d393;   % 3584: 	srli t2,a1,16 %
00001620 : 025383b3;   % 3585: 	mul t2,t2,t0 %
00001621 : 0fc0b297;   % 3587: 	lw t0,BitmapFrame %
00001622 : 90c2a283;   % 3587:  %
00001623 : 006282b3;   % 3588: 	add t0,t0,t1 %
00001624 : 007282b3;   % 3589: 	add t0,t0,t2 			# t0, endereco base para salvar o sprite %
00001625 : 00c50313;   % 3591: 	addi t1,a0,12		# endereco do sprite mais spriteHeader %
00001626 : 000003b3;   % 3593: 	mv t2,zero			# contador de colunas do tile %
00001627 : 00000e33;   % 3594: 	mv t3,zero			# contador de linhas do tile	 %
00001628 : 00052e83;   % 3596: 	lw t4,0(a0) 			# guarda a largura do tile %
00001629 : 00452f03;   % 3597: 	lw t5,4(a0)			# guarda a altura do tile %
0000162a : 00030f83;   % 3601: 	lb t6,0(t1) 			# guarda um pixel do sprite (nao pode ser word por nao estar sempre alinhado com o endereco) %
0000162b : 01f28023;   % 3602: 	sb t6,0(t0) 			# desenha no bitmap display (4 pixels separadamente) %
0000162c : 00128293;   % 3604: 	addi t0,t0,1			# avanca o endereco do bitmap display %
0000162d : 00130313;   % 3605: 	addi t1,t1,1 			# avanca o endereco da imagem %
0000162e : 00138393;   % 3607: 	addi t2,t2,1 			# avanca o contador de colunas %
0000162f : ffd3c6e3;   % 3608: 	blt t2,t4,SimpleLine 	# enquanto a linha nao estiver completa, continua desenhando ela %
00001630 : 14028293;   % 3610: 	addi t0,t0,320 			# avanca para a proxima linha do bitmap %
00001631 : 41d282b3;   % 3611: 	sub t0,t0,t4 			# subtrai a largura do sprite %
00001632 : 000003b3;   % 3613: 	mv t2,zero 			# reseta o contador de colunas %
00001633 : 001e0e13;   % 3614: 	addi t3,t3,1 			# avanca o contador de linhas %
00001634 : fdee4ce3;   % 3615: 	blt t3,t5,SimpleLine 	# enquanto o contador de linhas for menor que a altura repete a funcao %
00001635 : 00008067;   % 3618: 	ret %
00001636 : 14000293;   % 3623: 	li t0,320 %
00001637 : 02c28333;   % 3624: 	mul t1,t0,a2 %
00001638 : 0fc0b297;   % 3626: 	lw t0,BitmapFrame %
00001639 : 8b02a283;   % 3626:  %
0000163a : 00b282b3;   % 3627: 	add t0,t0,a1 %
0000163b : 006282b3;   % 3628: 	add t0,t0,t1 			# t0, endereco base para salvar o sprite %
0000163c : 000003b3;   % 3630: 	mv t2,zero			# contador de colunas do tile %
0000163d : 00000e33;   % 3631: 	mv t3,zero			# contador de linhas do tile	 %
0000163e : 00d00eb3;   % 3633: 	mv t4,a3 			# guarda a largura do tile %
0000163f : 00e00f33;   % 3634: 	mv t5,a4			# guarda a altura do tile %
00001640 : 02079663;   % 3636: 	bnez a5,QuickPrint %
00001641 : 00a28023;   % 3640: 	sb a0,0(t0) 			# desenha um byte no bitmap display %
00001642 : 00128293;   % 3642: 	addi t0,t0,1			# avanca o endereco do bitmap display %
00001643 : 00138393;   % 3644: 	addi t2,t2,1 			# avanca o contador de colunas %
00001644 : ffd3cae3;   % 3645: 	blt t2,t4,FillLine 		# enquanto a linha nao estiver completa, continua desenhando ela %
00001645 : 14028293;   % 3647: 	addi t0,t0,320 			# avanca para a proxima linha do bitmap %
00001646 : 41d282b3;   % 3648: 	sub t0,t0,t4 			# subtrai a largura do sprite %
00001647 : 000003b3;   % 3650: 	mv t2,zero 			# reseta o contador de colunas %
00001648 : 001e0e13;   % 3651: 	addi t3,t3,1 			# avanca o contador de linhas %
00001649 : ffee40e3;   % 3652: 	blt t3,t5,FillLine 		# enquanto o contador de linhas for menor que a altura repete a funcao %
0000164a : 0440006f;   % 3654: 	j FimFillPrint %
0000164b : 00a00fb3;   % 3657: 	mv t6,a0 %
0000164c : 00851313;   % 3658: 	slli t1,a0,8 %
0000164d : 01f30333;   % 3659: 	add t1,t1,t6 %
0000164e : 00831313;   % 3660: 	slli t1,t1,8 %
0000164f : 01f30333;   % 3661: 	add t1,t1,t6 %
00001650 : 00831313;   % 3662: 	slli t1,t1,8 %
00001651 : 01f30333;   % 3663: 	add t1,t1,t6 # 0xa0a0a0a0 %
00001652 : 0062a023;   % 3666: 	sw t1,0(t0) 			# desenha um byte no bitmap display %
00001653 : 00428293;   % 3668: 	addi t0,t0,4			# avanca o endereco do bitmap display %
00001654 : 00438393;   % 3670: 	addi t2,t2,4 			# avanca o contador de colunas %
00001655 : ffd3cae3;   % 3671: 	blt t2,t4,QuickFillLine 		# enquanto a linha nao estiver completa, continua desenhando ela %
00001656 : 14028293;   % 3673: 	addi t0,t0,320 			# avanca para a proxima linha do bitmap %
00001657 : 41d282b3;   % 3674: 	sub t0,t0,t4 			# subtrai a largura do sprite %
00001658 : 000003b3;   % 3676: 	mv t2,zero 			# reseta o contador de colunas %
00001659 : 001e0e13;   % 3677: 	addi t3,t3,1 			# avanca o contador de linhas %
0000165a : ffee40e3;   % 3678: 	blt t3,t5,QuickFillLine 		# enquanto o contador de linhas for menor que a altura repete a funcao %
0000165b : 00008067;   % 3681: 	ret %
END;
