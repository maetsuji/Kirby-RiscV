DEPTH = 16384;
WIDTH = 32;
ADDRESS_RADIX = HEX;
DATA_RADIX = HEX;
CONTENT
BEGIN
00000000 : ff2002b7;   % 89: 	li t0,0xff200604	# endereco que define qual frame esta sendo apresentado %
00000001 : 60428293;   % 89:  %
00000002 : 00100313;   % 90: 	li t1,1 %
00000003 : 01e00db7;   % 93: 	li s11,0x01E00280 	# s11,  grid 640x480 %
00000004 : 280d8d93;   % 93:  %
00000005 : 335010ef;   % 99: 	jal PrintMapa		# imprime o mapa na inicializacao %
00000006 : 0fc11297;   % 101: 	la t0,kirbyIdle0 %
00000007 : 63828293;   % 101:  %
00000008 : 0fc10317;   % 102: 	la t1,PlayerSprite %
00000009 : 01830313;   % 102:  %
0000000a : 00532023;   % 103: 	sw t0,0(t1) %
0000000b : 0fc15297;   % 105: 	la t0,playerCol %
0000000c : 88028293;   % 105:  %
0000000d : 0fc10317;   % 106: 	la t1,PlayerColSprite %
0000000e : 00830313;   % 106:  %
0000000f : 00532023;   % 107: 	sw t0,0(t1) %
00000010 : 0fc10517;   % 109: 	lw a0,PlayerSprite %
00000011 : ff852503;   % 109:  %
00000012 : 0fc10597;   % 110: 	lw a1,PlayerPosX %
00000013 : fc85a583;   % 110:  %
00000014 : 0fc10617;   % 111: 	lw a2,PlayerColSprite %
00000015 : fec62603;   % 111:  %
00000016 : 0fc10697;   % 112: 	lw a3,PlayerLastDir %
00000017 : ff86a683;   % 112:  %
00000018 : 0fc10717;   % 113: 	lw a4,PlayerPowState %
00000019 : fc472703;   % 113:  %
0000001a : 718010ef;   % 114: 	jal Print		# imprime o jogador na inicializacao %
0000001b : c0102573;   % 118: 	csrr a0,3073 %
0000001c : 0fc10297;   % 119: 	sw a0,LastGlblTime,t0	# define o primeiro valor do timer global, que sera comparado no Clock %
0000001d : fea2a223;   % 119:  %
0000001e : 04c000ef;   % 122: 	jal Clock %
0000001f : 668000ef;   % 124: 	jal ChangeFrame 	# incompleto %
00000020 : 698000ef;   % 126: 	jal KeyPress		# confere teclas apertadas, atualizando posicao do jogador e offset %
00000021 : 784000ef;   % 128: 	jal PlayerControls	# com base na ultima tecla apertada, salva em s10 pelo KeyPress, realiza as acoes de movimento do jogador %
00000022 : 499000ef;   % 130: 	jal PlayerAnimation %
00000023 : 2bd010ef;   % 136: 	jal PrintMapa		# imprime o mapa usando o offset %
00000024 : 0fc10517;   % 138: 	lw a0,PlayerSprite %
00000025 : fa852503;   % 138:  %
00000026 : 0fc10597;   % 139: 	lw a1,PlayerPosX %
00000027 : f785a583;   % 139:  %
00000028 : 0fc10617;   % 140: 	lw a2,PlayerColSprite %
00000029 : f9c62603;   % 140:  %
0000002a : 0fc10697;   % 141: 	lw a3,PlayerLastDir %
0000002b : fa86a683;   % 141:  %
0000002c : 0fc10717;   % 142: 	lw a4,PlayerPowState %
0000002d : f7472703;   % 142:  %
0000002e : 6c8010ef;   % 143: 	jal Print		# imprime o jogador em sua nova posicao %
0000002f : 294000ef;   % 145: 	jal DrawObjects %
00000030 : fb9ff06f;   % 147: 	j Main %
00000031 : c0102573;   % 153: 	csrr a0,3073 %
00000032 : 00a00433;   % 154: 	mv s0,a0 %
00000033 : 0fc10297;   % 156: 	lw t0,LastGlblTime %
00000034 : f882a283;   % 156:  %
00000035 : 405502b3;   % 157: 	sub t0,a0,t0		# subtrai o novo tempo global pelo ultimo valor salvo, para definir quantos milissegundos passaram desde o ultimo frame %
00000036 : 01400313;   % 168: 	li t1,20		# a cada 20 ms o frame avanca em 1, o que equivale a 50 fps %
00000037 : fe62c4e3;   % 169: 	blt t0,t1,Clock		# enquanto nao avancar o frame o codigo fica nesse loop %
00000038 : 0fc10297;   % 170: 	sw s0,LastGlblTime,t0	# atualiza o novo valor de tempo global %
00000039 : f682aa23;   % 170:  %
0000003a : 0fc10497;   % 172: 	lw s1,FrameCount %
0000003b : f704a483;   % 172:  %
0000003c : 00148493;   % 173: 	addi s1,s1,1 %
0000003d : 0fc10297;   % 174: 	sw s1,FrameCount,t0 	# avanca o contador de frames %
0000003e : f692a223;   % 174:  %
0000003f : 0fc10517;   % 180: 	lhu a0,PlayerAnimCount %
00000040 : f3055503;   % 180:  %
00000041 : 00100893;   % 181: 	li a7,1 %
00000042 : 0fc10517;   % 184: 	la a0,endl %
00000043 : f5c50513;   % 184:  %
00000044 : 00400893;   % 185: 	li a7,4 %
00000045 : 0fc10517;   % 188: 	lhu a0,PlayerAnimTransit %
00000046 : f1a55503;   % 188:  %
00000047 : 00100893;   % 189: 	li a7,1 %
00000048 : 0fc10517;   % 192: 	la a0,endl %
00000049 : f4450513;   % 192:  %
0000004a : 00400893;   % 193: 	li a7,4 %
0000004b : 0fc10517;   % 196: 	lhu a0,PlayerPowState %
0000004c : ef855503;   % 196:  %
0000004d : 00100893;   % 197: 	li a7,1 %
0000004e : 0fc10517;   % 200: 	la a0,endl %
0000004f : f2c50513;   % 200:  %
00000050 : 00400893;   % 201: 	li a7,4 %
00000051 : 0fc10517;   % 204: 	lhu a0,PlayerAnim %
00000052 : ee455503;   % 204:  %
00000053 : 00100893;   % 205: 	li a7,1 %
00000054 : 0fc10517;   % 208: 	la a0,endl %
00000055 : f1450513;   % 208:  %
00000056 : 00400893;   % 209: 	li a7,4 %
00000057 : 0fc10517;   % 212: 	la a0,endl %
00000058 : f0850513;   % 212:  %
00000059 : 00400893;   % 213: 	li a7,4 %
0000005a : 00008067;   % 216: 	ret			# depois de avancar o frame segue para o resto do codigo da main, basicamente definindo o framerate do jogo como 50 fps %
0000005b : ff410113;   % 219: 	addi sp,sp,-12 %
0000005c : 00112023;   % 220: 	sw ra,0(sp) %
0000005d : 00812223;   % 221: 	sw s0,4(sp) %
0000005e : 00912423;   % 222: 	sw s1,8(sp) %
0000005f : 00451403;   % 224: 	lh s0,4(a0) # posX %
00000060 : 00651483;   % 225: 	lh s1,6(a0) # posY %
00000061 : 0fc10297;   % 227: 	lhu t0,OffsetX %
00000062 : e842d283;   % 227:  %
00000063 : 0fc10317;   % 228: 	lhu t1,OffsetY %
00000064 : e7e35303;   % 228:  %
00000065 : 40540433;   % 230: 	sub s0,s0,t0 %
00000066 : 406484b3;   % 231: 	sub s1,s1,t1 %
00000067 : 02044863;   % 233: 	blt s0,zero,OutOfBounds #LeftOOB %
00000068 : 13000293;   % 234: 	li t0,304 %
00000069 : 0282c463;   % 235: 	bgt s0,t0,OutOfBounds #RightOOB %
0000006a : 0204c263;   % 237: 	blt s1,zero,OutOfBounds #TopOOB %
0000006b : 0e000293;   % 238: 	li t0,224 ### TODO trocar ao adicionar o menu %
0000006c : 0092ce63;   % 239: 	bgt s1,t0,OutOfBounds #BottomOOB %
0000006d : 00600293;   % 242: 	li t0,6 %
0000006e : 00052303;   % 243: 	lw t1,0(a0) %
0000006f : 0262d463;   % 244: 	ble t1,t0,EndCheckbounds # objetos nao precisam ter o sstatus atualizado %
00000070 : 00100293;   % 246: 	li t0,1 %
00000071 : 00551523;   % 247: 	sh t0,10(a0) # atualiza status para 1 %
00000072 : 01c0006f;   % 248: 	j EndCheckbounds %
00000073 : 00059663;   % 251: 	bne a1,zero,DeactivateObj %
00000074 : 00052023;   % 254: 	sw zero,0(a0) %
00000075 : 0100006f;   % 255: 	j EndCheckbounds %
00000076 : 00051523;   % 259: 	sh zero,10(a0) # atualiza status para 0 %
00000077 : 01052283;   % 260: 	lw t0,16(a0) # carrega posicao original do objeto %
00000078 : 00552223;   % 261: 	sw t0,4(a0) # atualiza posicao atual do objeto para a original %
00000079 : 00012083;   % 265: 	lw ra,0(sp) %
0000007a : 00412403;   % 266: 	lw s0,4(sp) %
0000007b : 00812483;   % 267: 	lw s1,8(sp) %
0000007c : 00c10113;   % 268: 	addi sp,sp,12 %
0000007d : 00008067;   % 270: 	ret %
0000007e : ff010113;   % 275: 	addi sp,sp,-16 %
0000007f : 00112023;   % 276: 	sw ra,0(sp) %
00000080 : 00812223;   % 277: 	sw s0,4(sp) %
00000081 : 00912423;   % 278: 	sw s1,8(sp) %
00000082 : 01212623;   % 279: 	sw s2,12(sp) %
00000083 : 0fc14417;   % 281: 	la s0,Obj0ID %
00000084 : e6040413;   % 281:  %
00000085 : 000004b3;   % 282: 	mv s1,zero			# s1, contador de objetos geral %
00000086 : 00042903;   % 285: 	lw s2,0(s0) %
00000087 : 02090063;   % 286: 	beq s2,zero,NewInstance %
00000088 : 0040006f;   % 287: 	j BuildNextObj %
00000089 : 00148493;   % 290: 	addi s1,s1,1 %
0000008a : 00a00293;   % 291: 	li t0,10 %
0000008b : 10548663;   % 292: 	beq s1,t0,FimBuildObject %
0000008c : 10058463;   % 293: 	beq a1,zero,FimBuildObject %
0000008d : 01440413;   % 295: 	addi s0,s0,20 %
0000008e : fe1ff06f;   % 296: 	j CheckBuildObjs %
0000008f : fff58593;   % 299: 	addi a1,a1,-1 %
00000090 : 00100893;   % 301: 	li a7,1 %
00000091 : 00100293;   % 304: 	li t0,1 %
00000092 : 02550863;   % 305: 	beq a0,t0,BuildDust %
00000093 : 00200293;   % 306: 	li t0,2 %
00000094 : 04550463;   % 307: 	beq a0,t0,BuildTinyDust %
00000095 : 00300293;   % 308: 	li t0,3 %
00000096 : 06550063;   % 309: 	beq a0,t0,BuildFire %
00000097 : 00400293;   % 310: 	li t0,4 %
00000098 : 06550c63;   % 311: 	beq a0,t0,BuildIce %
00000099 : 00500293;   % 312: 	li t0,5 %
0000009a : 08550863;   % 313: 	beq a0,t0,BuildPullArea %
0000009b : 00600293;   % 314: 	li t0,6 %
0000009c : 0a550463;   % 315: 	beq a0,t0,BuildAir %
0000009d : 00700293;   % 316: 	li t0,7 %
0000009e : 00a42023;   % 321: 	sw a0,0(s0) # id %
0000009f : 00c42223;   % 323: 	sw a2,4(s0) # posX e posY, pois e possivel armazenar diretamente a word com a posicao de referencia %
000000a0 : 00d41423;   % 325: 	sh a3,8(s0) # dir %
000000a1 : 00041523;   % 327: 	sh zero,10(s0) # movePat %
000000a2 : 00400293;   % 329: 	li t0,4 %
000000a3 : 00541623;   % 330: 	sh t0,12(s0) # lifeFrames %
000000a4 : 00041723;   % 332: 	sh zero,14(s0) # anim %
000000a5 : f91ff06f;   % 334: 	j BuildNextObj %
000000a6 : 00a42023;   % 338: 	sw a0,0(s0) # id %
000000a7 : 00c42223;   % 340: 	sw a2,4(s0) # posX e posY, pois e possivel armazenar diretamente a word com a posicao de referencia %
000000a8 : 00d41423;   % 342: 	sh a3,8(s0) # dir %
000000a9 : 00e41523;   % 344: 	sh a4,10(s0) # movePat # a4 = 0, 1, 2, 3 -> esq cima, dir baixo, dir cima, esq baixo  %
000000aa : 00500293;   % 346: 	li t0,5 %
000000ab : 00541623;   % 347: 	sh t0,12(s0) # lifeFrames %
000000ac : 00041723;   % 349: 	sh zero,14(s0) # anim %
000000ad : f71ff06f;   % 351: 	j BuildNextObj %
000000ae : 00a42023;   % 355: 	sw a0,0(s0) # id %
000000af : 00c42223;   % 357: 	sw a2,4(s0) # posX e posY, pois e possivel armazenar diretamente a word com a posicao de referencia %
000000b0 : 00d41423;   % 359: 	sh a3,8(s0) # dir %
000000b1 : 00e41523;   % 361: 	sh a4,10(s0) # movePat, para o fogo: 0 = para cima, 1 = para baixo %
000000b2 : 00a00293;   % 363: 	li t0,10 %
000000b3 : 00541623;   % 364: 	sh t0,12(s0) # lifeFrames %
000000b4 : 00041723;   % 366: 	sh zero,14(s0) # anim %
000000b5 : f51ff06f;   % 368: 	j BuildNextObj %
000000b6 : 00a42023;   % 372: 	sw a0,0(s0) # id %
000000b7 : 00c42223;   % 374: 	sw a2,4(s0) # posX e posY, pois e possivel armazenar diretamente a word com a posicao de referencia %
000000b8 : 00d41423;   % 376: 	sh a3,8(s0) # dir %
000000b9 : 00041523;   % 378: 	sh zero,10(s0) # movePat %
000000ba : 00800293;   % 380: 	li t0,8 %
000000bb : 00541623;   % 381: 	sh t0,12(s0) # lifeFrames %
000000bc : 00041723;   % 383: 	sh zero,14(s0) # anim %
000000bd : f31ff06f;   % 385: 	j BuildNextObj %
000000be : 00a42023;   % 389: 	sw a0,0(s0) # id %
000000bf : 00c42223;   % 391: 	sw a2,4(s0) # posX e posY, pois e possivel armazenar diretamente a word com a posicao de referencia %
000000c0 : 00d41423;   % 393: 	sh a3,8(s0) # dir %
000000c1 : 00041523;   % 395: 	sh zero,10(s0) # movePat %
000000c2 : 00500293;   % 397: 	li t0,5 %
000000c3 : 00541623;   % 398: 	sh t0,12(s0) # lifeFrames %
000000c4 : 00041723;   % 400: 	sh zero,14(s0) # anim %
000000c5 : f11ff06f;   % 402: 	j BuildNextObj %
000000c6 : 00a42023;   % 406: 	sw a0,0(s0) # id %
000000c7 : 00c42223;   % 408: 	sw a2,4(s0) # posX e posY, pois e possivel armazenar diretamente a word com a posicao de referencia %
000000c8 : 00d41423;   % 410: 	sh a3,8(s0) # dir %
000000c9 : 00041523;   % 412: 	sh zero,10(s0) # movePat %
000000ca : 01800293;   % 414: 	li t0,24 %
000000cb : 00541623;   % 415: 	sh t0,12(s0) # lifeFrames %
000000cc : 00041723;   % 417: 	sh zero,14(s0) # anim %
000000cd : ef1ff06f;   % 419: 	j BuildNextObj %
000000ce : 00012083;   % 423: 	lw ra,0(sp) %
000000cf : 00412403;   % 424: 	lw s0,4(sp) %
000000d0 : 00812483;   % 425: 	lw s1,8(sp) %
000000d1 : 00c12903;   % 426: 	lw s2,12(sp) %
000000d2 : 01010113;   % 427: 	addi sp,sp,16 %
000000d3 : 00008067;   % 429: 	ret %
000000d4 : ffc10113;   % 434: 	addi sp,sp,-4 %
000000d5 : 00112023;   % 435: 	sw ra,0(sp) %
000000d6 : 0fc14417;   % 437: 	la s0,Obj0ID %
000000d7 : d1440413;   % 437:  %
000000d8 : 000004b3;   % 438: 	mv s1,zero			# s1, contador de objetos geral %
000000d9 : 00042903;   % 441: 	lw s2,0(s0) %
000000da : 01200533;   % 443: 	mv a0,s2 %
000000db : 00100893;   % 444: 	li a7,1 %
000000dc : 0fc10517;   % 447: 	la a0,endl %
000000dd : cf450513;   % 447:  %
000000de : 00400893;   % 448: 	li a7,4 %
000000df : 00091c63;   % 451: 	bne s2,zero,DrawObjAtual %
000000e0 : 00148493;   % 454: 	addi s1,s1,1 %
000000e1 : 00a00293;   % 455: 	li t0,10 %
000000e2 : 34548263;   % 456: 	beq s1,t0,FimDrawObjects %
000000e3 : 01440413;   % 458: 	addi s0,s0,20 %
000000e4 : fd5ff06f;   % 459: 	j IterateDrawObjs %
000000e5 : 00042983;   % 463: 	lw s3,0(s0) # ID %
000000e6 : 00800533;   % 465: 	mv a0,s0 %
000000e7 : 000005b3;   % 466: 	mv a1,zero %
000000e8 : dcdff0ef;   % 467: 	jal CheckScreenBounds %
000000e9 : 00441a03;   % 470: 	lh s4,4(s0) # PosX %
000000ea : 00641a83;   % 471: 	lh s5,6(s0) # PosY %
000000eb : 00845b03;   % 472: 	lhu s6,8(s0) # Dir %
000000ec : 00a45b83;   % 473: 	lhu s7,10(s0) # Status %
000000ed : 00c45c03;   % 474: 	lhu s8,12(s0) # LifeFrames %
000000ee : 00e45c83;   % 475: 	lhu s9,14(s0) # Anim %
000000ef : 00100293;   % 478: 	li t0,1 %
000000f0 : 02598a63;   % 479: 	beq s3,t0,DrawDust %
000000f1 : 00200293;   % 480: 	li t0,2 %
000000f2 : 06598a63;   % 481: 	beq s3,t0,DrawTinyDust %
000000f3 : 00300293;   % 482: 	li t0,3 %
000000f4 : 1c598663;   % 483: 	beq s3,t0,DrawFire %
000000f5 : 00400293;   % 484: 	li t0,4 %
000000f6 : 24598863;   % 485: 	beq s3,t0,DrawIce %
000000f7 : 00500293;   % 486: 	li t0,5 %
000000f8 : 28598663;   % 487: 	beq s3,t0,DrawPullArea %
000000f9 : 00600293;   % 488: 	li t0,6 %
000000fa : 14598463;   % 489: 	beq s3,t0,DrawAir %
000000fb : 00700293;   % 490: 	li t0,7 %
000000fc : f91ff06f;   % 493: 	j DrawNextObj %
000000fd : 00c00293;   % 497: 	li t0,12 %
000000fe : 000b0463;   % 498: 	beq s6,zero,DustBreakRtoL %
000000ff : ff400293;   % 499: 	li t0,-12 %
00000100 : 005a0a33;   % 501: 	add s4,s4,t0 # define em qual lado do kirby vai aparecer %
00000101 : 004a8313;   % 503: 	addi t1,s5,4  %
00000102 : 01031293;   % 504: 	slli t0,t1,16 %
00000103 : 014285b3;   % 505: 	add a1,t0,s4 %
00000104 : 0fc16617;   % 507: 	la a2,emptyCol %
00000105 : 88c60613;   % 507:  %
00000106 : 016006b3;   % 508: 	mv a3,s6 %
00000107 : 00000733;   % 509: 	mv a4,zero %
00000108 : 0fc14517;   % 511: 	la a0,dust0 # frames com vida 4 e 3 %
00000109 : d1450513;   % 511:  %
0000010a : 00200293;   % 512: 	li t0,2 %
0000010b : 2782ca63;   % 513: 	bgt s8,t0,DrawObjReady %
0000010c : 0fc14517;   % 514: 	la a0,dust1 # frames com vida 2 e 1 %
0000010d : d9050513;   % 514:  %
0000010e : 2680006f;   % 515: 	j DrawObjReady %
0000010f : 020b8663;   % 518: 	beq s7,zero,DrawTinyLU # 0 = esq cima %
00000110 : 00100293;   % 519: 	li t0,1 %
00000111 : 025b8c63;   % 520: 	beq s7,t0,DrawTinyMU # 1 = meio cima %
00000112 : 00200293;   % 521: 	li t0,2 %
00000113 : 045b8263;   % 522: 	beq s7,t0,DrawTinyRU # 2 = dir cima %
00000114 : 00300293;   % 523: 	li t0,3 %
00000115 : 045b8863;   % 524: 	beq s7,t0,DrawTinyLD # 3 = esq baixo %
00000116 : 00400293;   % 525: 	li t0,4 %
00000117 : 045b8e63;   % 526: 	beq s7,t0,DrawTinyMD # 4 = meio baixo %
00000118 : 00500293;   % 527: 	li t0,5 %
00000119 : 065b8463;   % 528: 	beq s7,t0,DrawTinyRD # 5 = dir baixo  %
0000011a : 01400313;   % 530: 	li t1,20 %
0000011b : ff600393;   % 531: 	li t2,-10 %
0000011c : ffe00e13;   % 532: 	li t3,-2 %
0000011d : 001a8a93;   % 533: 	addi s5,s5,1 %
0000011e : 0640006f;   % 534: 	j DoneTinyPos %
0000011f : 02400313;   % 536: 	li t1,36 %
00000120 : ff600393;   % 537: 	li t2,-10 %
00000121 : ffc00e13;   % 538: 	li t3,-4 %
00000122 : 001a8a93;   % 539: 	addi s5,s5,1 %
00000123 : 0500006f;   % 540: 	j DoneTinyPos %
00000124 : 03400313;   % 542: 	li t1,52 %
00000125 : ff400393;   % 543: 	li t2,-12 %
00000126 : ffd00e13;   % 544: 	li t3,-3 %
00000127 : 001a8a93;   % 545: 	addi s5,s5,1 %
00000128 : 03c0006f;   % 546: 	j DoneTinyPos %
00000129 : 01400313;   % 548: 	li t1,20 %
0000012a : 00600393;   % 549: 	li t2,6 %
0000012b : ffe00e13;   % 550: 	li t3,-2 %
0000012c : fffa8a93;   % 551: 	addi s5,s5,-1 %
0000012d : 0280006f;   % 552: 	j DoneTinyPos %
0000012e : 02400313;   % 554: 	li t1,36 %
0000012f : 00600393;   % 555: 	li t2,6 %
00000130 : ffc00e13;   % 556: 	li t3,-4 %
00000131 : fffa8a93;   % 557: 	addi s5,s5,-1 %
00000132 : 0140006f;   % 558: 	j DoneTinyPos %
00000133 : 03400313;   % 560: 	li t1,52 %
00000134 : 00600393;   % 561: 	li t2,6 %
00000135 : ffd00e13;   % 562: 	li t3,-3 %
00000136 : fffa8a93;   % 563: 	addi s5,s5,-1 %
00000137 : 000b1663;   % 566: 	bne s6,zero,DrawTinyDustRight %
00000138 : 40600333;   % 567: 	sub t1,zero,t1 # se jogador estiver para a esquerda inverte as posicoes horizontais %
00000139 : 41c00e33;   % 568: 	sub t3,zero,t3 %
0000013a : 01ca0a33;   % 571: 	add s4,s4,t3 %
0000013b : 01441223;   % 573: 	sh s4,4(s0) # PosX %
0000013c : 01541323;   % 574: 	sh s5,6(s0) # PosY %
0000013d : 006a0a33;   % 576: 	add s4,s4,t1 %
0000013e : 007a8ab3;   % 577: 	add s5,s5,t2 %
0000013f : 010a9293;   % 579: 	slli t0,s5,16 %
00000140 : 014285b3;   % 580: 	add a1,t0,s4 %
00000141 : 0fc15617;   % 582: 	la a2,emptyCol %
00000142 : 79860613;   % 582:  %
00000143 : 016006b3;   % 583: 	mv a3,s6 %
00000144 : 00000733;   % 584: 	mv a4,zero %
00000145 : 0fc14517;   % 586: 	la a0,tinyDust0 %
00000146 : 30050513;   % 586:  %
00000147 : 002c7293;   % 587: 	andi t0,s8,2 %
00000148 : 18028063;   % 588: 	beq t0,zero,DrawObjReady %
00000149 : 0fc14517;   % 589: 	la a0,tinyDust1 %
0000014a : 33c50513;   % 589:  %
0000014b : 1740006f;   % 591: 	j DrawObjReady %
0000014c : 00c00313;   % 594: 	li t1,12 # offset inicial do ar nao e salvo %
0000014d : 01000293;   % 596: 	li t0,16 %
0000014e : 00400393;   % 597: 	li t2,4 # de 28 a 19 %
0000014f : 0382c063;   % 598: 	bgt s8,t0,DoneAirSpeed %
00000150 : 00c00293;   % 599: 	li t0,12 %
00000151 : 00200393;   % 600: 	li t2,2 # de 16 a 13 %
00000152 : 0182ca63;   % 601: 	bgt s8,t0,DoneAirSpeed %
00000153 : 00800293;   % 602: 	li t0,8 %
00000154 : 00100393;   % 603: 	li t2,1 # de 13 a 7 %
00000155 : 0182c463;   % 604: 	bgt s8,t0,DoneAirSpeed %
00000156 : 00000393;   % 605: 	li t2,0 # de 6 a 1 %
00000157 : 000b1663;   % 608: 	bne s6,zero,DrawAirRight %
00000158 : 40600333;   % 609: 	sub t1,zero,t1 %
00000159 : 407003b3;   % 610: 	sub t2,zero,t2 %
0000015a : 007a0a33;   % 613: 	add s4,s4,t2 %
0000015b : 01441223;   % 615: 	sh s4,4(s0) # atualiza PosX %
0000015c : 01541323;   % 616: 	sh s5,6(s0) # atualiza PosY %
0000015d : 006a0a33;   % 618: 	add s4,s4,t1 %
0000015e : ffca8a93;   % 619: 	addi s5,s5,-4 %
0000015f : 010a9293;   % 621: 	slli t0,s5,16 %
00000160 : 014285b3;   % 622: 	add a1,t0,s4 %
00000161 : 0fc14517;   % 624: 	la a0,air %
00000162 : cc850513;   % 624:  %
00000163 : 00000633;   % 625: 	mv a2,zero %
00000164 : 016006b3;   % 626: 	mv a3,s6 %
00000165 : 00000733;   % 627: 	mv a4,zero %
00000166 : 1080006f;   % 629: 	j DrawObjReady %
00000167 : 000b0863;   % 632: 	beq s6,zero,DrawFireLeft %
00000168 : 004a0a13;   % 633: 	addi s4,s4,4 %
00000169 : 00ca0313;   % 634: 	addi t1,s4,12 # offset inicial do fogo nao e salvo %
0000016a : 00c0006f;   % 635: 	j DoneDrawFireHor %
0000016b : ffca0a13;   % 637: 	addi s4,s4,-4 %
0000016c : ff4a0313;   % 638: 	addi t1,s4,-12 # offset inicial do fogo nao e salvo %
0000016d : 001c7293;   % 641: 	andi t0,s8,1 %
0000016e : 00029a63;   % 642: 	bne t0,zero,DoneDrawFireVert # divide a movimentacao vertical por 1 %
0000016f : 000b8663;   % 643: 	beq s7,zero,DrawFireDown %
00000170 : fffa8a93;   % 644: 	addi s5,s5,-1 %
00000171 : 0080006f;   % 645: 	j DoneDrawFireVert %
00000172 : 001a8a93;   % 647: 	addi s5,s5,1 %
00000173 : 01441223;   % 650: 	sh s4,4(s0) # atualiza PosX %
00000174 : 01541323;   % 651: 	sh s5,6(s0) # atualiza PosY %
00000175 : 010a9293;   % 653: 	slli t0,s5,16 %
00000176 : 006285b3;   % 654: 	add a1,t0,t1 %
00000177 : 0fc15617;   % 656: 	la a2,emptyCol %
00000178 : 6c060613;   % 656:  %
00000179 : 016006b3;   % 657: 	mv a3,s6 %
0000017a : 00000733;   % 658: 	mv a4,zero %
0000017b : 0fc14517;   % 660: 	la a0,fire0 # frames com vida 8 e 7 %
0000017c : d6c50513;   % 660:  %
0000017d : 00600293;   % 661: 	li t0,6  %
0000017e : 0b82c463;   % 662: 	bgt s8,t0,DrawObjReady %
0000017f : 0fc14517;   % 663: 	la a0,fire1 # frames com vida 6 e 5 %
00000180 : e6850513;   % 663:  %
00000181 : 00400293;   % 664: 	li t0,4 %
00000182 : 0982cc63;   % 665: 	bgt s8,t0,DrawObjReady %
00000183 : 0fc14517;   % 666: 	la a0,fire2 # frames com vida 4 e 3 %
00000184 : f6450513;   % 666:  %
00000185 : 00200293;   % 667: 	li t0,2  %
00000186 : 0982c463;   % 668: 	bgt s8,t0,DrawObjReady %
00000187 : 0fc14517;   % 669: 	la a0,fire3 # frames com vida 2 e 1 %
00000188 : 06050513;   % 669:  %
00000189 : 07c0006f;   % 670: 	j DrawObjReady %
0000018a : 010a9293;   % 673: 	slli t0,s5,16 %
0000018b : 014285b3;   % 674: 	add a1,t0,s4 %
0000018c : 0fc15617;   % 676: 	la a2,emptyCol %
0000018d : 66c60613;   % 676:  %
0000018e : 016006b3;   % 677: 	mv a3,s6 %
0000018f : 00000733;   % 678: 	mv a4,zero %
00000190 : 0fc14517;   % 680: 	la a0,ice # frames com vida 8 a 5 %
00000191 : 14850513;   % 680:  %
00000192 : 00400293;   % 681: 	li t0,4  %
00000193 : 0582ca63;   % 682: 	bgt s8,t0,DrawObjReady %
00000194 : 0fc14517;   % 683: 	la a0,dust0 # frames com vida 4 e 3 %
00000195 : ae450513;   % 683:  %
00000196 : 00200293;   % 684: 	li t0,2  %
00000197 : 0582c263;   % 685: 	bgt s8,t0,DrawObjReady %
00000198 : 0fc14517;   % 686: 	la a0,dust1 # frames com vida 2 e 1 %
00000199 : b6050513;   % 686:  %
0000019a : 0380006f;   % 687: 	j DrawObjReady %
0000019b : fd0a0a13;   % 690: 	addi s4,s4,-48 %
0000019c : 000b0463;   % 691: 	beq s6,zero,DrawPullAreaLeft %
0000019d : 040a0a13;   % 692: 	addi s4,s4,64 # corrige o offset inicial da area de puxar quando esta para a direitapara a direita %
0000019e : ffaa8a93;   % 695: 	addi s5,s5,-6 # sprite da area de puxar deve ficar 6 pixels para cima %
0000019f : 010a9293;   % 696: 	slli t0,s5,16 %
000001a0 : 014285b3;   % 697: 	add a1,t0,s4 %
000001a1 : 0fc15617;   % 699: 	la a2,emptyCol ### %
000001a2 : 61860613;   % 699:  %
000001a3 : 016006b3;   % 700: 	mv a3,s6 %
000001a4 : 00000733;   % 701: 	mv a4,zero %
000001a5 : 0fc14517;   % 703: 	la a0,playerPullAreaCol # sempre o mesmo sprite %
000001a6 : 43050513;   % 703:  %
000001a7 : 0040006f;   % 704: 	j DrawObjReady %
000001a8 : 0e0010ef;   % 707: 	jal Print %
000001a9 : 01800533;   % 709: 	mv a0,s8 ### %
000001aa : 00100893;   % 710: 	li a7,1 %
000001ab : 0fc10517;   % 713: 	la a0,endl %
000001ac : 9b850513;   % 713:  %
000001ad : 00400893;   % 714: 	li a7,4 %
000001ae : fffc0c13;   % 717: 	addi s8,s8,-1 %
000001af : 01841623;   % 718: 	sh s8,12(s0) %
000001b0 : cc0c10e3;   % 719: 	bne s8,zero,DrawNextObj %
000001b1 : 00042023;   % 720: 	sw zero,0(s0)	# define ID do objeto como 0 se tempo de vida dele acabar %
000001b2 : cb9ff06f;   % 722: 	j DrawNextObj %
000001b3 : 00012083;   % 725: 	lw ra,0(sp) %
000001b4 : 00410113;   % 726: 	addi sp,sp,4 # conferir %
000001b5 : 0fc10517;   % 728: 	la a0,endl %
000001b6 : 99050513;   % 728:  %
000001b7 : 00400893;   % 729: 	li a7,4 %
000001b8 : 00008067;   % 732: 	ret %
000001b9 : 0fc10417;   % 736: 	lw s0,BitmapFrame %
000001ba : 91c42403;   % 736:  %
000001bb : 01445493;   % 737: 	srli s1,s0,20 %
000001bc : 0014f493;   % 738: 	andi s1,s1,1 %
000001bd : ff2002b7;   % 740: 	li t0,0xff200604	# endereco que define qual frame esta sendo apresentado %
000001be : 60428293;   % 740:  %
000001bf : 0092a023;   % 741: 	sw s1,0(t0)		# para visualizar o frame que acabou de ser desenhado %
000001c0 : 001002b7;   % 743: 	li t0,0x00100000 %
000001c1 : 00028293;   % 743:  %
000001c2 : 00544433;   % 744: 	xor s0,s0,t0 %
000001c3 : 0fc10297;   % 745: 	sw s0,BitmapFrame,t0 %
000001c4 : 8e82aa23;   % 745:  %
000001c5 : 00008067;   % 747: 	ret %
000001c6 : ff2002b7;   % 751: 	li t0,0xFF200000		# carrega o endereco de controle do KDMMIO %
000001c7 : 00028293;   % 751:  %
000001c8 : 0002a383;   % 752: 	lw t2,0(t0)			# Le bit de Controle Teclado %
000001c9 : 0013f393;   % 753: 	andi t2,t2,0x0001		# mascara o bit menos significativo %
000001ca : 0042a303;   % 754: 	lw t1,4(t0)  			# le o valor da tecla %
000001cb : 00039463;   % 756: 	bne t2,zero,ContinueKP	 %
000001cc : 00000333;   % 757: 	mv t1,zero			# se nenhuma tecla esta sendo apertada salva 0 como a tecla atual %
000001cd : 0fc10297;   % 760: 	sw t1,LastKey,t0		# atualiza a ultima tecla pressionada %
000001ce : 9062ac23;   % 760:  %
000001cf : 0fc10417;   % 762: 	lw s0,PlayerLock %
000001d0 : 8f442403;   % 762:  %
000001d1 : 02041463;   % 763: 	bne s0,zero,LockedPlayer %
000001d2 : 06400293;   % 765: 	li t0,'d' %
000001d3 : 00628863;   % 766: 	beq t0,t1,DirectionKey %
000001d4 : 06100293;   % 767: 	li t0,'a' %
000001d5 : 00628463;   % 768: 	beq t0,t1,DirectionKey %
000001d6 : 0140006f;   % 769: 	j SpecialKeys %
000001d7 : 06100293;   % 771: 	li t0,'a'	 %
000001d8 : 0062a3b3;   % 772: 	slt t2,t0,t1			# se estiver virado para a esquerda s0 = 0, para a direita s0 = 1 %
000001d9 : 0fc10297;   % 773: 	sw t2,PlayerLastDir,t0		# serve para as animacoes %
000001da : 8e72a623;   % 773:  %
000001db : 07000293;   % 778: 	li t0,'p' %
000001dc : 02530c63;   % 779:   	beq t1,t0,EndGame %
000001dd : 03100293;   % 781:   	li t0,'1' %
000001de : 02530a63;   % 782:   	beq t1,t0,SetPower0 %
000001df : 03200293;   % 784:   	li t0,'2' %
000001e0 : 02530c63;   % 785:   	beq t1,t0,SetPower1 %
000001e1 : 03300293;   % 787:   	li t0,'3' %
000001e2 : 04530063;   % 788:   	beq t1,t0,SetPower2 %
000001e3 : 03400293;   % 790:   	li t0,'4' %
000001e4 : 04530463;   % 791:   	beq t1,t0,SetPower3 %
000001e5 : 03500293;   % 793:   	li t0,'5' %
000001e6 : 04530863;   % 794:   	beq t1,t0,SetPower4 %
000001e7 : 03600293;   % 796:   	li t0,'6' %
000001e8 : 04530c63;   % 797:   	beq t1,t0,SetPower5 %
000001e9 : 00008067;   % 800:   	ret %
000001ea : 00a00893;   % 804: 	li a7,10 %
000001eb : 0fc10317;   % 809: 	sw zero,PlayerPowState,t1 %
000001ec : 86032c23;   % 809:  %
000001ed : ff1ff06f;   % 810: 	j FimKeyPress %
000001ee : 00100293;   % 813: 	li t0,1 %
000001ef : 0fc10317;   % 814: 	sw t0,PlayerPowState,t1 %
000001f0 : 86532423;   % 814:  %
000001f1 : fe1ff06f;   % 815: 	j FimKeyPress %
000001f2 : 00200293;   % 818: 	li t0,2 %
000001f3 : 0fc10317;   % 819: 	sw t0,PlayerPowState,t1 %
000001f4 : 84532c23;   % 819:  %
000001f5 : fd1ff06f;   % 820: 	j FimKeyPress %
000001f6 : 00300293;   % 823: 	li t0,3 %
000001f7 : 0fc10317;   % 824: 	sw t0,PlayerPowState,t1 %
000001f8 : 84532423;   % 824:  %
000001f9 : fc1ff06f;   % 825: 	j FimKeyPress %
000001fa : 00400293;   % 828: 	li t0,4 %
000001fb : 0fc10317;   % 829: 	sw t0,PlayerPowState,t1 %
000001fc : 82532c23;   % 829:  %
000001fd : fb1ff06f;   % 830: 	j FimKeyPress %
000001fe : 00500293;   % 833: 	li t0,5 %
000001ff : 0fc10317;   % 834: 	sw t0,PlayerPowState,t1 %
00000200 : 82532423;   % 834:  %
00000201 : fa1ff06f;   % 835: 	j FimKeyPress %
00000202 : ffc10113;   % 839: 	addi sp,sp,-4 %
00000203 : 00112023;   % 840: 	sw ra,0(sp)			# pilha armazena apenas valor de retorno %
00000204 : 0fc10417;   % 842: 	lw s0,LastKey			# s0, valor da ultima tecla apertada %
00000205 : 83c42403;   % 842:  %
00000206 : 0fc0f497;   % 843: 	lhu s1,PlayerPosX		# s1, posicao X do jogador no mapa %
00000207 : 7f84d483;   % 843:  %
00000208 : 0fc0f917;   % 844: 	lhu s2,PlayerPosY		# s2, posicao Y do jogador no mapa %
00000209 : 7f295903;   % 844:  %
0000020a : 0fc0fb17;   % 845: 	lhu s6,PlayerAnimState		# s6, valor de estado do jogador: 0 = vazio, 1 = atacando, 2 = vazio com poder 1, 3 = vazio com poder 2, 4 = cheio sem poder, 5 = inimigo 1 na boca, 6 = inimigo 2 na boca, 7 = cheio com poder 1, 8 = cheio com poder 2 %
0000020b : 7fab5b03;   % 845:  %
0000020c : 01600bb3;   % 846: 	mv s7,s6 %
0000020d : 0fc0fc17;   % 847: 	lhu s8,PlayerAnimTransit %
0000020e : 7fac5c03;   % 847:  %
0000020f : 0fc0fc97;   % 848: 	lw s9,PlayerLock %
00000210 : 7f4cac83;   % 848:  %
00000211 : 0fc0fd17;   % 849: 	lw s10,PlayerPowState %
00000212 : 7e0d2d03;   % 849:  %
00000213 : 012002b3;   % 851: 	mv t0,s2 %
00000214 : 01029293;   % 852: 	slli t0,t0,16 %
00000215 : 009282b3;   % 853: 	add t0,t0,s1 %
00000216 : 0fc0f317;   % 854: 	sw t0,OldPlayerPos,t1		# atualiza OldPlayerPos %
00000217 : 7a532e23;   % 854:  %
00000218 : 00600293;   % 856: 	li t0,6 %
00000219 : 065b0663;   % 857: 	beq s6,t0,ContinueStartAttEat %
0000021a : 00700293;   % 859: 	li t0,7 %
0000021b : 0a5b0463;   % 860: 	beq s6,t0,EndAttackEat %
0000021c : 00a00293;   % 862: 	li t0,10 %
0000021d : 0c5b0663;   % 863: 	beq s6,t0,EndAttackAir %
0000021e : 00b00293;   % 865: 	li t0,11 %
0000021f : 0c5b0a63;   % 866: 	beq s6,t0,EndAttackStar %
00000220 : 06500293;   % 868: 	li t0,'e' %
00000221 : 00540863;   % 869: 	beq s0,t0,AttackCheck %
00000222 : 00100293;   % 871: 	li t0,1 %
00000223 : 065b0263;   % 872: 	beq s6,t0,KeepAttackEat %
00000224 : 0d00006f;   % 874: 	j HorizontalMove %
00000225 : 00000293;   % 877: 	li t0,0 %
00000226 : 005b0c63;   % 878: 	beq s6,t0,StartAttackEat %
00000227 : 00100293;   % 880: 	li t0,1 %
00000228 : 025b0e63;   % 881: 	beq s6,t0,AttackEat %
00000229 : 00c00293;   % 883: 	li t0,12 %
0000022a : 085b5263;   % 884: 	bge s6,t0,AttackAir %
0000022b : 0b40006f;   % 885: 	j DoneAttack %
0000022c : 00100293;   % 888: 	li t0,1 %
0000022d : 0fc0f317;   % 889: 	sw t0,PlayerLock,t1 %
0000022e : 76532e23;   % 889:  %
0000022f : 00100293;   % 891: 	li t0,1 %
00000230 : 005d0e63;   % 892: 	beq s10,t0,AttackEat # se estiver com a habilidade de fogo nao precisa da animacao de StartAttack %
00000231 : 00a00c13;   % 894: 	li s8,10 %
00000232 : 0fc0f317;   % 895: 	sh s8,PlayerAnimTransit,t1 %
00000233 : 77831323;   % 895:  %
00000234 : 000c0663;   % 898: 	beq s8,zero,AttackEat %
00000235 : 00600b93;   % 900: 	li s7,6 %
00000236 : 0880006f;   % 901: 	j DoneAttack %
00000237 : 01e00293;   % 904: 	li t0,30 %
00000238 : 0fc0f317;   % 905: 	sh t0,PlayerAnimTransit,t1 %
00000239 : 74531723;   % 905:  %
0000023a : 00100b93;   % 907: 	li s7,1 %
0000023b : 0740006f;   % 908: 	j DoneAttack %
0000023c : 00100b93;   % 911: 	li s7,1 %
0000023d : 07804663;   % 912: 	bgt s8,zero,DoneAttack %
0000023e : 00100293;   % 914: 	li t0,1 %
0000023f : 025d0063;   % 915: 	beq s10,t0,EndAttFire # se estiver com a habilidade de fogo nao precisa da animacao de EndAttack %
00000240 : 00700b93;   % 917: 	li s7,7 %
00000241 : 00a00293;   % 918: 	li t0,10 %
00000242 : 0fc0f317;   % 919: 	sh t0,PlayerAnimTransit,t1 %
00000243 : 72531323;   % 919:  %
00000244 : 0500006f;   % 920: 	j DoneAttack %
00000245 : 00700b93;   % 923: 	li s7,7 %
00000246 : 05804463;   % 924: 	bgt s8,zero,DoneAttack %
00000247 : 0fc0f317;   % 926: 	sw zero,PlayerLock,t1 %
00000248 : 70032a23;   % 926:  %
00000249 : 00000b93;   % 928: 	li s7,0 %
0000024a : 0380006f;   % 929: 	j DoneAttack %
0000024b : 01e00293;   % 932: 	li t0,30 %
0000024c : 0fc0f317;   % 933: 	sh t0,PlayerAnimTransit,t1 %
0000024d : 6e531f23;   % 933:  %
0000024e : 00a00b93;   % 935: 	li s7,10 %
0000024f : 0240006f;   % 936: 	j DoneAttack %
00000250 : 00a00b93;   % 939: 	li s7,10 %
00000251 : 01804e63;   % 940: 	bgt s8,zero,DoneAttack %
00000252 : 00000b93;   % 942: 	li s7,0 %
00000253 : 0140006f;   % 943: 	j DoneAttack %
00000254 : 00b00b93;   % 946: 	li s7,11 %
00000255 : 01804663;   % 947: 	bgt s8,zero,DoneAttack %
00000256 : 00000b93;   % 949: 	li s7,0 %
00000257 : 0040006f;   % 950: 	j DoneAttack %
00000258 : 0fc0fa17;   % 956: 	lh s4,PlayerSpeedX		# s4, velocidade X do jogador em seu valor completo %
00000259 : 6bca1a03;   % 956:  %
0000025a : 00a00313;   % 957: 	li t1,10		# t1, velocidade de desaceleracao do jogador no eixo X  %
0000025b : 06400393;   % 958: 	li t2,100		# t2, velocidade de aceleracao do jogador no eixo X %
0000025c : 0c800e13;   % 959: 	li t3,200		# t3, velocidade maxima do jogador no eixo X %
0000025d : 03404263;   % 962: 	bgt s4,zero,SlowRightToLeft	# se velocidade for positiva ou 0 vai para o proximo slow %
0000025e : 000c9863;   % 963: 	bne s9,zero,LockedR %
0000025f : 06100293;   % 964: 	li t0,'a' %
00000260 : 02540c63;   % 965: 	beq s0,t0,MoveLeft		# se velocidade for negativa e 'a' esta apertado nao ha porque desacelerar %
00000261 : 000a0a63;   % 966: 	beq s4,zero,SlowRightToLeft	# se velocidade for zero ainda precisa conferir se 'd' esta sendo apertado %
00000262 : 006a0a33;   % 969: 	add s4,s4,t1 %
00000263 : 05405863;   % 970: 	ble s4,zero,DoneHorizontalMv %
00000264 : 00000a33;   % 971: 	mv s4,zero			# se a velocidade ficou positiva ao desacelerar precisa voltar para zero %
00000265 : 0480006f;   % 972: 	j DoneHorizontalMv %
00000266 : 000c9863;   % 975: 	bne s9,zero,LockedL %
00000267 : 06400293;   % 976: 	li t0,'d' %
00000268 : 02540663;   % 977: 	beq s0,t0,MoveRight		# se velocidade for positiva e 'd' esta apertado nao ha porque desacelerar %
00000269 : 020a0c63;   % 978: 	beq s4,zero,DoneHorizontalMv	# se a velocidade for zero nesse ponto nao ha porque desacelerar o jogador %
0000026a : 406a0a33;   % 981: 	sub s4,s4,t1 %
0000026b : 03404863;   % 982: 	bgt s4,zero,DoneHorizontalMv %
0000026c : 00000a33;   % 983: 	mv s4,zero			# se a velocidade ficou negativa ao desacelerar precisa voltar para zero %
0000026d : 0280006f;   % 984: 	j DoneHorizontalMv		 %
0000026e : 407a0a33;   % 987: 	sub s4,s4,t2			# aumenta velocidade para a esquerda %
0000026f : 414002b3;   % 989: 	sub t0,zero,s4 %
00000270 : 005e5e63;   % 990: 	ble t0,t3,DoneHorizontalMv %
00000271 : 41c00a33;   % 991: 	sub s4,zero,t3			# velocidade se torna a velocidade maxima caso tenha a ultrapassado %
00000272 : 0140006f;   % 992: 	j DoneHorizontalMv %
00000273 : 007a0a33;   % 995: 	add s4,s4,t2			# aumenta velocidade para a direita %
00000274 : 014e5663;   % 997: 	ble s4,t3,DoneHorizontalMv %
00000275 : 01c00a33;   % 998: 	mv s4,t3			# velocidade se torna a velocidade maxima caso tenha a ultrapassado %
00000276 : 0040006f;   % 999: 	j DoneHorizontalMv %
00000277 : 0fc0f297;   % 1002: 	sh s4,PlayerSpeedX,t0		# armazena a velocidade X completa do jogador (em centenas) %
00000278 : 65429023;   % 1002:  %
00000279 : 06400293;   % 1003: 	li t0,100 %
0000027a : 025a4333;   % 1004: 	div t1,s4,t0			# divide a velocidade por 100 para obter o numero de pixels a se mover %
0000027b : 006484b3;   % 1006: 	add s1,s1,t1			# adiciona a velocidade horizontal em pixels para a posicao do jogador %
0000027c : 0fc0fa97;   % 1009: 	lh s5,PlayerSpeedY		# s5, velocidade X do jogador em seu valor completo %
0000027d : 62ea9a83;   % 1009:  %
0000027e : 0fc0f317;   % 1010: 	lhu t1,PlayerGndState		# t1, variavel de estado do jogador %
0000027f : 62835303;   % 1010:  %
00000280 : 01900393;   % 1011: 	li t2,25		# t2, velocidade de aceleracao da gravidade %
00000281 : 0c800e13;   % 1012: 	li t3,200	# t3, velocidade maxima de queda do jogador %
00000282 : 00c00293;   % 1014: 	li t0,12 %
00000283 : 005b4463;   % 1015: 	blt s6,t0,NotFlying %
00000284 : 06400e13;   % 1016: 	li t3,100 %
00000285 : 01901e63;   % 1019: 	bne zero,s9,LockedJump %
00000286 : 00900293;   % 1021: 	li t0,9 %
00000287 : 025b0263;   % 1022: 	beq s6,t0,CheckStartFly %
00000288 : 07700293;   % 1025: 	li t0,'w' %
00000289 : 02540663;   % 1026: 	beq s0,t0,MoveFly %
0000028a : 02000293;   % 1028: 	li t0,' '			 %
0000028b : 04540c63;   % 1029: 	beq s0,t0,MoveJump		# pulo unico %
0000028c : 06030463;   % 1032: 	beq t1,zero,MoveFall		# se estado do jogador for 0 ele esta caindo %
0000028d : 060aca63;   % 1034: 	blt s5,zero,DoneVerticalMv	# se o jogador estiver indo para cima o chao nao para ele (impede um snap que estava acontecendo) %
0000028e : 00000ab3;   % 1035: 	mv s5,zero 		 	# se o jogador nao estiver no ar ou tiver pulado, entao esta no chao e sua velocidade Y se torna zero %
0000028f : 06c0006f;   % 1036: 	j DoneVerticalMv %
00000290 : 00c00b93;   % 1039: 	li s7,12  %
00000291 : fc0c0ee3;   % 1040: 	beq s8,zero,BackCheckStFly  # se a animacao inflando ja acabou o sprite deve ser o de voo comum %
00000292 : 00900b93;   % 1042: 	li s7,9 %
00000293 : fd5ff06f;   % 1043: 	j BackCheckStFly %
00000294 : 00c00293;   % 1047: 	li t0,12 %
00000295 : 025b5463;   % 1048: 	bge s6,t0,BoostFly # se ja estiver voando continua com a animacao de voo (salva no CheckStartFly) %
00000296 : 00300293;   % 1050: 	li t0,3 %
00000297 : 025d5463;   % 1051: 	bge s10,t0,MoveJump # se estiver com item na boca nao ha o pulo infinito %
00000298 : 00900293;   % 1053: 	li t0,9 %
00000299 : 005b1463;   % 1054: 	bne s6,t0,StartMoveFly %
0000029a : 0140006f;   % 1057: 	j BoostFly %
0000029b : 00900b93;   % 1060: 	li s7,9 # transicao inflar %
0000029c : 01400293;   % 1062: 	li t0,20 %
0000029d : 0fc0f317;   % 1063: 	sh t0,PlayerAnimTransit,t1 %
0000029e : 5a531d23;   % 1063:  %
0000029f : e3e00a93;   % 1066: 	li s5,-450 %
000002a0 : 0280006f;   % 1067: 	j DoneVerticalMv %
000002a1 : 00c00293;   % 1070: 	li t0,12 %
000002a2 : fc5b54e3;   % 1071: 	bge s6,t0,MoveFly %
000002a3 : 00030663;   % 1073: 	beq t1,zero,MoveFall		# se estado do jogador for 0 ele esta caindo, impede que o jogador pule no ar apos usaro pulo unico %
000002a4 : da800a93;   % 1075: 	li s5,-600 %
000002a5 : 0140006f;   % 1076: 	j DoneVerticalMv %
000002a6 : 007a8ab3;   % 1079: 	add s5,s5,t2			# adiciona a gravidade a velocidade do jogador %
000002a7 : 015e5663;   % 1080: 	ble s5,t3,DoneVerticalMv %
000002a8 : 01c00ab3;   % 1081: 	mv s5,t3			# velocidade se torna a velocidade maxima caso tenha a ultrapassado %
000002a9 : 0040006f;   % 1082: 	j DoneVerticalMv %
000002aa : 0fc0f297;   % 1085: 	sh s5,PlayerSpeedY,t0		# armazena a velocidade Y completa do jogador (em centenas) %
000002ab : 57529b23;   % 1085:  %
000002ac : 0fc0f297;   % 1086: 	sh s7,PlayerAnimState,t0 %
000002ad : 57729923;   % 1086:  %
000002ae : 06400293;   % 1087: 	li t0,100 %
000002af : 025ac333;   % 1088: 	div t1,s5,t0			# divide a velocidade por 100 para obter o numero de pixels a se mover %
000002b0 : ffc00293;   % 1090: 	li t0,-4 %
000002b1 : 00535463;   % 1092: 	bge t1,t0,DontLimitJump		# como o jogador nao pode se mover mais de 4 pixels por frame para as colisoes funcionarem, a vel do pulo fica limitada a -4 %
000002b2 : 00500333;   % 1093: 	mv t1,t0 %
000002b3 : 00690933;   % 1096: 	add s2,s2,t1			# adiciona a velocidade vertical em pixels para a posicao do jogador %
000002b4 : 01b002b3;   % 1099: 	mv t0,s11 %
000002b5 : 01029293;   % 1100: 	slli t0,t0,16 %
000002b6 : 0102d293;   % 1101: 	srli t0,t0,16	 %
000002b7 : ff028293;   % 1102: 	addi t0,t0,-16			# t0, tamanho da linha de pixels -16 %
000002b8 : 1804c063;   % 1105: 	blt s1,zero,FimPlayerControls %
000002b9 : 1692ce63;   % 1106: 	bgt s1,t0,FimPlayerControls		# analisa se passou das bordas dos lados %
000002ba : 01b002b3;   % 1108: 	mv t0,s11 %
000002bb : 0102d293;   % 1109: 	srli t0,t0,16		 %
000002bc : ff028293;   % 1110: 	addi t0,t0,-16			# t0, tamanho da coluna de pixels -16 %
000002bd : 16094663;   % 1113: 	blt s2,zero,FimPlayerControls %
000002be : 1722c463;   % 1114: 	bgt s2,t0,FimPlayerControls		# analisa se passou das bordas de cima e de baixo %
000002bf : 01091293;   % 1116: 	slli t0,s2,16 %
000002c0 : 009282b3;   % 1117: 	add t0,t0,s1 %
000002c1 : 0fc0f317;   % 1118: 	sw t0,TempPlayerPos,t1 %
000002c2 : 50532a23;   % 1118:  %
000002c3 : 0040006f;   % 1120: 	j PlayerColCheck %
000002c4 : 0fc0f517;   % 1124: 	la a0,TempPlayerPos %
000002c5 : 50850513;   % 1124:  %
000002c6 : 68d000ef;   % 1125: 	jal CollisionUpdate %
000002c7 : 0fc15997;   % 1127: 	la s3,collisionRender %
000002c8 : c7498993;   % 1127:  %
000002c9 : 009002b3;   % 1129: 	mv t0,s1 %
000002ca : 00f2f293;   % 1130: 	andi t0,t0,0xf %
000002cb : 005989b3;   % 1131: 	add s3,s3,t0			# adiciona o resto do offset X por 16 %
000002cc : 012002b3;   % 1133: 	mv t0,s2 %
000002cd : 00f2f293;   % 1134: 	andi t0,t0,0xf %
000002ce : 02000313;   % 1135: 	li t1,32 %
000002cf : 026282b3;   % 1136: 	mul t0,t0,t1			# adiciona as linhas com base no resto do offset Y por 16 %
000002d0 : 005989b3;   % 1138: 	add s3,s3,t0			# s3, inicialmente como o endereco para o primeiro pixel do jogador no mapa de colisoes renderizado %
000002d1 : 0fc0ff17;   % 1141: 	sh zero,PlayerGndState,t5	# determina que jogador esta no ar %
000002d2 : 4c0f1e23;   % 1141:  %
000002d3 : 013002b3;   % 1143: 	mv t0,s3 %
000002d4 : 1e000313;   % 1144: 	li t1,480 # 15 linhas do sprite x 32 pixels da renderizacao da colisao %
000002d5 : 006282b3;   % 1145: 	add t0,t0,t1  %
000002d6 : 03800393;   % 1146: 	li t2,56 # verde %
000002d7 : 00000e33;   % 1147: 	mv t3,zero %
000002d8 : 00400e93;   % 1148: 	li t4,4				# contador de pixels a analisar %
000002d9 : 0002c303;   % 1150: 	lbu t1,0(t0) %
000002da : 0202cf03;   % 1151: 	lbu t5,32(t0) %
000002db : 007f1863;   % 1152: 	bne t5,t2,DontSetGroundSt	# analisa pixels 1, 6, 11 e 16 da primeira linha abaixo do jogador %
000002dc : 00100f93;   % 1153: 	li t6,1 %
000002dd : 0fc0ff17;   % 1154: 	sh t6,PlayerGndState,t5		# se algum dos pixels logo abaixo do jogador forem de chao ele passa a estar no estado "no chao" %
000002de : 4bff1623;   % 1154:  %
000002df : 00731663;   % 1156: 	bne t1,t2,DontSnapUp		# analisa pixels 1, 6, 11 e 16 da ultima linha do jogador %
000002e0 : 160000ef;   % 1157: 	jal SnapUp %
000002e1 : fe1ff06f;   % 1158: 	j PlayerFloor			# repete enquanto colisao acontece %
000002e2 : 00528293;   % 1160: 	addi t0,t0,5			# avanca 5 pixels na linha %
000002e3 : 001e0e13;   % 1161: 	addi t3,t3,1 %
000002e4 : fdde4ae3;   % 1162: 	blt t3,t4,PlayerFloor %
000002e5 : 013002b3;   % 1166: 	mv t0,s3 %
000002e6 : 00700393;   % 1167: 	li t2,7 # vermelho %
000002e7 : 00000e33;   % 1168: 	mv t3,zero %
000002e8 : 00400e93;   % 1169: 	li t4,4				# contador de pixels a analisar %
000002e9 : 0002c303;   % 1171: 	lbu t1,0(t0) %
000002ea : 00731663;   % 1172: 	bne t1,t2,DontSnapDown		# analisa primeiro pixel da primeira linha do jogador %
000002eb : 144000ef;   % 1174: 	jal SnapDown			 %
000002ec : ff5ff06f;   % 1175: 	j PlayerCeiling			# repete enquanto colisao acontece %
000002ed : 00528293;   % 1177: 	addi t0,t0,5			# avanca 5 pixels na linha %
000002ee : 001e0e13;   % 1178: 	addi t3,t3,1 %
000002ef : ffde44e3;   % 1179: 	blt t3,t4,PlayerCeiling %
000002f0 : 013002b3;   % 1183: 	mv t0,s3 %
000002f1 : 0c000393;   % 1184: 	li t2,192 # azul %
000002f2 : 00000e33;   % 1185: 	mv t3,zero %
000002f3 : 00400e93;   % 1186: 	li t4,4				# contador de pixels a analisar %
000002f4 : 0002c303;   % 1188: 	lbu t1,0(t0) %
000002f5 : 00731663;   % 1189: 	bne t1,t2,DontSnapRight		# analisa primeiro pixel da primeira linha do jogador %
000002f6 : 138000ef;   % 1190: 	jal SnapRight %
000002f7 : ff5ff06f;   % 1191: 	j PlayerLeftWall		# repete enquanto colisao acontece %
000002f8 : 0a028293;   % 1193: 	addi t0,t0,160			# avanca 5 linhas no mapa de colisao %
000002f9 : 001e0e13;   % 1194: 	addi t3,t3,1 %
000002fa : ffde44e3;   % 1195: 	blt t3,t4,PlayerLeftWall %
000002fb : 013002b3;   % 1199: 	mv t0,s3 %
000002fc : 0c000393;   % 1200: 	li t2,192 # azul %
000002fd : 00000e33;   % 1201: 	mv t3,zero %
000002fe : 00400e93;   % 1202: 	li t4,4				# contador de pixels a analisar %
000002ff : 00f2c303;   % 1204: 	lbu t1,15(t0) %
00000300 : 00731663;   % 1205: 	bne t1,t2,DontSnapLeft		# analisa ultimo pixel da primeira linha do jogador %
00000301 : 0fc000ef;   % 1206: 	jal SnapLeft %
00000302 : ff5ff06f;   % 1207: 	j PlayerRightWall		# repete enquanto colisao acontece %
00000303 : 0a028293;   % 1209: 	addi t0,t0,160			# avanca 5 linhas no mapa de colisao %
00000304 : 001e0e13;   % 1210: 	addi t3,t3,1 %
00000305 : ffde44e3;   % 1211: 	blt t3,t4,PlayerRightWall %
00000306 : 0fc0f297;   % 1215: 	sh s1,PlayerPosX,t0		# armazena novo X do jogador %
00000307 : 3e929c23;   % 1215:  %
00000308 : 0fc0f297;   % 1216: 	sh s2,PlayerPosY,t0		# armazena novo Y do jogador %
00000309 : 3f229923;   % 1216:  %
0000030a : 0fc0f317;   % 1220: 	lw t1,OffsetX	 %
0000030b : 3e032303;   % 1220:  %
0000030c : 0fc0f297;   % 1221: 	sw t1,OldOffset,t0		# atualiza OldOffset %
0000030d : 3c62ae23;   % 1221:  %
0000030e : 09800293;   % 1223: 	li t0,152			# precisa parar sprite no pixel 153 do bitmap (contando de 1) %
0000030f : 0254d863;   % 1224: 	bge s1,t0,ChangeOffsetX		# se e necessario mover a tela atualiza o offset %
00000310 : 00000333;   % 1225: 	mv t1,zero %
00000311 : 0fc0f397;   % 1226: 	sh t1,OffsetX,t2		# armazena novo offset X %
00000312 : 3c639223;   % 1226:  %
00000313 : 07000293;   % 1229: 	li t0,112			# precisa parar sprite no pixel 109 do bitmap (contando de 1) %
00000314 : 04595c63;   % 1230: 	bge s2,t0,ChangeOffsetY		# se e necessario mover a tela atualiza o offset %
00000315 : 00000333;   % 1231: 	mv t1,zero %
00000316 : 0fc0f397;   % 1232: 	sh t1,OffsetY,t2		# armazena novo offset X %
00000317 : 3a639923;   % 1232:  %
00000318 : 00012083;   % 1236: 	lw ra,0(sp) %
00000319 : 00410113;   % 1237: 	addi sp,sp,4			# recupera endereco de retorno da pilha %
0000031a : 00008067;   % 1239:   	ret %
0000031b : 01b002b3;   % 1243: 	mv t0,s11 %
0000031c : 01029293;   % 1244: 	slli t0,t0,16 %
0000031d : 0102d293;   % 1245: 	srli t0,t0,16			# tamanho X do mapa %
0000031e : f5828293;   % 1247: 	addi t0,t0,-168			# pixel mais a direita do mapa que muda o offset %
0000031f : 0092cc63;   % 1248: 	bgt s1,t0,MaxOffsetX		# se o jogador estiver no fim da tela, o offset sempre sera o maior poss�vel %
00000320 : 09800313;   % 1250: 	li t1,152				 %
00000321 : 40648333;   % 1251: 	sub t1,s1,t1			# offsetX = posicao real do jogador - 152 %
00000322 : 0fc0f397;   % 1253: 	sh t1,OffsetX,t2		# armazena novo offset X %
00000323 : 38639023;   % 1253:  %
00000324 : fbdff06f;   % 1255: 	j FimChangeOffsetX %
00000325 : 09800313;   % 1258: 	li t1,152 %
00000326 : 406282b3;   % 1259: 	sub t0,t0,t1			# em t0 esta o valor maximo de X que altera o offset, entao e s� subtrair metade da tela e 8 pixels do sprite %
00000327 : 0fc0f397;   % 1261: 	sh t0,OffsetX,t2		# armazena novo offset X como o maior valor possivel  %
00000328 : 36539623;   % 1261:  %
00000329 : fa9ff06f;   % 1263: 	j FimChangeOffsetX %
0000032a : 01b002b3;   % 1266: 	mv t0,s11 %
0000032b : 0102d293;   % 1267: 	srli t0,t0,16			# tamanho Y do mapa %
0000032c : f8028293;   % 1269: 	addi t0,t0,-128			# pixel mais baixo do mapa que muda o offset %
0000032d : 0122cc63;   % 1270: 	bgt s2,t0,MaxOffsetY %
0000032e : 07000313;   % 1272: 	li t1,112 %
0000032f : 40690333;   % 1273: 	sub t1,s2,t1			# offsetY = posicao real do jogador - 112 %
00000330 : 0fc0f397;   % 1275: 	sh t1,OffsetY,t2		# armazena novo offset Y %
00000331 : 34639523;   % 1275:  %
00000332 : f99ff06f;   % 1277: 	j FimChangeOffsetY %
00000333 : 07000313;   % 1280: 	li t1,112 %
00000334 : 406282b3;   % 1281: 	sub t0,t0,t1			# em t0 esta o valor maximo de Y que altera o offset, entao e so subtrair metade da tela e 8 pixels do sprite %
00000335 : 0fc0f397;   % 1283: 	sh t0,OffsetY,t2		# armazena novo offset Y como o maior valor possivel  %
00000336 : 32539b23;   % 1283:  %
00000337 : f85ff06f;   % 1285: 	j FimChangeOffsetY %
00000338 : fff90913;   % 1289: 	addi s2,s2,-1 %
00000339 : fe098993;   % 1290: 	addi s3,s3,-32 %
0000033a : fe028293;   % 1291: 	addi t0,t0,-32 %
0000033b : 00008067;   % 1292: 	ret			 %
0000033c : 00190913;   % 1294: 	addi s2,s2,1	 %
0000033d : 02098993;   % 1295: 	addi s3,s3,32 %
0000033e : 02028293;   % 1296: 	addi t0,t0,32 %
0000033f : 00008067;   % 1297: 	ret		 %
00000340 : fff48493;   % 1299: 	addi s1,s1,-1 %
00000341 : fff98993;   % 1300: 	addi s3,s3,-1 %
00000342 : fff28293;   % 1301: 	addi t0,t0,-1 %
00000343 : 00008067;   % 1302: 	ret		 %
00000344 : 00148493;   % 1304: 	addi s1,s1,1 %
00000345 : 00198993;   % 1305: 	addi s3,s3,1 %
00000346 : 00128293;   % 1306: 	addi t0,t0,1 %
00000347 : 00008067;   % 1307: 	ret %
00000348 : ffc10113;   % 1311: 	addi sp,sp,-4 %
00000349 : 00112023;   % 1313: 	sw ra,0(sp)			# pilha armazena apenas valor de retorno %
0000034a : 0fc0f417;   % 1315: 	lw s0,PlayerLastDir		# se estiver virado para a esquerda s0 = 0, para a direita s0 = 1 %
0000034b : 32842403;   % 1315:  %
0000034c : 0fc0fe17;   % 1317: 	lhu t3,PlayerAnimTransit %
0000034d : 2fee5e03;   % 1317:  %
0000034e : 01c002b3;   % 1319: 	mv t0,t3 %
0000034f : 00028863;   % 1320: 	beq t0,zero,SkipSubTransit %
00000350 : fff28293;   % 1321: 	addi t0,t0,-1 %
00000351 : 0fc0f317;   % 1322: 	sh t0,PlayerAnimTransit,t1 %
00000352 : 2e531523;   % 1322:  %
00000353 : 0fc0f297;   % 1325: 	lw t0,PlayerObjDelay ### TODO temporario? %
00000354 : 2f82a283;   % 1325:  %
00000355 : 00028863;   % 1326: 	beq t0,zero,SkipSubDelay %
00000356 : fff28293;   % 1327: 	addi t0,t0,-1 %
00000357 : 0fc0f317;   % 1328: 	sw t0,PlayerObjDelay,t1 %
00000358 : 2e532423;   % 1328:  %
00000359 : 0fc0fc17;   % 1331: 	lhu s8,PlayerAnimState %
0000035a : 2bec5c03;   % 1331:  %
0000035b : 0fc0fc97;   % 1332: 	lhu s9,PlayerPowState %
0000035c : 2b8cdc83;   % 1332:  %
0000035d : 01c04c63;   % 1334: 	bgt t3,zero,DefTransition %
0000035e : 0fc0f297;   % 1336: 	lhu t0,PlayerGndState		# analisa se o jogador esta no chao ou no ar %
0000035f : 2a82d283;   % 1336:  %
00000360 : 10028863;   % 1337: 	beq t0,zero,DefineAnimVert %
00000361 : 00100313;   % 1338: 	li t1,1 %
00000362 : 08628e63;   % 1339: 	beq t0,t1,DefineAnimHorz %
00000363 : 00100293;   % 1343: 	li t0,1 %
00000364 : 025c8c63;   % 1344: 	beq s9,t0,DefFireAnim %
00000365 : 00200293;   % 1345: 	li t0,2 %
00000366 : 045c8063;   % 1346: 	beq s9,t0,DefIceAnim %
00000367 : 00300293;   % 1347: 	li t0,3 %
00000368 : 065cd063;   % 1348: 	bge s9,t0,DefStarAnim %
00000369 : 00100293;   % 1350: 	li t0,1 %
0000036a : 00b00493;   % 1351: 	li s1,11 %
0000036b : 125c0263;   % 1352: 	beq s8,t0,DefinedAnim %
0000036c : 00600293;   % 1354: 	li t0,6 %
0000036d : 00a00493;   % 1355: 	li s1,10 %
0000036e : 105c0c63;   % 1356: 	beq s8,t0,DefinedAnim %
0000036f : 00700293;   % 1358: 	li t0,7 %
00000370 : 00c00493;   % 1359: 	li s1,12 %
00000371 : 105c0663;   % 1360: 	beq s8,t0,DefinedAnim %
00000372 : 00100293;   % 1363: 	li t0,1 %
00000373 : 00e00493;   % 1364: 	li s1,14 %
00000374 : 105c0063;   % 1365: 	beq s8,t0,DefinedAnim %
00000375 : 0380006f;   % 1367: 	j EndDefFireIce %
00000376 : 00600293;   % 1370: 	li t0,6 %
00000377 : 00f00493;   % 1371: 	li s1,15 %
00000378 : 0e5c0863;   % 1372: 	beq s8,t0,DefinedAnim %
00000379 : 00100293;   % 1374: 	li t0,1 %
0000037a : 01000493;   % 1375: 	li s1,16 %
0000037b : 0e5c0263;   % 1376: 	beq s8,t0,DefinedAnim %
0000037c : 00700293;   % 1378: 	li t0,7 %
0000037d : 01100493;   % 1379: 	li s1,17 %
0000037e : 0c5c0c63;   % 1380: 	beq s8,t0,DefinedAnim %
0000037f : 0100006f;   % 1382: 	j EndDefFireIce %
00000380 : 00b00293;   % 1385: 	li t0,11 %
00000381 : 01200493;   % 1386: 	li s1,18 ### TODO %
00000382 : 0c80006f;   % 1387: 	j DefinedAnim %
00000383 : 00900293;   % 1391: 	li t0,9 %
00000384 : 00900493;   % 1392: 	li s1,9 # DefStartFly %
00000385 : 0a5c0e63;   % 1393: 	beq s8,t0,DefinedAnim %
00000386 : 00a00293;   % 1395: 	li t0,10 %
00000387 : 00d00493;   % 1396: 	li s1,13 # DefAttackAir %
00000388 : 0a5c0863;   % 1397: 	beq s8,t0,DefinedAnim %
00000389 : 0fc0f297;   % 1400: 	lh t0,PlayerSpeedX %
0000038a : 1f829283;   % 1400:  %
0000038b : 0fc0f317;   % 1401: 	lh t1,PlayerAnimState %
0000038c : 1f631303;   % 1401:  %
0000038d : 00400393;   % 1403: 	li t2,4 %
0000038e : 00735e63;   % 1404: 	bge t1,t2,DefFlyKirbyHorz %
0000038f : 00300393;   % 1406: 	li t2,3 %
00000390 : 007cde63;   % 1407: 	bge s9,t2,DefBigAnimHorz %
00000391 : 0202c663;   % 1409: 	blt t0,zero,DefNegSpeedX %
00000392 : 02504c63;   % 1410: 	bgt t0,zero,DefPosSpeedX %
00000393 : 000004b3;   % 1412: 	mv s1,zero %
00000394 : 0800006f;   % 1413: 	j DefinedAnim %
00000395 : 00600493;   % 1416: 	li s1,6 %
00000396 : 0780006f;   % 1417: 	j DefinedAnim %
00000397 : 00029663;   % 1420: 	bne t0,zero,DefBigWalk %
00000398 : 00700493;   % 1422: 	li s1,7 %
00000399 : 06c0006f;   % 1423: 	j DefinedAnim %
0000039a : 00800493;   % 1425: 	li s1,8 %
0000039b : 0640006f;   % 1426: 	j DefinedAnim %
0000039c : 00100493;   % 1429: 	li s1,1 %
0000039d : 04040e63;   % 1430: 	beq s0,zero,DefinedAnim %
0000039e : 00200493;   % 1431: 	li s1,2		# break left to right se estiver apertando 'd' mas com velocidade para a esquerda %
0000039f : 0540006f;   % 1432: 	j DefinedAnim %
000003a0 : 00200493;   % 1435: 	li s1,2		# break right to left se estiver apertando 'a' mas com velocidade para a direita %
000003a1 : 04040663;   % 1436: 	beq s0,zero,DefinedAnim %
000003a2 : 00100493;   % 1437: 	li s1,1		 %
000003a3 : 0440006f;   % 1438: 	j DefinedAnim %
000003a4 : 0fc0f297;   % 1442: 	lh t0,PlayerSpeedY %
000003a5 : 18e29283;   % 1442:  %
000003a6 : 0fc0f317;   % 1443: 	lh t1,PlayerAnimState %
000003a7 : 18a31303;   % 1443:  %
000003a8 : 00400393;   % 1445: 	li t2,4 %
000003a9 : 00735e63;   % 1446: 	bge t1,t2,DefAnimFly %
000003aa : 00300393;   % 1448: 	li t2,3 %
000003ab : fa7cdee3;   % 1449: 	bge s9,t2,DefBigWalk # animacao de pulo com item na boca e a mesma de andar %
000003ac : 00300493;   % 1451: 	li s1,3 %
000003ad : 0002ce63;   % 1452: 	blt t0,zero,DefinedAnim  # quick jump %
000003ae : 00400493;   % 1453: 	li s1,4 %
000003af : 0140006f;   % 1454: 	j DefinedAnim  # quick fall %
000003b0 : 00500493;   % 1457: 	li s1,5 %
000003b1 : 00505663;   % 1458: 	ble t0,zero,DefinedAnim  # slow jump %
000003b2 : 00600493;   % 1459: 	li s1,6 %
000003b3 : 0040006f;   % 1460: 	j DefinedAnim  # slow fall %
000003b4 : 0fc0f297;   % 1463: 	sh s1,PlayerAnim,t0 %
000003b5 : 14929c23;   % 1463:  %
000003b6 : 0fc0fa97;   % 1466: 	lw s5,FrameCount %
000003b7 : 180aaa83;   % 1466:  %
000003b8 : 0fc0f297;   % 1468: 	lw t0,PlayerSprite %
000003b9 : 1582a283;   % 1468:  %
000003ba : 0fc0f497;   % 1469: 	lhu s1,PlayerAnimCount %
000003bb : 1444d483;   % 1469:  %
000003bc : 0fc0f917;   % 1470: 	lhu s2,PlayerMaxFrame	# duracao do sprite atual em frames, se for 0 sera um sprite sem animacao %
000003bd : 14495903;   % 1470:  %
000003be : 0fc0f997;   % 1472: 	lhu s3,PlayerAnim %
000003bf : 1309d983;   % 1472:  %
000003c0 : 0fc0f297;   % 1473: 	lhu t0,PlayerOldAnim %
000003c1 : 12a2d283;   % 1473:  %
000003c2 : 02598663;   % 1474: 	beq s3,t0,ContinueAnim  # continua uma animacao se o valor dela nao trocou %
000003c3 : 0fc0f317;   % 1477: 	sw s5,PlayerLastFrame,t1 %
000003c4 : 13532a23;   % 1477:  %
000003c5 : 000004b3;   % 1478: 	mv s1,zero	# define que o proximo sprite sera o sprite 0 (da animacao definida abaixo) %
000003c6 : 00400313;   % 1480: 	li t1,4 %
000003c7 : 01331863;   % 1481: 	bne t1,s3,MostAnimCases %
000003c8 : 00300313;   % 1483: 	li t1,3 %
000003c9 : 00530463;   % 1484: 	beq t1,t0,MostAnimCases %
000003ca : 00300493;   % 1485: 	li s1,3  # se a animacao de queda rapida nao estiver vindo de um pulo unico, o kirby nao faz a cambalhota %
000003cb : 0fc0f317;   % 1488: 	sh s1,PlayerAnimCount,t1 %
000003cc : 10931023;   % 1488:  %
000003cd : 0fc0f317;   % 1491: 	sh s3,PlayerOldAnim,t1 %
000003ce : 0f331b23;   % 1491:  %
000003cf : 00000b33;   % 1493: 	mv s6,zero  # inicia definindo a duracao da nova animacao como zero, para o caso das que tem apenas 1 frame %
000003d0 : 0fc14b97;   % 1494: 	la s7,playerCol  # inicia armazenando o sprite de colisao basico, ja que e usado na maioria dos sprites %
000003d1 : 96cb8b93;   % 1494:  %
000003d2 : 16098063;   % 1505: 	beq s3,zero,PlayerIdle %
000003d3 : 00100293;   % 1506: 	li t0,1 %
000003d4 : 1a598663;   % 1507: 	beq s3,t0,PlayerWalk %
000003d5 : 00200293;   % 1508: 	li t0,2 %
000003d6 : 0fc10a17;   % 1509: 	la s4,kirbyBreak		# animacoes que tem apenas 1 frame nao precisam checar mudanca de frame %
000003d7 : 0b0a0a13;   % 1509:  %
000003d8 : 1e598863;   % 1510: 	beq s3,t0,PlayerBreak		# no caso do break ha a animacao de poeira %
000003d9 : 00300293;   % 1511: 	li t0,3 %
000003da : 0fc11a17;   % 1512: 	la s4,kirbyJump %
000003db : 900a0a13;   % 1512:  %
000003dc : 7c598063;   % 1513: 	beq s3,t0,GotPlayerSprite %
000003dd : 00400293;   % 1514: 	li t0,4 %
000003de : 20598a63;   % 1515: 	beq s3,t0,PlayerQuickFall %
000003df : 00500293;   % 1516: 	li t0,5 %
000003e0 : 26598e63;   % 1517: 	beq s3,t0,PlayerFly %
000003e1 : 00600293;   % 1518: 	li t0,6 %
000003e2 : 2a598463;   % 1519: 	beq s3,t0,PlayerSlowFall %
000003e3 : 00700293;   % 1520: 	li t0,7 %
000003e4 : 0fc11a17;   % 1521: 	la s4,kirbyBigIdle %
000003e5 : 060a0a13;   % 1521:  %
000003e6 : 78598c63;   % 1522: 	beq s3,t0,GotPlayerSprite %
000003e7 : 00800293;   % 1523: 	li t0,8 %
000003e8 : 2c598263;   % 1524: 	beq s3,t0,PlayerBigWalk %
000003e9 : 00900293;   % 1525: 	li t0,9 %
000003ea : 4e598463;   % 1526: 	beq s3,t0,PlayerStartFly %
000003eb : 00a00293;   % 1527: 	li t0,10 %
000003ec : 30598e63;   % 1528: 	beq s3,t0,PlayerStartEat %
000003ed : 00b00293;   % 1529: 	li t0,11 %
000003ee : 34598463;   % 1530: 	beq s3,t0,PlayerEat %
000003ef : 00c00293;   % 1531: 	li t0,12 %
000003f0 : 48598e63;   % 1532: 	beq s3,t0,PlayerEndEat %
000003f1 : 00d00293;   % 1533: 	li t0,13 %
000003f2 : 52598663;   % 1534: 	beq s3,t0,PlayerAirAttack %
000003f3 : 00e00293;   % 1535: 	li t0,14 %
000003f4 : 6e598663;   % 1536: 	beq s3,t0,PlayerFireAttack %
000003f5 : 00f00293;   % 1537: 	li t0,15 %
000003f6 : 0fc13a17;   % 1538: 	la s4,kirbyIceAtt0 %
000003f7 : d70a0a13;   % 1538:  %
000003f8 : 74598863;   % 1539: 	beq s3,t0,GotPlayerSprite %
000003f9 : 01000293;   % 1540: 	li t0,16 %
000003fa : 5a598863;   % 1541: 	beq s3,t0,PlayerIceAttack %
000003fb : 01100293;   % 1542: 	li t0,17 %
000003fc : 0fc13a17;   % 1543: 	la s4,kirbyIceAtt0 %
000003fd : d58a0a13;   % 1543:  %
000003fe : 72598c63;   % 1544: 	beq s3,t0,GotPlayerSprite %
000003ff : 01200293;   % 1545: 	li t0,18 %
00000400 : 00598263;   % 1546: 	beq s3,t0,PlayerStarAttack %
00000401 : 0fc0f297;   % 1549: 	lw t0,PlayerObjDelay %
00000402 : 0402a283;   % 1549:  %
00000403 : 02504863;   % 1550: 	bgt t0,zero,DoneStarObj %
00000404 : 01e00293;   % 1552: 	li t0,30 %
00000405 : 0fc0f317;   % 1553: 	sw t0,PlayerObjDelay,t1 %
00000406 : 02532823;   % 1553:  %
00000407 : 00600513;   % 1555: 	li a0,6 # id do objeto (estrela) ### %
00000408 : 00100593;   % 1556: 	li a1,1 # quantidade do objeto %
00000409 : 0fc0f617;   % 1557: 	lw a2,PlayerPosX %
0000040a : fec62603;   % 1557:  %
0000040b : 0fc0f697;   % 1558: 	lw a3,PlayerLastDir %
0000040c : 0246a683;   % 1558:  %
0000040d : 00000733;   % 1559: 	mv a4,zero %
0000040e : 9c0ff0ef;   % 1560: 	jal BuildObject %
0000040f : 720000ef;   % 1563: 	jal CheckNextSprAnim %
00000410 : 0034f493;   % 1564: 	andi s1,s1,3 %
00000411 : 0fc12a17;   % 1566: 	la s4,kirbyEat3Gnd %
00000412 : fd8a0a13;   % 1566:  %
00000413 : 00f00b13;   % 1567: 	li s6,15 %
00000414 : 0fc14b97;   % 1568: 	la s7,playerCol %
00000415 : 85cb8b93;   % 1568:  %
00000416 : 6c048c63;   % 1569: 	beq s1,zero,GotPlayerSprite %
00000417 : 00100293;   % 1570: 	li t0,1 %
00000418 : 0fc12a17;   % 1571: 	la s4,kirbyEat2 %
00000419 : be4a0a13;   % 1571:  %
0000041a : 00500b13;   % 1572: 	li s6,5 %
0000041b : 0fc14b97;   % 1573: 	la s7,playerEatCol %
0000041c : 94cb8b93;   % 1573:  %
0000041d : 6a548e63;   % 1574: 	beq s1,t0,GotPlayerSprite %
0000041e : 00200293;   % 1575: 	li t0,2 %
0000041f : 0fc12a17;   % 1576: 	la s4,kirbyEat1 %
00000420 : abca0a13;   % 1576:  %
00000421 : 00500b13;   % 1577: 	li s6,5 %
00000422 : 0fc14b97;   % 1578: 	la s7,playerCol %
00000423 : 824b8b93;   % 1578:  %
00000424 : 6a548063;   % 1579: 	beq s1,t0,GotPlayerSprite %
00000425 : 00300293;   % 1580: 	li t0,3 %
00000426 : 0fc12a17;   % 1581: 	la s4,kirbyEat0 %
00000427 : 994a0a13;   % 1581:  %
00000428 : 00500b13;   % 1582: 	li s6,5 %
00000429 : 68548663;   % 1583: 	beq s1,t0,GotPlayerSprite %
0000042a : 6b4000ef;   % 1586: 	jal CheckNextSprAnim %
0000042b : 0034f493;   % 1587: 	andi s1,s1,3 %
0000042c : 0fc10a17;   % 1589: 	la s4,kirbyIdle0 %
0000042d : 5a0a0a13;   % 1589:  %
0000042e : 09600b13;   % 1590: 	li s6,150 %
0000042f : 66048a63;   % 1591: 	beq s1,zero,GotPlayerSprite %
00000430 : 00100293;   % 1592: 	li t0,1 %
00000431 : 0fc10a17;   % 1593: 	la s4,kirbyIdle1 %
00000432 : 698a0a13;   % 1593:  %
00000433 : 00a00b13;   % 1594: 	li s6,10 %
00000434 : 66548063;   % 1595: 	beq s1,t0,GotPlayerSprite %
00000435 : 00200293;   % 1596: 	li t0,2 %
00000436 : 0fc10a17;   % 1597: 	la s4,kirbyIdle0 %
00000437 : 578a0a13;   % 1597:  %
00000438 : 00a00b13;   % 1598: 	li s6,10 %
00000439 : 64548663;   % 1599: 	beq s1,t0,GotPlayerSprite %
0000043a : 00300293;   % 1600: 	li t0,3 %
0000043b : 0fc10a17;   % 1601: 	la s4,kirbyIdle1 %
0000043c : 670a0a13;   % 1601:  %
0000043d : 00a00b13;   % 1602: 	li s6,10 %
0000043e : 62548c63;   % 1603: 	beq s1,t0,GotPlayerSprite %
0000043f : 660000ef;   % 1606: 	jal CheckNextSprAnim %
00000440 : 0034f493;   % 1607: 	andi s1,s1,3 %
00000441 : 0fc11a17;   % 1609: 	la s4,kirbyWalk0 %
00000442 : 870a0a13;   % 1609:  %
00000443 : 00a00b13;   % 1610: 	li s6,10 %
00000444 : 62048063;   % 1611: 	beq s1,zero,GotPlayerSprite %
00000445 : 00100293;   % 1612: 	li t0,1 %
00000446 : 0fc11a17;   % 1613: 	la s4,kirbyWalk1 %
00000447 : 968a0a13;   % 1613:  %
00000448 : 00a00b13;   % 1614: 	li s6,10 %
00000449 : 60548663;   % 1615: 	beq s1,t0,GotPlayerSprite %
0000044a : 00200293;   % 1616: 	li t0,2 %
0000044b : 0fc11a17;   % 1617: 	la s4,kirbyWalk2 %
0000044c : a60a0a13;   % 1617:  %
0000044d : 00a00b13;   % 1618: 	li s6,10 %
0000044e : 5e548c63;   % 1619: 	beq s1,t0,GotPlayerSprite %
0000044f : 00300293;   % 1620: 	li t0,3 %
00000450 : 0fc11a17;   % 1621: 	la s4,kirbyWalk3 %
00000451 : b58a0a13;   % 1621:  %
00000452 : 00a00b13;   % 1622: 	li s6,10 %
00000453 : 5e548263;   % 1623: 	beq s1,t0,GotPlayerSprite %
00000454 : 0fc0f297;   % 1626: 	lw t0,PlayerObjDelay %
00000455 : ef42a283;   % 1626:  %
00000456 : 5c504c63;   % 1627: 	bgt t0,zero,GotPlayerSprite # trocar essa label se copiar essa linha %
00000457 : 00400293;   % 1629: 	li t0,4 %
00000458 : 0fc0f317;   % 1630: 	sw t0,PlayerObjDelay,t1 %
00000459 : ee532223;   % 1630:  %
0000045a : 00100513;   % 1632: 	li a0,1 # id do objeto (poeira) %
0000045b : 00100593;   % 1633: 	li a1,1 # quantidade do objeto %
0000045c : 0fc0f617;   % 1634: 	lw a2,PlayerPosX %
0000045d : ea062603;   % 1634:  %
0000045e : 0fc0f697;   % 1635: 	lw a3,PlayerLastDir %
0000045f : ed86a683;   % 1635:  %
00000460 : 00000733;   % 1636: 	mv a4,zero %
00000461 : 874ff0ef;   % 1638: 	jal BuildObject %
00000462 : 5a80006f;   % 1640: 	j GotPlayerSprite %
00000463 : 5d0000ef;   % 1643: 	jal CheckNextSprAnim %
00000464 : 00500293;   % 1644: 	li t0,5 %
00000465 : 0054a333;   % 1645: 	slt t1,s1,t0 %
00000466 : 026484b3;   % 1646: 	mul s1,s1,t1		# um mod 5 manual %
00000467 : 0fc10a17;   % 1648: 	la s4,kirbyFall0 %
00000468 : f78a0a13;   % 1648:  %
00000469 : 00500b13;   % 1649: 	li s6,5 %
0000046a : 58048463;   % 1650: 	beq s1,zero,GotPlayerSprite %
0000046b : 00100293;   % 1651: 	li t0,1 %
0000046c : 0fc10a17;   % 1652: 	la s4,kirbyFall1 %
0000046d : 070a0a13;   % 1652:  %
0000046e : 00500b13;   % 1653: 	li s6,5 %
0000046f : 56548a63;   % 1654: 	beq s1,t0,GotPlayerSprite %
00000470 : 00200293;   % 1655: 	li t0,2 %
00000471 : 0fc10a17;   % 1656: 	la s4,kirbyFall2 %
00000472 : 168a0a13;   % 1656:  %
00000473 : 00500b13;   % 1657: 	li s6,5 %
00000474 : 56548063;   % 1658: 	beq s1,t0,GotPlayerSprite %
00000475 : 00300293;   % 1659: 	li t0,3 %
00000476 : 0fc10a17;   % 1660: 	la s4,kirbyFall3 %
00000477 : 260a0a13;   % 1660:  %
00000478 : 01e00b13;   % 1661: 	li s6,30 %
00000479 : 54548663;   % 1662: 	beq s1,t0,GotPlayerSprite %
0000047a : 00400293;   % 1663: 	li t0,4 %
0000047b : 0fc10a17;   % 1664: 	la s4,kirbyFall4 %
0000047c : 358a0a13;   % 1664:  %
0000047d : 1f400b13;   % 1665: 	li s6,500 %
0000047e : 52548c63;   % 1666: 	beq s1,t0,GotPlayerSprite %
0000047f : 0fc13b97;   % 1669: 	la s7,playerCol %
00000480 : 6b0b8b93;   % 1669:  %
00000481 : 558000ef;   % 1671: 	jal CheckNextSprAnim %
00000482 : 0014f493;   % 1672: 	andi s1,s1,1 %
00000483 : 0fc12a17;   % 1674: 	la s4,kirbyFly0 %
00000484 : 05ca0a13;   % 1674:  %
00000485 : 00a00b13;   % 1675: 	li s6,10 %
00000486 : 50048c63;   % 1676: 	beq s1,zero,GotPlayerSprite %
00000487 : 00100293;   % 1677: 	li t0,1 %
00000488 : 0fc12a17;   % 1678: 	la s4,kirbyFly1 %
00000489 : 294a0a13;   % 1678:  %
0000048a : 00a00b13;   % 1679: 	li s6,10 %
0000048b : 50548263;   % 1680: 	beq s1,t0,GotPlayerSprite %
0000048c : 0fc13b97;   % 1683: 	la s7,playerCol %
0000048d : 67cb8b93;   % 1683:  %
0000048e : 524000ef;   % 1685: 	jal CheckNextSprAnim %
0000048f : 0014f493;   % 1686: 	andi s1,s1,1 %
00000490 : 0fc12a17;   % 1688: 	la s4,kirbyFly0 %
00000491 : 028a0a13;   % 1688:  %
00000492 : 01900b13;   % 1689: 	li s6,25 %
00000493 : 4e048263;   % 1690: 	beq s1,zero,GotPlayerSprite %
00000494 : 00100293;   % 1691: 	li t0,1 %
00000495 : 0fc12a17;   % 1692: 	la s4,kirbyFly1 %
00000496 : 260a0a13;   % 1692:  %
00000497 : 01900b13;   % 1693: 	li s6,25 %
00000498 : 4c548863;   % 1694: 	beq s1,t0,GotPlayerSprite %
00000499 : 0fc13b97;   % 1697: 	la s7,playerCol %
0000049a : 648b8b93;   % 1697:  %
0000049b : 4f0000ef;   % 1699: 	jal CheckNextSprAnim %
0000049c : 0034f493;   % 1700: 	andi s1,s1,3 %
0000049d : 0fc11a17;   % 1702: 	la s4,kirbyBigWalk0 %
0000049e : fc8a0a13;   % 1702:  %
0000049f : 00a00b13;   % 1703: 	li s6,10 %
000004a0 : 4a048863;   % 1704: 	beq s1,zero,GotPlayerSprite %
000004a1 : 0fc0f317;   % 1706: 	lh t1,PlayerSpeedY # se o jogador estiver caindo trava nessa animacao %
000004a2 : d9a31303;   % 1706:  %
000004a3 : 4a604263;   % 1707: 	bgt t1,zero,GotPlayerSprite %
000004a4 : 00100293;   % 1709: 	li t0,1 %
000004a5 : 0fc11a17;   % 1710: 	la s4,kirbyBigWalk1 %
000004a6 : 1f4a0a13;   % 1710:  %
000004a7 : 00a00b13;   % 1711: 	li s6,10 %
000004a8 : 48548863;   % 1712: 	beq s1,t0,GotPlayerSprite %
000004a9 : 00200293;   % 1713: 	li t0,2 %
000004aa : 0fc11a17;   % 1714: 	la s4,kirbyBigWalk2 %
000004ab : 42ca0a13;   % 1714:  %
000004ac : 00a00b13;   % 1715: 	li s6,10 %
000004ad : 46548e63;   % 1716: 	beq s1,t0,GotPlayerSprite %
000004ae : 00300293;   % 1717: 	li t0,3 %
000004af : 0fc11a17;   % 1718: 	la s4,kirbyBigWalk1 %
000004b0 : 1cca0a13;   % 1718:  %
000004b1 : 00a00b13;   % 1719: 	li s6,10 %
000004b2 : 46548463;   % 1720: 	beq s1,t0,GotPlayerSprite %
000004b3 : 490000ef;   % 1723: 	jal CheckNextSprAnim %
000004b4 : 0014f493;   % 1724: 	andi s1,s1,1 %
000004b5 : 0fc12a17;   % 1726: 	la s4,kirbyEat1 %
000004b6 : 864a0a13;   % 1726:  %
000004b7 : 00500b13;   % 1727: 	li s6,5 %
000004b8 : 44048863;   % 1728: 	beq s1,zero,GotPlayerSprite %
000004b9 : 00100293;   % 1729: 	li t0,1 %
000004ba : 0fc12a17;   % 1730: 	la s4,kirbyEat2 %
000004bb : 95ca0a13;   % 1730:  %
000004bc : 00500b13;   % 1731: 	li s6,5 %
000004bd : 0fc13b97;   % 1732: 	la s7,playerEatCol %
000004be : 6c4b8b93;   % 1732:  %
000004bf : 42548a63;   % 1733: 	beq s1,t0,GotPlayerSprite %
000004c0 : 0fc0f297;   % 1736: 	lw t0,PlayerObjDelay %
000004c1 : d442a283;   % 1736:  %
000004c2 : 00a00313;   % 1737: 	li t1,10 %
000004c3 : 08628063;   % 1738: 	beq t0,t1,TinyDustObj2 %
000004c4 : 00500313;   % 1739: 	li t1,5 %
000004c5 : 0c628e63;   % 1740: 	beq t0,t1,TinyDustObj3 %
000004c6 : 12504c63;   % 1741: 	bgt t0,zero,DoneTinyDustObjs %
000004c7 : 00f00293;   % 1743: 	li t0,15 %
000004c8 : 0fc0f317;   % 1744: 	sw t0,PlayerObjDelay,t1 %
000004c9 : d2532223;   % 1744:  %
000004ca : 00500513;   % 1746: 	li a0,5 # id do objeto (area de puxar) %
000004cb : 00100593;   % 1747: 	li a1,1 # quantidade do objeto %
000004cc : 0fc0f617;   % 1748: 	lw a2,PlayerPosX %
000004cd : ce062603;   % 1748:  %
000004ce : 0fc0f697;   % 1749: 	lw a3,PlayerLastDir %
000004cf : d186a683;   % 1749:  %
000004d0 : 00000733;   % 1750: 	mv a4,zero %
000004d1 : eb5fe0ef;   % 1751: 	jal BuildObject %
000004d2 : 00200513;   % 1753: 	li a0,2 # id do objeto (poeira pequena) %
000004d3 : 00100593;   % 1754: 	li a1,1 # quantidade do objeto %
000004d4 : 0fc0f617;   % 1755: 	lw a2,PlayerPosX %
000004d5 : cc062603;   % 1755:  %
000004d6 : 0fc0f697;   % 1756: 	lw a3,PlayerLastDir %
000004d7 : cf86a683;   % 1756:  %
000004d8 : 00100713;   % 1757: 	li a4,1 %
000004d9 : e95fe0ef;   % 1758: 	jal BuildObject %
000004da : 00200513;   % 1760: 	li a0,2 # id do objeto (poeira pequena) %
000004db : 00100593;   % 1761: 	li a1,1 # quantidade do objeto %
000004dc : 0fc0f617;   % 1762: 	lw a2,PlayerPosX %
000004dd : ca062603;   % 1762:  %
000004de : 0fc0f697;   % 1763: 	lw a3,PlayerLastDir %
000004df : cd86a683;   % 1763:  %
000004e0 : 00300713;   % 1764: 	li a4,3 %
000004e1 : e75fe0ef;   % 1765: 	jal BuildObject %
000004e2 : 0c80006f;   % 1767: 	j DoneTinyDustObjs %
000004e3 : 00500513;   % 1770: 	li a0,5 # id do objeto (area de puxar) %
000004e4 : 00100593;   % 1771: 	li a1,1 # quantidade do objeto %
000004e5 : 0fc0f617;   % 1772: 	lw a2,PlayerPosX %
000004e6 : c7c62603;   % 1772:  %
000004e7 : 0fc0f697;   % 1773: 	lw a3,PlayerLastDir %
000004e8 : cb46a683;   % 1773:  %
000004e9 : 00000733;   % 1774: 	mv a4,zero %
000004ea : e51fe0ef;   % 1775: 	jal BuildObject %
000004eb : 00200513;   % 1777: 	li a0,2 # id do objeto (poeira pequena) %
000004ec : 00100593;   % 1778: 	li a1,1 # quantidade do objeto %
000004ed : 0fc0f617;   % 1779: 	lw a2,PlayerPosX %
000004ee : c5c62603;   % 1779:  %
000004ef : 0fc0f697;   % 1780: 	lw a3,PlayerLastDir %
000004f0 : c946a683;   % 1780:  %
000004f1 : 00000733;   % 1781: 	mv a4,zero %
000004f2 : e31fe0ef;   % 1782: 	jal BuildObject %
000004f3 : 00200513;   % 1784: 	li a0,2 # id do objeto (poeira pequena) %
000004f4 : 00100593;   % 1785: 	li a1,1 # quantidade do objeto %
000004f5 : 0fc0f617;   % 1786: 	lw a2,PlayerPosX %
000004f6 : c3c62603;   % 1786:  %
000004f7 : 0fc0f697;   % 1787: 	lw a3,PlayerLastDir %
000004f8 : c746a683;   % 1787:  %
000004f9 : 00500713;   % 1788: 	li a4,5 %
000004fa : e11fe0ef;   % 1789: 	jal BuildObject %
000004fb : 0640006f;   % 1791: 	j DoneTinyDustObjs %
000004fc : 00500513;   % 1794: 	li a0,5 # id do objeto (area de puxar) %
000004fd : 00100593;   % 1795: 	li a1,1 # quantidade do objeto %
000004fe : 0fc0f617;   % 1796: 	lw a2,PlayerPosX %
000004ff : c1862603;   % 1796:  %
00000500 : 0fc0f697;   % 1797: 	lw a3,PlayerLastDir %
00000501 : c506a683;   % 1797:  %
00000502 : 00000733;   % 1798: 	mv a4,zero %
00000503 : dedfe0ef;   % 1799: 	jal BuildObject %
00000504 : 00200513;   % 1801: 	li a0,2 # id do objeto (poeira pequena) %
00000505 : 00100593;   % 1802: 	li a1,1 # quantidade do objeto %
00000506 : 0fc0f617;   % 1803: 	lw a2,PlayerPosX %
00000507 : bf862603;   % 1803:  %
00000508 : 0fc0f697;   % 1804: 	lw a3,PlayerLastDir %
00000509 : c306a683;   % 1804:  %
0000050a : 00200713;   % 1805: 	li a4,2 %
0000050b : dcdfe0ef;   % 1806: 	jal BuildObject %
0000050c : 00200513;   % 1808: 	li a0,2 # id do objeto (poeira pequena) %
0000050d : 00100593;   % 1809: 	li a1,1 # quantidade do objeto %
0000050e : 0fc0f617;   % 1810: 	lw a2,PlayerPosX %
0000050f : bd862603;   % 1810:  %
00000510 : 0fc0f697;   % 1811: 	lw a3,PlayerLastDir %
00000511 : c106a683;   % 1811:  %
00000512 : 00400713;   % 1812: 	li a4,4 %
00000513 : dadfe0ef;   % 1813: 	jal BuildObject %
00000514 : 0fc11a17;   % 1817: 	la s4,kirbyEat2 %
00000515 : 7f4a0a13;   % 1817:  %
00000516 : 2d80006f;   % 1819: 	j GotPlayerSprite %
00000517 : 300000ef;   % 1822: 	jal CheckNextSprAnim %
00000518 : 0014f493;   % 1823: 	andi s1,s1,1 %
00000519 : 0fc11a17;   % 1825: 	la s4,kirbyEat2 %
0000051a : 7e0a0a13;   % 1825:  %
0000051b : 00500b13;   % 1826: 	li s6,5 %
0000051c : 0fc13b97;   % 1827: 	la s7,playerEatCol %
0000051d : 548b8b93;   % 1827:  %
0000051e : 2a048c63;   % 1828: 	beq s1,zero,GotPlayerSprite %
0000051f : 00100293;   % 1829: 	li t0,1 %
00000520 : 0fc11a17;   % 1830: 	la s4,kirbyEat1 %
00000521 : 6b8a0a13;   % 1830:  %
00000522 : 00500b13;   % 1831: 	li s6,5 %
00000523 : 2a548263;   % 1832: 	beq s1,t0,GotPlayerSprite %
00000524 : 2cc000ef;   % 1835: 	jal CheckNextSprAnim %
00000525 : 0034f493;   % 1836: 	andi s1,s1,3 %
00000526 : 0fc11a17;   % 1838: 	la s4,kirbyEat0 %
00000527 : 594a0a13;   % 1838:  %
00000528 : 00500b13;   % 1839: 	li s6,5 %
00000529 : 28048663;   % 1840: 	beq s1,zero,GotPlayerSprite %
0000052a : 00100293;   % 1841: 	li t0,1 %
0000052b : 0fc11a17;   % 1842: 	la s4,kirbyEat1 %
0000052c : 68ca0a13;   % 1842:  %
0000052d : 00500b13;   % 1843: 	li s6,5 %
0000052e : 26548c63;   % 1844: 	beq s1,t0,GotPlayerSprite %
0000052f : 00200293;   % 1845: 	li t0,2 %
00000530 : 0fc11a17;   % 1846: 	la s4,kirbyEat2 %
00000531 : 784a0a13;   % 1846:  %
00000532 : 00500b13;   % 1847: 	li s6,5 %
00000533 : 0fc13b97;   % 1848: 	la s7,playerEatCol %
00000534 : 4ecb8b93;   % 1848:  %
00000535 : 24548e63;   % 1849: 	beq s1,t0,GotPlayerSprite %
00000536 : 00300293;   % 1850: 	li t0,3 %
00000537 : 0fc12a17;   % 1851: 	la s4,kirbyEat3 %
00000538 : 8f4a0a13;   % 1851:  %
00000539 : 00500b13;   % 1852: 	li s6,5 %
0000053a : 0fc13b97;   % 1853: 	la s7,playerCol %
0000053b : 3c4b8b93;   % 1853:  %
0000053c : 24548063;   % 1854: 	beq s1,t0,GotPlayerSprite %
0000053d : 0fc0f297;   % 1857: 	lw t0,PlayerObjDelay %
0000053e : b502a283;   % 1857:  %
0000053f : 02504863;   % 1858: 	bgt t0,zero,DoneAirObj %
00000540 : 01e00293;   % 1860: 	li t0,30 %
00000541 : 0fc0f317;   % 1861: 	sw t0,PlayerObjDelay,t1 %
00000542 : b4532023;   % 1861:  %
00000543 : 00600513;   % 1863: 	li a0,6 # id do objeto (ar) %
00000544 : 00100593;   % 1864: 	li a1,1 # quantidade do objeto %
00000545 : 0fc0f617;   % 1865: 	lw a2,PlayerPosX %
00000546 : afc62603;   % 1865:  %
00000547 : 0fc0f697;   % 1866: 	lw a3,PlayerLastDir %
00000548 : b346a683;   % 1866:  %
00000549 : 00000733;   % 1867: 	mv a4,zero %
0000054a : cd1fe0ef;   % 1868: 	jal BuildObject %
0000054b : 230000ef;   % 1871: 	jal CheckNextSprAnim %
0000054c : 0034f493;   % 1872: 	andi s1,s1,3 %
0000054d : 0fc12a17;   % 1874: 	la s4,kirbyEat3 %
0000054e : 89ca0a13;   % 1874:  %
0000054f : 00f00b13;   % 1875: 	li s6,15 %
00000550 : 0fc13b97;   % 1876: 	la s7,playerCol %
00000551 : 36cb8b93;   % 1876:  %
00000552 : 1e048463;   % 1877: 	beq s1,zero,GotPlayerSprite %
00000553 : 00100293;   % 1878: 	li t0,1 %
00000554 : 0fc11a17;   % 1879: 	la s4,kirbyEat2 %
00000555 : 6f4a0a13;   % 1879:  %
00000556 : 00500b13;   % 1880: 	li s6,5 %
00000557 : 0fc13b97;   % 1881: 	la s7,playerEatCol %
00000558 : 45cb8b93;   % 1881:  %
00000559 : 1c548663;   % 1882: 	beq s1,t0,GotPlayerSprite %
0000055a : 00200293;   % 1883: 	li t0,2 %
0000055b : 0fc11a17;   % 1884: 	la s4,kirbyEat1 %
0000055c : 5cca0a13;   % 1884:  %
0000055d : 00500b13;   % 1885: 	li s6,5 %
0000055e : 0fc13b97;   % 1886: 	la s7,playerCol %
0000055f : 334b8b93;   % 1886:  %
00000560 : 1a548863;   % 1887: 	beq s1,t0,GotPlayerSprite %
00000561 : 00300293;   % 1888: 	li t0,3 %
00000562 : 0fc11a17;   % 1889: 	la s4,kirbyEat0 %
00000563 : 4a4a0a13;   % 1889:  %
00000564 : 00500b13;   % 1890: 	li s6,5 %
00000565 : 18548e63;   % 1891: 	beq s1,t0,GotPlayerSprite %
00000566 : 0fc0f297;   % 1894: 	lw t0,PlayerObjDelay %
00000567 : aac2a283;   % 1894:  %
00000568 : 00800313;   % 1895: 	li t1,8 %
00000569 : 08628063;   % 1896: 	beq t0,t1,IceObjects2 %
0000056a : 0e504463;   % 1897: 	bgt t0,zero,DoneIceObjs %
0000056b : 01000293;   % 1899: 	li t0,16 %
0000056c : 0fc0f317;   % 1900: 	sw t0,PlayerObjDelay,t1 %
0000056d : a8532a23;   % 1900:  %
0000056e : 00400513;   % 1902: 	li a0,4 # id do objeto (gelo) %
0000056f : 0fc0f697;   % 1904: 	lw a3,PlayerLastDir %
00000570 : a946a683;   % 1904:  %
00000571 : 00000733;   % 1905: 	mv a4,zero ### TODO trocar essa logica para usar o MovPat %
00000572 : 0fc0fc17;   % 1907: 	lhu s8,PlayerPosX %
00000573 : a48c5c03;   % 1907:  %
00000574 : 0fc0fc97;   % 1908: 	lhu s9,PlayerPosY %
00000575 : a42cdc83;   % 1908:  %
00000576 : 00100593;   % 1910: 	li a1,1 # quantidade do objeto %
00000577 : 008c0293;   % 1911: 	addi t0,s8,8   %
00000578 : 014c8313;   % 1912: 	addi t1,s9,20 %
00000579 : 01031613;   % 1913: 	slli a2,t1,16 %
0000057a : 00560633;   % 1914: 	add a2,a2,t0 %
0000057b : c0dfe0ef;   % 1915: 	jal BuildObject %
0000057c : 00100593;   % 1917: 	li a1,1 # quantidade do objeto %
0000057d : 008c0293;   % 1918: 	addi t0,s8,8 %
0000057e : fecc8313;   % 1919: 	addi t1,s9,-20 %
0000057f : 01031613;   % 1920: 	slli a2,t1,16 %
00000580 : 00560633;   % 1921: 	add a2,a2,t0 %
00000581 : bf5fe0ef;   % 1922: 	jal BuildObject %
00000582 : 00100593;   % 1924: 	li a1,1 # quantidade do objeto %
00000583 : fecc0293;   % 1925: 	addi t0,s8,-20 %
00000584 : 000c8313;   % 1926: 	addi t1,s9,0 %
00000585 : 01031613;   % 1927: 	slli a2,t1,16 %
00000586 : 00560633;   % 1928: 	add a2,a2,t0 %
00000587 : bddfe0ef;   % 1929: 	jal BuildObject %
00000588 : 0700006f;   % 1931: 	j DoneIceObjs %
00000589 : 00400513;   % 1934: 	li a0,4 # id do objeto (gelo) %
0000058a : 0fc0f697;   % 1936: 	lw a3,PlayerLastDir %
0000058b : a286a683;   % 1936:  %
0000058c : 00000733;   % 1937: 	mv a4,zero %
0000058d : 0fc0fc17;   % 1939: 	lhu s8,PlayerPosX %
0000058e : 9dcc5c03;   % 1939:  %
0000058f : 0fc0fc97;   % 1940: 	lhu s9,PlayerPosY %
00000590 : 9d6cdc83;   % 1940:  %
00000591 : 00100593;   % 1942: 	li a1,1 # quantidade do objeto %
00000592 : ff8c0293;   % 1943: 	addi t0,s8,-8 %
00000593 : 014c8313;   % 1944: 	addi t1,s9,20 %
00000594 : 01031613;   % 1945: 	slli a2,t1,16 %
00000595 : 00560633;   % 1946: 	add a2,a2,t0 %
00000596 : ba1fe0ef;   % 1947: 	jal BuildObject %
00000597 : 00100593;   % 1949: 	li a1,1 # quantidade do objeto %
00000598 : ff8c0293;   % 1950: 	addi t0,s8,-8 %
00000599 : fecc8313;   % 1951: 	addi t1,s9,-20 %
0000059a : 01031613;   % 1952: 	slli a2,t1,16 %
0000059b : 00560633;   % 1953: 	add a2,a2,t0 %
0000059c : b89fe0ef;   % 1954: 	jal BuildObject %
0000059d : 00100593;   % 1956: 	li a1,1 # quantidade do objeto %
0000059e : 014c0293;   % 1957: 	addi t0,s8,20 %
0000059f : 000c8313;   % 1958: 	addi t1,s9,0 %
000005a0 : 01031613;   % 1959: 	slli a2,t1,16 %
000005a1 : 00560633;   % 1960: 	add a2,a2,t0 %
000005a2 : b71fe0ef;   % 1961: 	jal BuildObject %
000005a3 : 0040006f;   % 1963: 	j DoneIceObjs %
000005a4 : 0cc000ef;   % 1967: 	jal CheckNextSprAnim %
000005a5 : 0014f493;   % 1968: 	andi s1,s1,1 %
000005a6 : 0fc12a17;   % 1970: 	la s4,kirbyIceAtt1 %
000005a7 : 7bca0a13;   % 1970:  %
000005a8 : 00300b13;   % 1971: 	li s6,3 %
000005a9 : 08048663;   % 1972: 	beq s1,zero,GotPlayerSprite %
000005aa : 00100293;   % 1973: 	li t0,1 %
000005ab : 0fc13a17;   % 1974: 	la s4,kirbyIceAtt2 %
000005ac : 8b4a0a13;   % 1974:  %
000005ad : 00300b13;   % 1975: 	li s6,3 %
000005ae : 06548c63;   % 1976: 	beq s1,t0,GotPlayerSprite %
000005af : 0fc0f297;   % 1979: 	lw t0,PlayerObjDelay %
000005b0 : 9882a283;   % 1979:  %
000005b1 : 00600313;   % 1980: 	li t1,6 %
000005b2 : 0062a733;   % 1981: 	slt a4,t0,t1 # a4, define se o fogo vai para cima (0) ou para baixo (1) %
000005b3 : 00628a63;   % 1982: 	beq t0,t1,FireObject2 %
000005b4 : 02504863;   % 1983: 	bgt t0,zero,DoneFireObjs %
000005b5 : 00c00293;   % 1985: 	li t0,12 %
000005b6 : 0fc0f317;   % 1986: 	sw t0,PlayerObjDelay,t1 %
000005b7 : 96532623;   % 1986:  %
000005b8 : 00300513;   % 1989: 	li a0,3 # id do objeto (fogo) %
000005b9 : 00100593;   % 1991: 	li a1,1 # quantidade do objeto %
000005ba : 0fc0f617;   % 1992: 	lw a2,PlayerPosX %
000005bb : 92862603;   % 1992:  %
000005bc : 0fc0f697;   % 1993: 	lw a3,PlayerLastDir %
000005bd : 9606a683;   % 1993:  %
000005be : b01fe0ef;   % 1994: 	jal BuildObject %
000005bf : 0040006f;   % 1996: 	j DoneFireObjs %
000005c0 : 05c000ef;   % 1999: 	jal CheckNextSprAnim %
000005c1 : 0014f493;   % 2000: 	andi s1,s1,1 %
000005c2 : 0fc12a17;   % 2002: 	la s4,kirbyFireAtt0 %
000005c3 : 428a0a13;   % 2002:  %
000005c4 : 00300b13;   % 2003: 	li s6,3 %
000005c5 : 00048e63;   % 2004: 	beq s1,zero,GotPlayerSprite %
000005c6 : 00100293;   % 2005: 	li t0,1 %
000005c7 : 0fc12a17;   % 2006: 	la s4,kirbyFireAtt1 %
000005c8 : 520a0a13;   % 2006:  %
000005c9 : 00300b13;   % 2007: 	li s6,3 %
000005ca : 00548463;   % 2008: 	beq s1,t0,GotPlayerSprite %
000005cb : f65ff06f;   % 2011: 	j DoneIceObjs %
000005cc : 0fc0f297;   % 2014: 	sh s1,PlayerAnimCount,t0 %
000005cd : 8e929e23;   % 2014:  %
000005ce : 0fc0f297;   % 2015: 	sw s4,PlayerSprite,t0	# armazena o endereco do novo sprite no PlayerSprite %
000005cf : 9142a023;   % 2015:  %
000005d0 : 0fc0f297;   % 2016: 	sh s6,PlayerMaxFrame,t0  # armazena a duracao da animacao atual %
000005d1 : 8f629a23;   % 2016:  %
000005d2 : 0fc0f297;   % 2017: 	sw s7,PlayerColSprite,t0  # armazena o sprite de colisao %
000005d3 : 8f72aa23;   % 2017:  %
000005d4 : 00012083;   % 2020: 	lw ra,0(sp) %
000005d5 : 00410113;   % 2021: 	addi sp,sp,4			# recupera endereco de retorno da pilha %
000005d6 : 00008067;   % 2023: 	ret %
000005d7 : 0fc0f317;   % 2029: 	lw t1,PlayerLastFrame %
000005d8 : 8e432303;   % 2029:  %
000005d9 : 406a83b3;   % 2031: 	sub t2,s5,t1	 %
000005da : 0123ca63;   % 2032: 	blt t2,s2,keepSprAnim %
000005db : 00090863;   % 2033: 	beq s2,zero,keepSprAnim		# se estiver chegando de um sprite fixo %
000005dc : 0fc0f297;   % 2035: 	sw s5,PlayerLastFrame,t0 %
000005dd : 8d52a823;   % 2035:  %
000005de : 00148493;   % 2036: 	addi s1,s1,1 		# avanca o contador de sprites da animacao se a duracao do sprite passou %
000005df : 00008067;   % 2039: 	ret %
000005e0 : fd810113;   % 2046: 	addi sp,sp,-40 %
000005e1 : 00112023;   % 2047: 	sw ra,0(sp) %
000005e2 : 00812223;   % 2048: 	sw s0,4(sp) %
000005e3 : 00912423;   % 2049: 	sw s1,8(sp) %
000005e4 : 01212623;   % 2050: 	sw s2,12(sp) %
000005e5 : 01312823;   % 2051: 	sw s3,16(sp) %
000005e6 : 01412a23;   % 2052: 	sw s4,20(sp) %
000005e7 : 01512c23;   % 2053: 	sw s5,24(sp) %
000005e8 : 01612e23;   % 2054: 	sw s6,28(sp) %
000005e9 : 03712023;   % 2055: 	sw s7,32(sp) %
000005ea : 03812223;   % 2056: 	sw s8,36(sp) %
000005eb : 00d00a33;   % 2058: 	mv s4,a3 %
000005ec : 0fc0f297;   % 2060: 	la t0,tempPos %
000005ed : 8b028293;   % 2060:  %
000005ee : 00b2a023;   % 2061: 	sw a1,0(t0) %
000005ef : 00029403;   % 2062: 	lh s0,0(t0) %
000005f0 : 00229483;   % 2063: 	lh s1,2(t0)			# salva posicao inicial do sprite %
000005f1 : 00851903;   % 2065: 	lh s2,8(a0)			# salva a distancia X para iniciar a desenhar o sprite %
000005f2 : 00a51983;   % 2066: 	lh s3,10(a0)			# salva a distancia Y para iniciar a desenhar o sprite %
000005f3 : 0fc0f297;   % 2068: 	lhu t0,OffsetX %
000005f4 : 83c2d283;   % 2068:  %
000005f5 : 40540e33;   % 2069: 	sub t3,s0,t0			# subtrai o X do sprite pelo offset X %
000005f6 : 412e0e33;   % 2070: 	sub t3,t3,s2			# subtrai a distancia X para iniciar o sprite %
000005f7 : 0fc0f297;   % 2071: 	lhu t0,OffsetY			 %
000005f8 : 82e2d283;   % 2071:  %
000005f9 : 40548eb3;   % 2072: 	sub t4,s1,t0			# subtrai o Y do sprite pelo offset Y %
000005fa : 413e8eb3;   % 2073: 	sub t4,t4,s3			# subtrai a distancia Y para iniciar o sprite %
000005fb : 14000313;   % 2075: 	li t1,320 %
000005fc : 0f000393;   % 2076: 	li t2,240 %
000005fd : 0fc0f697;   % 2080: 	lw a3,BitmapFrame %
000005fe : 80c6a683;   % 2080:  %
000005ff : 03d30333;   % 2082: 	mul t1,t1,t4 %
00000600 : 00668bb3;   % 2083: 	add s7,a3,t1 			# adiciona y ao endereco do bitmap e armazena esse valor em s7 para evitar o underflow de sprites no bitmap %
00000601 : 13fb8c13;   % 2084: 	addi s8,s7,319			# s8, valor maximo da linha, para evitar o overflow de sprites %
00000602 : 01cb82b3;   % 2086: 	add t0,s7,t3 			# adiciona x ao endereco do bitmap %
00000603 : 00c50313;   % 2088: 	addi t1,a0,12		# endereco do sprite mais spriteHeader %
00000604 : 000003b3;   % 2090: 	mv t2,zero %
00000605 : 00000e33;   % 2091: 	mv t3,zero %
00000606 : 00052e83;   % 2093: 	lw t4,0(a0) 			# guarda a largura do sprite %
00000607 : 00452f03;   % 2094: 	lw t5,4(a0) 			# guarda a altura do sprite %
00000608 : 060a0863;   % 2096: 	beq s4,zero,PreLinhaRev %
00000609 : 02d2ce63;   % 2099: 	blt t0,a3,SkipOOBLinha %
0000060a : 0372cc63;   % 2100: 	blt t0,s7,SkipOOBLinha %
0000060b : 025c4a63;   % 2101: 	bgt t0,s8,SkipOOBLinha %
0000060c : 00034f83;   % 2103: 	lbu t6,0(t1) 			# guarda um pixel do sprite (nao pode ser word por nao estar sempre alinhado com o endereco) %
0000060d : 0d0000ef;   % 2104: 	jal CheckColors %
0000060e : 01f28023;   % 2105: 	sb t6,0(t0) 			# desenha no bitmap display (4 pixels separadamente) %
0000060f : 00134f83;   % 2106: 	lbu t6,1(t1) 			 %
00000610 : 0c4000ef;   % 2107: 	jal CheckColors %
00000611 : 01f280a3;   % 2108: 	sb t6,1(t0) 			 %
00000612 : 00234f83;   % 2109: 	lbu t6,2(t1) 			 %
00000613 : 0b8000ef;   % 2110: 	jal CheckColors %
00000614 : 01f28123;   % 2111: 	sb t6,2(t0) 			 %
00000615 : 00334f83;   % 2112: 	lbu t6,3(t1) 			 %
00000616 : 0ac000ef;   % 2113: 	jal CheckColors %
00000617 : 01f281a3;   % 2114: 	sb t6,3(t0) 			 %
00000618 : 00428293;   % 2116: 	addi t0,t0,4 			# avanca o endereco do bitmap display em 4 %
00000619 : 00430313;   % 2117: 	addi t1,t1,4 			# avanca o endereco da imagem em 4 %
0000061a : 004e0e13;   % 2119: 	addi t3,t3,4 			# avanca o contador de colunas em 4 %
0000061b : fbde4ce3;   % 2120: 	blt t3,t4,Linha 		# enquanto a linha nao estiver completa, continua desenhando ela %
0000061c : 140b8b93;   % 2122: 	addi s7,s7,320 %
0000061d : 140c0c13;   % 2123: 	addi s8,s8,320 %
0000061e : 14028293;   % 2125: 	addi t0,t0,320 			# avanca para a proxima linha %
0000061f : 41d282b3;   % 2126: 	sub t0,t0,t4 			# subtrai a largura do sprite %
00000620 : 00000e33;   % 2128: 	mv t3,zero 			# reseta o contador de colunas %
00000621 : 00138393;   % 2129: 	addi t2,t2,1 			# avanca o contador de linhas em 1 %
00000622 : f9e3cee3;   % 2130: 	blt t2,t5,Linha 		# enquanto o contador de linhas for menor que a altura repete a funcao %
00000623 : 0e80006f;   % 2131: 	j FimPrint %
00000624 : 01d282b3;   % 2134: 	add t0,t0,t4 %
00000625 : ffc28293;   % 2135: 	addi t0,t0,-4 %
00000626 : 02d2ce63;   % 2138: 	blt t0,a3,SkipOOBLinhaRev %
00000627 : 0372cc63;   % 2139: 	blt t0,s7,SkipOOBLinhaRev %
00000628 : 025c4a63;   % 2140: 	bgt t0,s8,SkipOOBLinhaRev %
00000629 : 00334f83;   % 2142: 	lbu t6,3(t1) 			# guarda um pixel do sprite (nao pode ser word por nao estar sempre alinhado com o endereco) %
0000062a : 05c000ef;   % 2143: 	jal CheckColors %
0000062b : 01f28023;   % 2144: 	sb t6,0(t0) 			# desenha no bitmap display (4 pixels separadamente) %
0000062c : 00234f83;   % 2145: 	lbu t6,2(t1) 			 %
0000062d : 050000ef;   % 2146: 	jal CheckColors %
0000062e : 01f280a3;   % 2147: 	sb t6,1(t0) 			 %
0000062f : 00134f83;   % 2148: 	lbu t6,1(t1) 			 %
00000630 : 044000ef;   % 2149: 	jal CheckColors %
00000631 : 01f28123;   % 2150: 	sb t6,2(t0) 			 %
00000632 : 00034f83;   % 2151: 	lbu t6,0(t1) 			 %
00000633 : 038000ef;   % 2152: 	jal CheckColors %
00000634 : 01f281a3;   % 2153: 	sb t6,3(t0)  %
00000635 : ffc28293;   % 2156: 	addi t0,t0,-4 			# recua o endereco do bitmap display em 4 %
00000636 : 00430313;   % 2157: 	addi t1,t1,4 			# avanca o endereco da imagem em 4 %
00000637 : 004e0e13;   % 2159: 	addi t3,t3,4 			# avanca o contador de colunas em 4 %
00000638 : fbde4ce3;   % 2160: 	blt t3,t4,LinhaReverse 		# enquanto a linha nao estiver completa, continua desenhando ela %
00000639 : 140b8b93;   % 2162: 	addi s7,s7,320 %
0000063a : 140c0c13;   % 2163: 	addi s8,s8,320 %
0000063b : 14028293;   % 2165: 	addi t0,t0,320 			# avanca para a proxima linha %
0000063c : 01d282b3;   % 2166: 	add t0,t0,t4 %
0000063d : 00000e33;   % 2168: 	mv t3,zero 			# reseta o contador de colunas %
0000063e : 00138393;   % 2169: 	addi t2,t2,1 			# avanca o contador de linhas em 1 %
0000063f : f9e3cee3;   % 2170: 	blt t2,t5,LinhaReverse 		# enquanto o contador de linhas for menor que a altura repete a funcao %
00000640 : 0740006f;   % 2171: 	j FimPrint %
00000641 : 06070663;   % 2175: 	beq a4,zero,EndCheckColors %
00000642 : 00100b13;   % 2176: 	li s6,1 %
00000643 : 01670863;   % 2177: 	beq a4,s6,FireColors %
00000644 : 00200b13;   % 2178: 	li s6,2 %
00000645 : 03670663;   % 2179: 	beq a4,s6,IceColors %
00000646 : 0580006f;   % 2180: 	j EndCheckColors %
00000647 : 09f00b13;   % 2183: 	li s6,159 %
00000648 : 016f8863;   % 2184: 	beq t6,s6,DarkFire %
00000649 : 0ef00b13;   % 2185: 	li s6,239 %
0000064a : 016f8863;   % 2186: 	beq t6,s6,LightFire %
0000064b : 0440006f;   % 2187: 	j EndCheckColors %
0000064c : 06700f93;   % 2188: DarkFire: li t6,103 %
0000064d : 03c0006f;   % 2189: 	j EndCheckColors %
0000064e : 0b700f93;   % 2190: LightFire: li t6,183 %
0000064f : 0340006f;   % 2191: 	j EndCheckColors %
00000650 : 000f8c63;   % 2194: 	beq t6,zero,BorderIce %
00000651 : 09f00b13;   % 2195: 	li s6,159 %
00000652 : 016f8c63;   % 2196: 	beq t6,s6,DarkIce %
00000653 : 0ef00b13;   % 2197: 	li s6,239 %
00000654 : 016f8c63;   % 2198: 	beq t6,s6,LightIce %
00000655 : 01c0006f;   % 2199: 	j EndCheckColors %
00000656 : 08100f93;   % 2200: BorderIce: li t6,129 %
00000657 : 0140006f;   % 2201: 	j EndCheckColors %
00000658 : 0eb00f93;   % 2202: DarkIce: li t6,235 %
00000659 : 00c0006f;   % 2203: 	j EndCheckColors %
0000065a : 0ff00f93;   % 2204: LightIce: li t6,255 %
0000065b : 0040006f;   % 2205: 	j EndCheckColors %
0000065c : 00008067;   % 2207: 	ret %
0000065d : 00012083;   % 2210: 	lw ra,0(sp) %
0000065e : 00412403;   % 2211: 	lw s0,4(sp) %
0000065f : 00812483;   % 2212: 	lw s1,8(sp) %
00000660 : 00c12903;   % 2213: 	lw s2,12(sp) %
00000661 : 01012983;   % 2214: 	lw s3,16(sp) %
00000662 : 01412a03;   % 2215: 	lw s4,20(sp) %
00000663 : 01812a83;   % 2216: 	lw s5,24(sp) %
00000664 : 01c12b03;   % 2217: 	lw s6,28(sp) %
00000665 : 02012b83;   % 2218: 	lw s7,32(sp) %
00000666 : 02412c03;   % 2219: 	lw s8,36(sp) %
00000667 : 02810113;   % 2220: 	addi sp,sp,40 %
00000668 : 00008067;   % 2222: 	ret  %
00000669 : fe010113;   % 2227: 	addi sp,sp,-32 %
0000066a : 00112023;   % 2228: 	sw ra,0(sp) %
0000066b : 00812223;   % 2229: 	sw s0,4(sp) %
0000066c : 00912423;   % 2230: 	sw s1,8(sp) %
0000066d : 01212623;   % 2231: 	sw s2,12(sp) %
0000066e : 01312823;   % 2232: 	sw s3,16(sp) %
0000066f : 01412a23;   % 2233: 	sw s4,20(sp) %
00000670 : 01512c23;   % 2234: 	sw s5,24(sp) %
00000671 : 01612e23;   % 2235: 	sw s6,28(sp) %
00000672 : 00055583;   % 2237: 	lhu a1,0(a0)			# a1, posicao X original do sprite %
00000673 : 00255603;   % 2238: 	lhu a2,2(a0)			# a2, posicao Y original do sprite %
00000674 : 0045d493;   % 2241: 	srli s1,a1,4			# s1, divisao da posicao X por 16 %
00000675 : 00465993;   % 2244: 	srli s3,a2,4			# s3, divisao da posicao Y por 16 %
00000676 : 0fc0f297;   % 2246: 	la t0,mapa40x30 #mapaCodesAtual			 %
00000677 : de428293;   % 2246:  %
00000678 : 0002a303;   % 2247: 	lw t1,0(t0)			# t1, tamanho do mapa de tiles %
00000679 : 026983b3;   % 2248: 	mul t2,s3,t1			 %
0000067a : 00c28293;   % 2250: 	addi t0,t0,12 %
0000067b : 009282b3;   % 2251: 	add t0,t0,s1			# adiciona o numero de colunas de tiles %
0000067c : 007282b3;   % 2252: 	add t0,t0,t2			# adiciona o numero de linhas de tiles %
0000067d : 0002ce83;   % 2254: 	lbu t4,0(t0)			# valor do primeiro tile -> t4 = 0x00000011 %
0000067e : 0012ce03;   % 2256: 	lbu t3,1(t0)			# valor do segundo tile %
0000067f : 008e1e13;   % 2257: 	slli t3,t3,8 %
00000680 : 01ce8eb3;   % 2258: 	add t4,t4,t3			# t4 = 0x00002211 %
00000681 : 006282b3;   % 2260: 	add t0,t0,t1			 %
00000682 : 0002ce03;   % 2261: 	lbu t3,0(t0)			# valor do terceiro tile %
00000683 : 010e1e13;   % 2262: 	slli t3,t3,16 %
00000684 : 01ce8eb3;   % 2263: 	add t4,t4,t3			# t4 = 0x00332211 %
00000685 : 0012ce03;   % 2265: 	lbu t3,1(t0)			# valor do quarto tile %
00000686 : 018e1e13;   % 2266: 	slli t3,t3,24 %
00000687 : 01ce8eb3;   % 2267: 	add t4,t4,t3			# t4 = 0x44332211 %
00000688 : 0fc0ea17;   % 2269: 	la s4,BGTileCodes		# s4, endereco com todos os codigos de tile %
00000689 : 628a0a13;   % 2269:  %
0000068a : 01da2023;   % 2270: 	sw t4,0(s4)			 %
0000068b : 00000ab3;   % 2271: 	mv s5,zero			# s5, contador de tiles %
0000068c : 000a4b03;   % 2274: 	lbu s6,0(s4) 			# s6, codigo do tile atual %
0000068d : 00100e13;   % 2276: 	li t3,1				# analise dos codigos de tile %
0000068e : 03cb0663;   % 2277: 	beq s6,t3,GetColTile1 %
0000068f : 00200e13;   % 2278: 	li t3,2 %
00000690 : 03cb0863;   % 2279: 	beq s6,t3,GetColTile2 %
00000691 : 00300e13;   % 2280: 	li t3,3 %
00000692 : 03cb0a63;   % 2281: 	beq s6,t3,GetColTile3 %
00000693 : 00400e13;   % 2282: 	li t3,4 %
00000694 : 03cb0c63;   % 2283: 	beq s6,t3,GetColTile4 %
00000695 : 00500e13;   % 2284: 	li t3,5 %
00000696 : 03cb0e63;   % 2285: 	beq s6,t3,GetColTile5 %
00000697 : 00600e13;   % 2286: 	li t3,6 %
00000698 : 05cb0063;   % 2287: 	beq s6,t3,GetColTile6 %
00000699 : 0fc14797;   % 2291: 	la a5,emptyCol %
0000069a : 23878793;   % 2291:  %
0000069b : 0400006f;   % 2292: 	j GotLimparTile %
0000069c : 0fc14797;   % 2295: 	la a5,emptyCol %
0000069d : 22c78793;   % 2295:  %
0000069e : 0340006f;   % 2296: 	j GotLimparTile %
0000069f : 0fc14797;   % 2299: 	la a5,plataforma1Col %
000006a0 : 32c78793;   % 2299:  %
000006a1 : 0280006f;   % 2300: 	j GotLimparTile %
000006a2 : 0fc14797;   % 2303: 	la a5,plataforma2Col %
000006a3 : 42c78793;   % 2303:  %
000006a4 : 01c0006f;   % 2304: 	j GotLimparTile %
000006a5 : 0fc14797;   % 2307: 	la a5,plataforma3Col %
000006a6 : 52c78793;   % 2307:  %
000006a7 : 0100006f;   % 2308: 	j GotLimparTile %
000006a8 : 0fc14797;   % 2311: 	la a5,blocoExempCol %
000006a9 : 0f078793;   % 2311:  %
000006aa : 0040006f;   % 2312: 	j GotLimparTile %
000006ab : 0fc14297;   % 2316: 	la t0,collisionRender %
000006ac : ce428293;   % 2316:  %
000006ad : 000a8863;   % 2318: 	beq s5,zero,LeftColTile %
000006ae : 00200313;   % 2319: 	li t1,2 %
000006af : 006a8463;   % 2320: 	beq s5,t1,LeftColTile %
000006b0 : 01028293;   % 2322: 	addi t0,t0,16 %
000006b1 : 006ac463;   % 2324: 	blt s5,t1,UpperColTile %
000006b2 : 20028293;   % 2326: 	addi t0,t0,512 %
000006b3 : 00f00333;   % 2329: 	mv t1,a5 %
000006b4 : 00c30313;   % 2330: 	addi t1,t1,12 %
000006b5 : 000003b3;   % 2331: 	mv t2,zero			# t2, contador de colunas %
000006b6 : 00000e33;   % 2332: 	mv t3,zero			# t3, contador de linhas %
000006b7 : 01000e93;   % 2333: 	li t4,16 %
000006b8 : 01000f13;   % 2334: 	li t5,16 %
000006b9 : 00032f83;   % 2338: 	lw t6,0(t1) 			# guarda uma word do tile %
000006ba : 01f2a023;   % 2339: 	sw t6,0(t0) 			# salva no render de colisao %
000006bb : 00428293;   % 2341: 	addi t0,t0,4			# avanca o endereco do bitmap em 1 %
000006bc : 00430313;   % 2342: 	addi t1,t1,4 			# avanca o endereco da imagem em 1		 %
000006bd : 00438393;   % 2344: 	addi t2,t2,4 			# avanca o contador de colunas em 1 %
000006be : ffd3c6e3;   % 2345: 	blt t2,t4,SaveTileRenderCol 	# enquanto a linha nao estiver completa, continua desenhando ela %
000006bf : 01028293;   % 2347: 	addi t0,t0,16 			# avanca para a proxima linha do render %
000006c0 : 000003b3;   % 2349: 	mv t2,zero 			# reseta o contador de colunas %
000006c1 : 001e0e13;   % 2350: 	addi t3,t3,1 			# avanca o contador de linhas em 1 %
000006c2 : fdee4ee3;   % 2351: 	blt t3,t5,SaveTileRenderCol 	# enquanto o contador de linhas for menor que a altura repete a funcao %
000006c3 : 001a0a13;   % 2354: 	addi s4,s4,1			# avanca para o proximo codigo de tile %
000006c4 : 001a8a93;   % 2355: 	addi s5,s5,1			# avanca o contador de tiles %
000006c5 : 00400393;   % 2357: 	li t2,4 %
000006c6 : 007a8463;   % 2358: 	beq s5,t2,FimRenderCol		# se ja foram todos os 4 tiles segue com o CollisionUpdate %
000006c7 : f15ff06f;   % 2359: 	j LoopRenderCol %
000006c8 : 00012083;   % 2367: 	lw ra,0(sp) %
000006c9 : 00412403;   % 2368: 	lw s0,4(sp) %
000006ca : 00812483;   % 2369: 	lw s1,8(sp) %
000006cb : 00c12903;   % 2370: 	lw s2,12(sp) %
000006cc : 01012983;   % 2371: 	lw s3,16(sp) %
000006cd : 01412a03;   % 2372: 	lw s4,20(sp) %
000006ce : 01812a83;   % 2373: 	lw s5,24(sp) %
000006cf : 01c12b03;   % 2374: 	lw s6,28(sp) %
000006d0 : 02010113;   % 2375: 	addi sp,sp,32 %
000006d1 : 00008067;   % 2377: 	ret  %
000006d2 : 0fc0e297;   % 2386: 	lhu t0,OffsetX %
000006d3 : 4c02d283;   % 2386:  %
000006d4 : 00f2f413;   % 2387: 	andi s0,t0,0xf		# s0, resto de offset X por 16 %
000006d5 : 0042d493;   % 2388: 	srli s1,t0,4		# s1, divisao de offset X por 16 %
000006d6 : 0fc0e317;   % 2390: 	lhu t1,OffsetY %
000006d7 : 4b235303;   % 2390:  %
000006d8 : 00f37913;   % 2391: 	andi s2,t1,0xf		# s2, resto de offset Y por 16 %
000006d9 : 00435993;   % 2392: 	srli s3,t1,4		# s3, divisao de offset Y por 16 %
000006da : 00000a33;   % 2394: 	mv s4,zero		# s4, contador de colunas de tiles %
000006db : 00000ab3;   % 2395: 	mv s5,zero		# s5, contador de linhas de tiles %
000006dc : 00000b33;   % 2396: 	mv s6,zero		# s6, contador total de tiles %
000006dd : 01500b93;   % 2398: 	li s7,21		# s7, numero maximo de tiles na horizontal %
000006de : 01000c13;   % 2399: 	li s8,16		# s8, numero maximo de tiles na vertical %
000006df : 15000c93;   % 2400: 	li s9,336		# s9, numero total de tiles que precisam ser analisados (21 na horizontal * 16 na vertical)  %
000006e0 : 299b0663;   % 2404: 	beq s6,s9,FimPrintMapa	# continua o c�digo quando todos os tiles forem analisados %
000006e1 : 0fc0f517;   % 2406: 	la a0,mapa40x30 %
000006e2 : c3850513;   % 2406:  %
000006e3 : 00052303;   % 2408: 	lw t1,0(a0) %
000006e4 : 00950533;   % 2410: 	add a0,a0,s1		# adiciona offsetX/16 %
000006e5 : 01450533;   % 2411: 	add a0,a0,s4		# adiciona contador de colunas %
000006e6 : 013002b3;   % 2413: 	mv t0,s3		# adiciona offsetY/16 %
000006e7 : 015282b3;   % 2414: 	add t0,t0,s5		# adiciona contador de linhas %
000006e8 : 026282b3;   % 2415: 	mul t0,t0,t1		# multiplica por 40 (tamanho das linhas do mapa completo) %
000006e9 : 00550533;   % 2416: 	add a0,a0,t0		 %
000006ea : 00c50513;   % 2418: 	addi a0,a0,12 %
000006eb : 00054283;   % 2419: 	lbu t0,0(a0)		# armazena o valor do tile a ser salvo %
000006ec : 00100313;   % 2421: 	li t1,1			# analisa os codigos de tile %
000006ed : 02628663;   % 2422: 	beq t0,t1,GetTile1 %
000006ee : 00200313;   % 2423: 	li t1,2 %
000006ef : 02628c63;   % 2424: 	beq t0,t1,GetTile2 %
000006f0 : 00300313;   % 2425: 	li t1,3 %
000006f1 : 04628263;   % 2426: 	beq t0,t1,GetTile3 %
000006f2 : 00400313;   % 2427: 	li t1,4 %
000006f3 : 04628863;   % 2428: 	beq t0,t1,GetTile4 %
000006f4 : 00500313;   % 2429: 	li t1,5 %
000006f5 : 04628e63;   % 2430: 	beq t0,t1,GetTile5 %
000006f6 : 00600313;   % 2431: 	li t1,6 %
000006f7 : 06628463;   % 2432: 	beq t0,t1,GetTile6 %
000006f8 : 0fc0e597;   % 2435: 	la a1,grama %
000006f9 : 6a058593;   % 2435:  %
000006fa : 0fc14797;   % 2436: 	la a5,emptyCol %
000006fb : 0b478793;   % 2436:  %
000006fc : 0680006f;   % 2437: 	j GotTile %
000006fd : 0fc0e597;   % 2439: 	la a1,chao %
000006fe : 58058593;   % 2439:  %
000006ff : 0fc14797;   % 2440: 	la a5,emptyCol %
00000700 : 0a078793;   % 2440:  %
00000701 : 0540006f;   % 2441: 	j GotTile %
00000702 : 0fc0e597;   % 2443: 	la a1,plataforma1 %
00000703 : 78458593;   % 2443:  %
00000704 : 0fc14797;   % 2444: 	la a5,plataforma1Col %
00000705 : 19878793;   % 2444:  %
00000706 : 0400006f;   % 2445: 	j GotTile %
00000707 : 0fc0f597;   % 2447: 	la a1,plataforma2 %
00000708 : 87c58593;   % 2447:  %
00000709 : 0fc14797;   % 2448: 	la a5,plataforma2Col %
0000070a : 29078793;   % 2448:  %
0000070b : 02c0006f;   % 2449: 	j GotTile %
0000070c : 0fc0f597;   % 2451: 	la a1,plataforma3 %
0000070d : 97458593;   % 2451:  %
0000070e : 0fc14797;   % 2452: 	la a5,plataforma3Col %
0000070f : 38878793;   % 2452:  %
00000710 : 0180006f;   % 2453: 	j GotTile %
00000711 : 0fc0f597;   % 2455: 	la a1,blocoExemp %
00000712 : a6c58593;   % 2455:  %
00000713 : 0fc14797;   % 2456: 	la a5,blocoExempCol %
00000714 : f4478793;   % 2456:  %
00000715 : 0040006f;   % 2457: 	j GotTile %
00000716 : fff00613;   % 2461: 	addi a2,zero,-1 %
00000717 : 000a0a63;   % 2462: 	beq s4,zero,DoneColOffset	# define a2 como -1 se for a primeira coluna %
00000718 : 00100613;   % 2464: 	addi a2,zero,1		 %
00000719 : fffb8293;   % 2465: 	addi t0,s7,-1 %
0000071a : 005a0463;   % 2466: 	beq s4,t0,DoneColOffset		# define a2 como 1 se for a ultima coluna %
0000071b : 00000633;   % 2468: 	mv a2,zero			# define a2 como 0 se for a qualquer uma das outras colunas  %
0000071c : fff00693;   % 2471: 	addi a3,zero,-1 %
0000071d : 000a8a63;   % 2472: 	beq s5,zero,DoneLineOffset	# define a2 como -1 se for a primeira linha %
0000071e : 00100693;   % 2474: 	addi a3,zero,1 %
0000071f : fffc0293;   % 2475: 	addi t0,s8,-1 %
00000720 : 005a8463;   % 2476: 	beq s5,t0,DoneLineOffset	# define a2 como 1 se for a ultima linha %
00000721 : 000006b3;   % 2478: 	mv a3,zero			# define a2 como 0 se for a qualquer uma das outras linhas %
00000722 : 02061463;   % 2481: 	bne a2,zero,SaveTile		# se for uma coluna inicial ou final vai para SaveTile %
00000723 : 02069263;   % 2482: 	bne a3,zero,SaveTile		# se for uma linha inicial ou final vai para SaveTile %
00000724 : 0ec0006f;   % 2484: 	j SaveCenterTile		# tiles do meio s�o mais simples ent�o podem ser salvos mais rapidamente %
00000725 : 001a0a13;   % 2487: 	addi s4,s4,1			# avanca contador de colunas de tiles %
00000726 : 001b0b13;   % 2488: 	addi s6,s6,1			# avanca contador total de tile %
00000727 : 017a5463;   % 2489: 	bge s4,s7,NextLine		# se estiver no fim de uma linha vai para a proxima %
00000728 : ee1ff06f;   % 2490: 	j LoopBuild %
00000729 : 00000a33;   % 2493: 	mv s4,zero		 %
0000072a : 001a8a93;   % 2494: 	addi s5,s5,1			# avanca contador de linhas %
0000072b : ed5ff06f;   % 2495: 	j LoopBuild %
0000072c : 01400333;   % 2500: 	mv t1,s4 %
0000072d : 00431313;   % 2502: 	slli t1,t1,4			# multiplica numero da coluna por 16 (tamanho dos tiles) %
0000072e : 00064463;   % 2503: 	blt a2,zero,FirstCol %
0000072f : 40830333;   % 2505: 	sub t1,t1,s0			# resto do offset X subtra�do do bitmap (puxa para a esquerda as colunas, se ocorrer na 1a = erro) %
00000730 : 015003b3;   % 2508: 	mv t2,s5 %
00000731 : 14000293;   % 2509: 	li t0,320 %
00000732 : 025383b3;   % 2510: 	mul t2,t2,t0			# multiplica numero da linha por 320 (tamanho das linhas do bitmap) %
00000733 : 00439393;   % 2511: 	slli t2,t2,4			# multiplica numero da linha por 16 (tamanho dos tiles) %
00000734 : 0006c663;   % 2512: 	blt a3,zero,FirstLine %
00000735 : 025902b3;   % 2514: 	mul t0,s2,t0 %
00000736 : 405383b3;   % 2515: 	sub t2,t2,t0			# resto do offset Y vezes 320 subtra�do do bitmap (sobe as linhas, se ocorrer na 1a = erro) %
00000737 : 0fc0e717;   % 2518: 	lw a4,BitmapFrame %
00000738 : 32472703;   % 2518:  %
00000739 : 006702b3;   % 2519: 	add t0,a4,t1 %
0000073a : 007282b3;   % 2520: 	add t0,t0,t2 			# t0 = endereco base para salvar o sprite do tile %
0000073b : 00c58313;   % 2522: 	addi t1,a1,12		# endereco do sprite mais spriteHeader %
0000073c : 000003b3;   % 2524: 	mv t2,zero			# contador de colunas do tile %
0000073d : 00000e33;   % 2525: 	mv t3,zero			# contador de linhas do tile	 %
0000073e : 408c0eb3;   % 2527: 	sub t4,s8,s0			 %
0000073f : 00064863;   % 2528: 	blt a2,zero,SetColSize		# na 1a coluna a largura do tile ser� 16-OffsetX %
00000740 : 00800eb3;   % 2529: 	mv t4,s0 %
00000741 : 00c04463;   % 2530: 	bgt a2,zero,SetColSize		# na ultima coluna a largura do tile ser� OffsetX %
00000742 : 0005ae83;   % 2531: 	lw t4,0(a1)			# nas outras colunas a largura do tile � 16 %
00000743 : f80e84e3;   % 2533: 	beq t4,zero,FimSaveTile 	# se a ultima coluna nao estiver aparecendo, t4 = 0 e o tile pode ser skipado %
00000744 : 412c0f33;   % 2535: 	sub t5,s8,s2		 %
00000745 : 0006c863;   % 2536: 	blt a3,zero,SetLineSize		# na 1a linha a altura do tile ser� 16-OffsetY %
00000746 : 01200f33;   % 2537: 	mv t5,s2 %
00000747 : 00d04463;   % 2538: 	bgt a3,zero,SetLineSize		# na 1a linha a altura do tile ser� OffsetY %
00000748 : 0045af03;   % 2539: 	lw t5,4(a1)			# nas outras linhas a altura do tile � 16 %
00000749 : f60f08e3;   % 2541: 	beq t5,zero,FimSaveTile 	# se a ultima linha nao estiver aparecendo, t5 = 0 e o tile pode ser skipado %
0000074a : 0006d863;   % 2543: 	bge a3,zero,NotFirstLine %
0000074b : 01200fb3;   % 2545: 	mv t6,s2 %
0000074c : 004f9f93;   % 2546: 	slli t6,t6,4 %
0000074d : 01f30333;   % 2547: 	add t1,t1,t6			# adiciona o tamanho das linhas fora da tela ao endereco do sprite %
0000074e : 00065463;   % 2552: 	bge a2,zero,NotFirstCol %
0000074f : 00830333;   % 2554: 	add t1,t1,s0			# adiciona resto do offset X ao endereco do sprite %
00000750 : 00034f83;   % 2559: 	lbu t6,0(t1) 			# guarda um pixel do sprite %
00000751 : 01f28023;   % 2560: 	sb t6,0(t0) 			# desenha no bitmap display um pixel do sprite (j� que tamanho das linhas pode variar de 1 a 16) %
00000752 : 00128293;   % 2562: 	addi t0,t0,1 			# avanca o endereco do bitmap display %
00000753 : 00130313;   % 2563: 	addi t1,t1,1 			# avanca o endereco da imagem %
00000754 : 00138393;   % 2565: 	addi t2,t2,1 			# avanca o contador de colunas %
00000755 : ffd3c6e3;   % 2566: 	blt t2,t4,TileLine 		# enquanto a linha nao estiver completa, continua desenhando ela %
00000756 : 00c05663;   % 2568: 	ble a2,zero,NotLastCol %
00000757 : 01830333;   % 2570: 	add t1,t1,s8			 %
00000758 : 40830333;   % 2571: 	sub t1,t1,s0			# se estiver na ultima coluna, adiciona 16-OffsetX ao endereco do sprite %
00000759 : 14028293;   % 2574: 	addi t0,t0,320 			# avanca para a proxima linha do bitmap %
0000075a : 41d282b3;   % 2575: 	sub t0,t0,t4 			# subtrai a largura do sprite %
0000075b : 000003b3;   % 2577: 	mv t2,zero 			# reseta o contador de colunas %
0000075c : 001e0e13;   % 2578: 	addi t3,t3,1 			# avanca o contador de linhas %
0000075d : fdee42e3;   % 2579: 	blt t3,t5,PreTileLine 		# enquanto o contador de linhas for menor que a altura repete a funcao %
0000075e : f1dff06f;   % 2581: 	j FimSaveTile  %
0000075f : 01400333;   % 2586: 	mv t1,s4 %
00000760 : 00431313;   % 2587: 	slli t1,t1,4			# multiplica numero da coluna por 16 (tamanho dos tiles) %
00000761 : 40830333;   % 2588: 	sub t1,t1,s0			# subtrai endereco do bitmap por OffsetX (ja que nesse caso ele sempre sera no minimo 16)  %
00000762 : 015003b3;   % 2590: 	mv t2,s5 %
00000763 : 14000293;   % 2591: 	li t0,320 %
00000764 : 025383b3;   % 2592: 	mul t2,t2,t0			# multiplica numero da linha por 320 (tamanho das linhas do bitmap) %
00000765 : 00439393;   % 2593: 	slli t2,t2,4			# multiplica numero da linha por 16 (tamanho dos tiles) %
00000766 : 025902b3;   % 2594: 	mul t0,s2,t0 %
00000767 : 405383b3;   % 2595: 	sub t2,t2,t0			# subtrai endereco do bitmap por 320xOffsetY (ja que nesse caso ele sempre sera no minimo 320x16)  %
00000768 : 0fc0e297;   % 2597: 	lw t0,BitmapFrame %
00000769 : 2602a283;   % 2597:  %
0000076a : 006282b3;   % 2598: 	add t0,t0,t1 %
0000076b : 007282b3;   % 2599: 	add t0,t0,t2 			# t0, endereco base para salvar o sprite do tile %
0000076c : 00c58313;   % 2601: 	addi t1,a1,12		# endereco do sprite mais spriteHeader %
0000076d : 000003b3;   % 2603: 	mv t2,zero			# contador de colunas do tile %
0000076e : 00000e33;   % 2604: 	mv t3,zero			# contador de linhas do tile	 %
0000076f : 0005ae83;   % 2606: 	lw t4,0(a1) 			# guarda a largura do tile %
00000770 : 0045af03;   % 2607: 	lw t5,4(a1)			# guarda a altura do tile %
00000771 : 00034f83;   % 2611: 	lbu t6,0(t1) 			# guarda um pixel do sprite (nao pode ser word por nao estar sempre alinhado com o endereco) %
00000772 : 01f28023;   % 2612: 	sb t6,0(t0) 			# desenha no bitmap display (4 pixels separadamente) %
00000773 : 00134f83;   % 2613: 	lbu t6,1(t1) 			 %
00000774 : 01f280a3;   % 2614: 	sb t6,1(t0) %
00000775 : 00234f83;   % 2615: 	lbu t6,2(t1) 			 %
00000776 : 01f28123;   % 2616: 	sb t6,2(t0) %
00000777 : 00334f83;   % 2617: 	lbu t6,3(t1) 			 %
00000778 : 01f281a3;   % 2618: 	sb t6,3(t0) %
00000779 : 00428293;   % 2620: 	addi t0,t0,4			# avanca o endereco do bitmap display %
0000077a : 00430313;   % 2621: 	addi t1,t1,4 			# avanca o endereco da imagem %
0000077b : 00438393;   % 2623: 	addi t2,t2,4 			# avanca o contador de colunas %
0000077c : fdd3cae3;   % 2624: 	blt t2,t4,CenterTileLine 	# enquanto a linha nao estiver completa, continua desenhando ela %
0000077d : 14028293;   % 2626: 	addi t0,t0,320 			# avanca para a proxima linha do bitmap %
0000077e : 41d282b3;   % 2627: 	sub t0,t0,t4 			# subtrai a largura do sprite %
0000077f : 000003b3;   % 2629: 	mv t2,zero 			# reseta o contador de colunas %
00000780 : 001e0e13;   % 2630: 	addi t3,t3,1 			# avanca o contador de linhas %
00000781 : fdee40e3;   % 2631: 	blt t3,t5,CenterTileLine 	# enquanto o contador de linhas for menor que a altura repete a funcao %
00000782 : e8dff06f;   % 2633: 	j FimSaveTile  %
00000783 : 00008067;   % 2636: 	ret %
END;
